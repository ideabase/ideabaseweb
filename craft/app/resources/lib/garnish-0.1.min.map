{"version":3,"sources":["Base.js","garnish.js","BaseDrag.js","CheckboxSelect.js","ContextMenu.js","Drag.js","DragDrop.js","DragMove.js","DragSort.js","EscManager.js","HUD.js","LightSwitch.js","Menu.js","MenuBtn.js","MixedInput.js","Modal.js","NiceText.js","Pill.js","Select.js","SelectMenu.js","garnish-0.1.js"],"names":["$","getErd","erd","elementResizeDetectorMaker","triggerResizeEvent","elem","trigger","Base","extend","_instance","_static","prototype","_prototyping","proto","this","call","base","constructor","klass","_constructing","apply","arguments","ancestor","forEach","implement","toString","valueOf","type","init","source","value","length","test","method","previous","returnValue","toSource","hidden","i","key","desc","Object","getOwnPropertyDescriptor","defineProperty","version","object","block","context","undefined","String","Garnish","$win","window","$doc","document","$bod","body","rtl","hasClass","ltr","$scrollContainer","DELETE_KEY","SHIFT_KEY","CTRL_KEY","ALT_KEY","RETURN_KEY","ESC_KEY","SPACE_KEY","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","A_KEY","S_KEY","CMD_KEY","PRIMARY_CLICK","SECONDARY_CLICK","X_AXIS","Y_AXIS","FX_DURATION","TEXT_NODE","log","msg","console","_isMobileBrowser","_isMobileOrTabletBrowser","isMobileBrowser","detectTablets","a","navigator","userAgent","vendor","opera","RegExp","substr","isArray","val","Array","isJquery","jQuery","isString","hasAttr","attr","isTextNode","nodeType","getOffset","_offset","offset","top","scrollTop","left","scrollLeft","getDist","x1","y1","x2","y2","Math","sqrt","pow","hitTest","x","y","_$elem","_x1","_y1","_x2","outerWidth","_y2","outerHeight","isCursorOver","ev","pageX","pageY","copyTextStyles","target","$source","$target","css","fontFamily","fontSize","fontWeight","letterSpacing","lineHeight","textAlign","textIndent","whiteSpace","wordSpacing","wordWrap","getBodyScrollTop","_scrollTop","_maxScrollTop","height","requestAnimationFrame","raf","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelAnimationFrame","cancel","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","scrollContainerToElement","container","$elem","$container","scrollParent","prop","elemOffset","elemScrollOffset","targetScrollTop","elemHeight","containerHeight","innerHeight","clientHeight","velocity","mobileHA","SHAKE_STEPS","SHAKE_STEP_DURATION","shake","startingPoint","parseInt","isNaN","_properties","getElement","makeArray","getInputBasename","name","replace","getInputPostVal","$input","findInputs","find","getPostData","postData","arrayInputCounters","$inputs","eq","inputName","inputVal","isArrayInput","croppedName","substring","j","copyInputValues","$sourceInputs","$targetInputs","isCtrlKeyPressed","platform","match","metaKey","ctrlKey","altKey","settings","_eventHandlers","_namespace","_$listeners","_disabled","floor","random","_listeners","noop","setSettings","defaults","baseSettings","on","events","data","handler","_normalizeEvents","push","namespace","off","eventHandler","splice","params","_ev","split","_splitEvents","trim","_formatEvents","slice","join","addListener","func","proxy","inArray","removeListener","removeAllListeners","disable","enable","destroy","event","special","activate","setup","namespaces","eventHandle","mousedown.garnish-activate","e","preventDefault","click.garnish-activate","keydown.garnish-activate","keyCode","addClass","removeClass","removeAttr","teardown","textchange","handle","el","args","delay","handleObj","targetData","delayTimeout","resize","listenTo","each","BaseDrag","$items","dragging","mousedownX","mousedownY","realMouseX","realMouseY","mouseX","mouseY","mouseDistX","mouseDistY","mouseOffsetX","mouseOffsetY","$targetItem","scrollProperty","scrollAxis","scrollDist","scrollProxy","scrollFrame","_","items","isPlainObject","addItems","allowDragging","startDragging","onDragStart","drag","didMouseMove","_scrollProperty","axis","_winScrollTop","_minMouseScrollY","windowScrollTargetSize","_scrollAxis","_scrollDist","round","_maxMouseScrollY","_winScrollLeft","_minMouseScrollX","_maxMouseScrollX","width","_cancelWindowScroll","onDrag","stopDragging","onDragStop","item","removeItems","add","index","_deinitItem","removeAllItems","_handleMouseDown","which","$handle","_getItemHandle","currentTarget","is","closest","ignoreHandleSelector","_handleMouseMove","_mouseDist","minMouseDist","_handleMouseUp","_scrollWindow","scrollPos","removeData","CheckboxSelect","$all","$options","$checkboxes","filter","not","onAllChange","isAllChecked","checked","disabled","ContextMenu","options","$menu","showingMenu","counter","buildMenu","menuClass","$ul","appendTo","option","$li","$a","label","onClick","mousedown","hideMenu","showMenu","showing","show","hide","Drag","targetItemWidth","targetItemHeight","targetItemPositionInDraggee","$draggee","otherItems","totalOtherItems","helpers","helperTargets","helperPositions","helperLagIncrement","updateHelperPosProxy","updateHelperPosFrame","lastMouseX","lastMouseY","_returningHelpersToDraggees","draggeeDisplay","setDraggee","findDraggee","helperLagIncrementDividend","concat","toArray","singleHelper","_createHelper","removeDraggee","collapseDraggees","appendDraggee","$newDraggee","oldLength","newLength","draggeeVirtualMidpointX","draggeeVirtualMidpointY","getHelperTargetX","getHelperTargetY","returnHelpersToDraggees","$helper","display","visibility","draggeeOffset","callback","onReturnHelpersToDraggees","$draggeeHelper","clone","copyDraggeeInputValuesToHelper","margin","helper","append","helperPos","_getHelperTarget","position","zIndex","helperBaseZindex","opacity","helperOpacity","_updateHelperPos","_i","_j","_lag","helperLagBase","helperSpacingX","helperSpacingY","_showDraggee","remove","DragDrop","$dropTargets","$activeDropTarget","updateDropTargets","dropTargets","_activeDropTarget","_elem","activeDropTargetClass","onDropTargetChange","fadeOutHelpers","duration","complete","DragMove","DragSort","$heightedContainer","$insertion","insertionVisible","oldDraggeeIndexes","newDraggeeIndexes","closestItem","_midpointVersion","_$prevItem","createInsertion","insertion","magnetStrength","_draggeeOffsetX","_draggeeOffsetY","canInsertBefore","$item","canInsertAfter","_getDraggeeIndexes","moveTargetItemToFront","_getItemIndex","first","insertBefore","_placeInsertionWithDraggee","_clearMidpoints","parent","_removeInsertion","_getClosestItem","_updateInsertion","insertAfter","onSortChange","onInsertionPointChange","indexes","_closestItem","_testForClosestItem","_midpoint","_getItemMidpoint","_startXDist","_lastXDist","abs","_startYDist","_lastYDist","_$otherItem","prev","_xDist","_yDist","last","next","_repositionDraggee","get","_moveDraggeeToItem","_$item","prependTo","_mouseDistX","_mouseDistY","_closestItemMouseDistY","_closestItemMouseDistX","EscManager","handlers","escapeLatest","register","obj","unregister","pop","escManager","HUD","$trigger","$fixedTriggerParent","$hud","$tip","$body","$header","$footer","$mainContainer","$main","$shade","orientation","bodyContents","onShow","onHide","onSubmit","activeHUDs","class","shadeClass","hudClass","tipClass","bodyClass","mainContainerClass","mainClass","updateBody","$parent","offsetParent","closeBtn","html","headerClass","footerClass","stopPropagation","closeOtherHUDs","hudID","updateSizeAndPosition","windowWidth","windowHeight","triggerWidth","triggerHeight","triggerOffset","windowScrollLeft","windowScrollTop","scrollContainerTriggerOffset","scrollContainerScrollLeft","scrollContainerScrollTop","hudBodyWidth","hudBodyHeight","right","bottom","overflow-x","overflow-y","clearances","orientations","relevantSize","windowSpacing","triggerSpacing","tipClasses","maxHudBodyWidth","maxHudBodyHeight","minBodyWidth","minBodyHeight","mainHeight","maxLeft","minLeft","triggerCenter","tipLeft","tipWidth","maxTop","minTop","tipTop","toggle","submit","_handleSubmit","LightSwitch","$outerContainer","$innerContainer","$toggleTarget","dragger","dragStartMargin","outerContainer","turnOn","marginLeft","onChange","turnOff","offMargin","_handleKeyDown","_getMargin","_handleDragStart","_handleDrag","_handleDragStop","Menu","$anchor","_windowWidth","_windowHeight","_windowScrollLeft","_windowScrollTop","_anchorOffset","_anchorWidth","_anchorHeight","_anchorOffsetRight","_anchorOffsetBottom","_menuWidth","_menuHeight","addOptions","attachToElement","anchor","setPositionRelativeToAnchor","topClearance","bottomClearance","align","_alignCenter","rightClearance","leftClearance","_alignRight","_alignLeft","detach","selectOption","onOptionSelect","selectedOption","MenuBtn","$btn","menu","btn","menuAnchor","onMouseDown","onMenuHide","MixedInput","elements","focussedElement","blurTimeout","getElementIndex","isText","onFocus","setFocus","setCarotPos","addTextElement","text","TextElement","addElement","focussedElementIndex","selectionStart","selectionEnd","preVal","postVal","newText","removeElement","$prevElem","$nextElem","prevElemVal","newVal","blurFocussedElement","focus","focusPreviousElement","$from","focusNextElement","pos","parentInput","$stage","focussed","interval","padding","setWidth","getIndex","buildStage","getTextWidth","stageWidth","setInterval","NiceText","checkInput","onBlur","clearInterval","onKeyDown","getVal","setVal","changed","Modal","visible","desiredWidth","desiredHeight","resizeDragger","resizeStartWidth","resizeStartHeight","setContainer","autoShow","instances","draggable","dragHandleSelector","resizable","$resizeDragHandle","closeOtherModals","visibleModal","hideOnShadeClick","hideOnEsc","quickShow","quickHide","max","min-width","min-height","_width","min","getWidth","minGutter","_height","getHeight","onFadeIn","onFadeOut","_handleResizeStart","_handleResize","relativeElemPadding","$hint","$charsLeft","autoHeight","maxLength","showCharsLeft","showingHint","inputBoxSizing","minHeight","initialized","input","isVisible","initialize","getHeightForValue","updateHeight","hint","$hintContainer","charsLeftClass","updateCharsLeft","initializeIfVisible","showHint","hintFadeDuration","hideHint","onTextChange","border-top","border-right","border-bottom","border-left","padding-top","padding-right","padding-bottom","padding-left","-webkit-box-sizing","-moz-box-sizing","box-sizing","onHeightChange","updateHeightIfWidthChanged","_charsLeft","negativeCharsLeftClass","Pill","$btns","$selectedBtn","preventOutlineOnMouseFocus","select","selectNext","nextIndex","_getSelectedBtnIndex","selectPrev","prevIndex","Select","$selectedItems","mousedownTarget","mouseUpTimeout","callbackFrame","$focusable","$first","$last","allowEmpty","checkboxMode","ignoreClick","deselectAll","getItemIndex","isSelected","selectItem","preventScroll","multi","setFocusableItem","focusItem","_selectItems","selectAll","selectRange","sliceFrom","sliceTo","deselectItem","_deselectItems","clearFirst","deselectOthers","toggleItem","_canDeselect","clearMouseUpTimeout","getFirstItem","getLastItem","isPreviousItem","isNextItem","getPreviousItem","getNextItem","getItemToTheLeft","horizontal","vertical","getClosestItem","getItemToTheRight","getItemAbove","getItemBelow","dir","axisProps","closestItemAxisProps","dirProps","closestItemDirectionProps","$thisItem","thisOffset","thisMidpoint","midpointOffset","midpointSizeFunc","otherRowPos","smallestMidpointDiff","$closestItem","step","$otherItem","otherOffset","isNextRow","rowOffset","otherMidpoint","midpointDiff","isWrongDirection","getFurthestItemToTheLeft","getFurthestItem","getFurthestItemToTheRight","getFurthestItemAbove","getFurthestItemBelow","$testItem","totalSelected","getTotalSelected","updateIndexes","itemsChanged","selectionChanged","selectedIndex","selectedClass","onSelectionChange","resetItemOrder","scrollTo","getSelectedItems","shiftKey","_actAsCheckbox","onMouseUp","<","b",">","SelectMenu","selected","build","_addSelectedOptionClass","dom","ul","className","setBtnText","$btnLabel","ulClass"],"mappings":"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","file":"garnish-0.1.min.js","sourcesContent":["/*!\r\n\tBase.js, version 1.1a\r\n\tCopyright 2006-2010, Dean Edwards\r\n\tLicense: http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\nvar Base = function() {\r\n\t// dummy\r\n};\r\n\r\nBase.extend = function(_instance, _static) { // subclass\r\n\tvar extend = Base.prototype.extend;\r\n\r\n\t// build the prototype\r\n\tBase._prototyping = true;\r\n\tvar proto = new this;\r\n\textend.call(proto, _instance);\r\n\tproto.base = function() {\r\n\t\t// call this method from any other method to invoke that method's ancestor\r\n\t};\r\n\tdelete Base._prototyping;\r\n\r\n\t// create the wrapper for the constructor function\r\n\t//var constructor = proto.constructor.valueOf(); //-dean\r\n\tvar constructor = proto.constructor;\r\n\tvar klass = proto.constructor = function() {\r\n\t\tif (!Base._prototyping) {\r\n\t\t\tif (this._constructing || this.constructor == klass) { // instantiation\r\n\t\t\t\tthis._constructing = true;\r\n\t\t\t\tconstructor.apply(this, arguments);\r\n\t\t\t\tdelete this._constructing;\r\n\t\t\t} else if (arguments[0] != null) { // casting\r\n\t\t\t\treturn (arguments[0].extend || extend).call(arguments[0], proto);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// build the class interface\r\n\tklass.ancestor = this;\r\n\tklass.extend = this.extend;\r\n\tklass.forEach = this.forEach;\r\n\tklass.implement = this.implement;\r\n\tklass.prototype = proto;\r\n\tklass.toString = this.toString;\r\n\tklass.valueOf = function(type) {\r\n\t\t//return (type == \"object\") ? klass : constructor; //-dean\r\n\t\treturn (type == \"object\") ? klass : constructor.valueOf();\r\n\t};\r\n\textend.call(klass, _static);\r\n\t// class initialisation\r\n\tif (typeof klass.init == \"function\") klass.init();\r\n\treturn klass;\r\n};\r\n\r\nBase.prototype = {\r\n\textend: function(source, value) {\r\n\t\tif (arguments.length > 1) { // extending with a name/value pair\r\n\t\t\tvar ancestor = this[source];\r\n\t\t\tif (ancestor && (typeof value == \"function\") && // overriding a method?\r\n\t\t\t\t// the valueOf() comparison is to avoid circular references\r\n\t\t\t\t(!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&\r\n\t\t\t\t/\\bbase\\b/.test(value)) {\r\n\t\t\t\t// get the underlying method\r\n\t\t\t\tvar method = value.valueOf();\r\n\t\t\t\t// override\r\n\t\t\t\tvalue = function() {\r\n\t\t\t\t\tvar previous = this.base || Base.prototype.base;\r\n\t\t\t\t\tthis.base = ancestor;\r\n\t\t\t\t\tvar returnValue = method.apply(this, arguments);\r\n\t\t\t\t\tthis.base = previous;\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t\t// point to the underlying method\r\n\t\t\t\tvalue.valueOf = function(type) {\r\n\t\t\t\t\treturn (type == \"object\") ? value : method;\r\n\t\t\t\t};\r\n\t\t\t\tvalue.toString = Base.toString;\r\n\t\t\t}\r\n\t\t\tthis[source] = value;\r\n\t\t} else if (source) { // extending with an object literal\r\n\t\t\tvar extend = Base.prototype.extend;\r\n\t\t\t// if this object has a customised extend method then use it\r\n\t\t\tif (!Base._prototyping && typeof this != \"function\") {\r\n\t\t\t\textend = this.extend || extend;\r\n\t\t\t}\r\n\t\t\tvar proto = {toSource: null};\r\n\t\t\t// do the \"toString\" and other methods manually\r\n\t\t\tvar hidden = [\"constructor\", \"toString\", \"valueOf\"];\r\n\t\t\t// if we are prototyping then include the constructor\r\n\t\t\tvar i = Base._prototyping ? 0 : 1;\r\n\t\t\twhile (key = hidden[i++]) {\r\n\t\t\t\tif (source[key] != proto[key]) {\r\n\t\t\t\t\textend.call(this, key, source[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// copy each of the source object's properties to this object\r\n\t\t\tfor (var key in source) {\r\n\t\t\t\tif (!proto[key]) {\r\n\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(source, key);\r\n\t\t\t\t\tif (typeof desc.value != typeof undefined) {\r\n\t\t\t\t\t\t// set the value normally in case it's a function that needs to be overwritten\r\n\t\t\t\t\t\textend.call(this, key, desc.value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// set it while maintaining the original descriptor settings\r\n\t\t\t\t\t\tObject.defineProperty(this, key, desc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n// initialise\r\nBase = Base.extend({\r\n\tconstructor: function() {\r\n\t\tthis.extend(arguments[0]);\r\n\t}\r\n}, {\r\n\tancestor: Object,\r\n\tversion: \"1.1\",\r\n\r\n\tforEach: function(object, block, context) {\r\n\t\tfor (var key in object) {\r\n\t\t\tif (this.prototype[key] === undefined) {\r\n\t\t\t\tblock.call(context, object[key], key, object);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\timplement: function() {\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tif (typeof arguments[i] == \"function\") {\r\n\t\t\t\t// if it's a function, call it\r\n\t\t\t\targuments[i](this.prototype);\r\n\t\t\t} else {\r\n\t\t\t\t// add the interface using the extend method\r\n\t\t\t\tthis.prototype.extend(arguments[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn String(this.valueOf());\r\n\t}\r\n});\r\n","/*!\n * Garnish\n */\n\n// Bail if Garnish is already defined\nif (typeof Garnish != 'undefined')\n{\n\tthrow 'Garnish is already defined!';\n}\n\n\nGarnish = {\n\n\t// jQuery objects for common elements\n\t$win: $(window),\n\t$doc: $(document),\n\t$bod: $(document.body)\n\n};\n\nGarnish.rtl = Garnish.$bod.hasClass('rtl');\nGarnish.ltr = !Garnish.rtl;\n\nGarnish = $.extend(Garnish, {\n\n\t$scrollContainer: Garnish.$win,\n\n\t// Key code constants\n\tDELETE_KEY:  8,\n\tSHIFT_KEY:  16,\n\tCTRL_KEY:   17,\n\tALT_KEY:    18,\n\tRETURN_KEY: 13,\n\tESC_KEY:    27,\n\tSPACE_KEY:  32,\n\tLEFT_KEY:   37,\n\tUP_KEY:     38,\n\tRIGHT_KEY:  39,\n\tDOWN_KEY:   40,\n\tA_KEY:      65,\n\tS_KEY:      83,\n\tCMD_KEY:    91,\n\n\t// Mouse button constants\n\tPRIMARY_CLICK:   1,\n\tSECONDARY_CLICK: 3,\n\n\t// Axis constants\n\tX_AXIS: 'x',\n\tY_AXIS: 'y',\n\n\tFX_DURATION: 100,\n\n\t// Node types\n\tTEXT_NODE: 3,\n\n\t/**\n\t * Logs a message to the browser's console, if the browser has one.\n\t *\n\t * @param string msg\n\t */\n\tlog: function(msg)\n\t{\n\t\tif (typeof console != 'undefined' && typeof console.log == 'function')\n\t\t{\n\t\t\tconsole.log(msg);\n\t\t}\n\t},\n\n\t_isMobileBrowser: null,\n\t_isMobileOrTabletBrowser: null,\n\n\t/**\n\t * Returns whether this is a mobile browser.\n\t * Detection script courtesy of http://detectmobilebrowsers.com\n\t *\n\t * Last updated: 2014-11-24\n\t *\n\t * @param bool detectTablets\n\t * @return bool\n\t */\n\tisMobileBrowser: function(detectTablets)\n\t{\n\t\tvar key = detectTablets ? '_isMobileOrTabletBrowser' : '_isMobileBrowser';\n\n\t\tif (Garnish[key] === null)\n\t\t{\n\t\t\tvar a = navigator.userAgent || navigator.vendor || window.opera;\n\t\t\tGarnish[key] = ((new RegExp('(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino'+(detectTablets ? '|android|ipad|playbook|silk' : ''), 'i')).test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)));\n\t\t}\n\n\t\treturn Garnish[key];\n\t},\n\n\t/**\n\t * Returns whether a variable is an array.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisArray: function(val)\n\t{\n\t\treturn (val instanceof Array);\n\t},\n\n\t/**\n\t * Returns whether a variable is a jQuery collection.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisJquery: function(val)\n\t{\n\t\treturn (val instanceof jQuery);\n\t},\n\n\t/**\n\t * Returns whether a variable is a string.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisString: function(val)\n\t{\n\t\treturn (typeof val == 'string');\n\t},\n\n\t/**\n\t * Returns whether an element has an attribute.\n\t *\n\t * @see http://stackoverflow.com/questions/1318076/jquery-hasattr-checking-to-see-if-there-is-an-attribute-on-an-element/1318091#1318091\n\t */\n\thasAttr: function(elem, attr)\n\t{\n\t\tvar val = $(elem).attr(attr);\n\t\treturn (typeof val != 'undefined' && val !== false);\n\t},\n\n\t/**\n\t * Returns whether something is a text node.\n\t *\n\t * @param object elem\n\t * @return bool\n\t */\n\tisTextNode: function(elem)\n\t{\n\t\treturn (elem.nodeType == Garnish.TEXT_NODE);\n\t},\n\n\t/**\n\t * Returns the offset of an element within the scroll container, whether that's the window or something else\n\t */\n\tgetOffset: function(elem)\n\t{\n\t\tthis.getOffset._offset = $(elem).offset();\n\n\t\tif (Garnish.$scrollContainer[0] != Garnish.$win[0])\n\t\t{\n\t\t\tthis.getOffset._offset.top += Garnish.$scrollContainer.scrollTop();\n\t\t\tthis.getOffset._offset.left += Garnish.$scrollContainer.scrollLeft();\n\t\t}\n\n\t\treturn this.getOffset._offset;\n\t},\n\n\t/**\n\t * Returns the distance between two coordinates.\n\t *\n\t * @param int x1 The first coordinate's X position.\n\t * @param int y1 The first coordinate's Y position.\n\t * @param int x2 The second coordinate's X position.\n\t * @param int y2 The second coordinate's Y position.\n\t * @return float\n\t */\n\tgetDist: function(x1, y1, x2, y2)\n\t{\n\t\treturn Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));\n\t},\n\n\t/**\n\t * Returns whether an element is touching an x/y coordinate.\n\t *\n\t * @param int    x    The coordinate's X position.\n\t * @param int    y    The coordinate's Y position.\n\t * @param object elem Either an actual element or a jQuery collection.\n\t * @return bool\n\t */\n\thitTest: function(x, y, elem)\n\t{\n\t\tGarnish.hitTest._$elem = $(elem);\n\t\tGarnish.hitTest._offset = Garnish.hitTest._$elem.offset();\n\t\tGarnish.hitTest._x1 = Garnish.hitTest._offset.left;\n\t\tGarnish.hitTest._y1 = Garnish.hitTest._offset.top;\n\t\tGarnish.hitTest._x2 = Garnish.hitTest._x1 + Garnish.hitTest._$elem.outerWidth();\n\t\tGarnish.hitTest._y2 = Garnish.hitTest._y1 + Garnish.hitTest._$elem.outerHeight();\n\n\t\treturn (x >= Garnish.hitTest._x1 && x < Garnish.hitTest._x2 && y >= Garnish.hitTest._y1 && y < Garnish.hitTest._y2);\n\t},\n\n\t/**\n\t * Returns whether the cursor is touching an element.\n\t *\n\t * @param object ev   The mouse event object containing pageX and pageY properties.\n\t * @param object elem Either an actual element or a jQuery collection.\n\t * @return bool\n\t */\n\tisCursorOver: function(ev, elem)\n\t{\n\t\treturn Garnish.hitTest(ev.pageX, ev.pageY, elem);\n\t},\n\n\t/**\n\t * Copies text styles from one element to another.\n\t *\n\t * @param object source The source element. Can be either an actual element or a jQuery collection.\n\t * @param object target The target element. Can be either an actual element or a jQuery collection.\n\t */\n\tcopyTextStyles: function(source, target)\n\t{\n\t\tvar $source = $(source),\n\t\t\t$target = $(target);\n\n\t\t$target.css({\n\t\t\tfontFamily:    $source.css('fontFamily'),\n\t\t\tfontSize:      $source.css('fontSize'),\n\t\t\tfontWeight:    $source.css('fontWeight'),\n\t\t\tletterSpacing: $source.css('letterSpacing'),\n\t\t\tlineHeight:    $source.css('lineHeight'),\n\t\t\ttextAlign:     $source.css('textAlign'),\n\t\t\ttextIndent:    $source.css('textIndent'),\n\t\t\twhiteSpace:    $source.css('whiteSpace'),\n\t\t\twordSpacing:   $source.css('wordSpacing'),\n\t\t\twordWrap:      $source.css('wordWrap')\n\t\t});\n\t},\n\n\t/**\n\t * Returns the body's real scrollTop, discarding any window banding in Safari.\n\t *\n\t * @return int\n\t */\n\tgetBodyScrollTop: function()\n\t{\n\t\tGarnish.getBodyScrollTop._scrollTop = document.body.scrollTop;\n\n\t\tif (Garnish.getBodyScrollTop._scrollTop < 0)\n\t\t{\n\t\t\tGarnish.getBodyScrollTop._scrollTop = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tGarnish.getBodyScrollTop._maxScrollTop = Garnish.$bod.outerHeight() - Garnish.$win.height();\n\n\t\t\tif (Garnish.getBodyScrollTop._scrollTop > Garnish.getBodyScrollTop._maxScrollTop)\n\t\t\t{\n\t\t\t\tGarnish.getBodyScrollTop._scrollTop = Garnish.getBodyScrollTop._maxScrollTop;\n\t\t\t}\n\t\t}\n\n\t\treturn Garnish.getBodyScrollTop._scrollTop;\n\t},\n\n\trequestAnimationFrame: (\n\t\tfunction()\n\t\t{\n\t\t\tvar raf = (\n\t\t\t\twindow.requestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\tfunction(fn){ return window.setTimeout(fn, 20); }\n\t\t\t);\n\n\t\t\treturn function(fn){ return raf(fn); };\n\t\t}\n\t)(),\n\n\tcancelAnimationFrame: (\n\t\tfunction()\n\t\t{\n\t\t\tvar cancel = (\n\t\t\t\twindow.cancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.clearTimeout\n\t\t\t);\n\n\t\t\treturn function(id){ return cancel(id); };\n\t\t}\n\t)(),\n\n\t/**\n\t * Scrolls a container element to an element within it.\n\t *\n\t * @param object container Either an actual element or a jQuery collection.\n\t * @param object elem      Either an actual element or a jQuery collection.\n\t */\n\tscrollContainerToElement: function(container, elem)\n\t{\n\t\tif (typeof elem === typeof undefined)\n\t\t{\n\t\t\tvar $elem = $(container);\n\t\t\t\t$container = $elem.scrollParent();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar $container = $(container),\n\t\t\t\t$elem = $(elem);\n\t\t}\n\n\t\tif ($container.prop('nodeName') === 'HTML' || $container[0] == Garnish.$doc[0])\n\t\t{\n\t\t\t$container = Garnish.$win;\n\t\t}\n\n\t\tvar scrollTop = $container.scrollTop(),\n\t\t\telemOffset = $elem.offset().top;\n\n\t\tif ($container[0] == window)\n\t\t{\n\t\t\tvar elemScrollOffset = elemOffset - scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar elemScrollOffset = elemOffset - $container.offset().top;\n\t\t}\n\n\t\tvar targetScrollTop = false;\n\n\t\t// Is the element above the fold?\n\t\tif (elemScrollOffset < 0)\n\t\t{\n\t\t\ttargetScrollTop = scrollTop + elemScrollOffset - 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar elemHeight = $elem.outerHeight(),\n\t\t\t\tcontainerHeight = ($container[0] == window ? window.innerHeight : $container[0].clientHeight);\n\n\t\t\t// Is it below the fold?\n\t\t\tif (elemScrollOffset + elemHeight > containerHeight)\n\t\t\t{\n\t\t\t\ttargetScrollTop = scrollTop + (elemScrollOffset - (containerHeight - elemHeight)) + 10;\n\t\t\t}\n\t\t}\n\n\t\tif (targetScrollTop !== false)\n\t\t{\n\t\t\t// Velocity only allows you to scroll to an arbitrary position if you're scrolling the main window\n\t\t\tif ($container[0] == window)\n\t\t\t{\n\t\t\t\t$('html').velocity('scroll', {\n\t\t\t\t\toffset: targetScrollTop+'px',\n\t\t\t\t\tmobileHA: false\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$container.scrollTop(targetScrollTop);\n\t\t\t}\n\t\t}\n\t},\n\n\tSHAKE_STEPS: 10,\n\tSHAKE_STEP_DURATION: 25,\n\n\t/**\n\t * Shakes an element.\n\t *\n\t * @param mixed  elem Either an actual element or a jQuery collection.\n\t * @param string prop The property that should be adjusted (default is 'margin-left').\n\t */\n\tshake: function(elem, prop)\n\t{\n\t\tvar $elem = $(elem);\n\n\t\tif (!prop)\n\t\t{\n\t\t\tprop = 'margin-left';\n\t\t}\n\n\t\tvar startingPoint = parseInt($elem.css(prop));\n\t\tif (isNaN(startingPoint))\n\t\t{\n\t\t\tstartingPoint = 0;\n\t\t}\n\n\t\tfor (var i = 0; i <= Garnish.SHAKE_STEPS; i++)\n\t\t{\n\t\t\t(function(i)\n\t\t\t{\n\t\t\t\tsetTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tGarnish.shake._properties = {};\n\t\t\t\t\tGarnish.shake._properties[prop] = startingPoint + (i % 2 ? -1 : 1) * (10-i);\n\t\t\t\t\t$elem.velocity(Garnish.shake._properties, Garnish.SHAKE_STEP_DURATION);\n\t\t\t\t}, (Garnish.SHAKE_STEP_DURATION * i));\n\t\t\t})(i);\n\t\t}\n\t},\n\n\t/**\n\t * Returns the first element in an array or jQuery collection.\n\t *\n\t * @param mixed elem\n\t * @return mixed\n\t */\n\tgetElement: function(elem)\n\t{\n\t\treturn $.makeArray(elem)[0];\n\t},\n\n\t/**\n\t * Returns the beginning of an input's name= attribute value with any [bracktes] stripped out.\n\t *\n\t * @param object elem\n\t * @return string|null\n\t */\n\tgetInputBasename: function(elem)\n\t{\n\t\tvar name = $(elem).attr('name');\n\n\t\tif (name)\n\t\t{\n\t\t\treturn name.replace(/\\[.*/, '');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Returns an input's value as it would be POSTed.\n\t * So unchecked checkboxes and radio buttons return null,\n\t * and multi-selects whose name don't end in \"[]\" only return the last selection\n\t *\n\t * @param jQuery $input\n\t * @return mixed\n\t */\n\tgetInputPostVal: function($input)\n\t{\n\t\tvar type = $input.attr('type'),\n\t\t\tval  = $input.val();\n\n\t\t// Is this an unchecked checkbox or radio button?\n\t\tif ((type == 'checkbox' || type == 'radio'))\n\t\t{\n\t\t\tif ($input.prop('checked'))\n\t\t\t{\n\t\t\t\treturn val;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any array values whose input name doesn't end in \"[]\"\n\t\t//  - e.g. a multi-select\n\t\telse if (Garnish.isArray(val) && $input.attr('name').substr(-2) != '[]')\n\t\t{\n\t\t\tif (val.length)\n\t\t\t{\n\t\t\t\treturn val[val.length-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// Just return the value\n\t\telse\n\t\t{\n\t\t\treturn val;\n\t\t}\n\t},\n\n\t/**\n\t * Returns the inputs within a container\n\t *\n\t * @param mixed container The container element. Can be either an actual element or a jQuery collection.\n\t * @return jQuery\n\t */\n\tfindInputs: function(container)\n\t{\n\t\treturn $(container).find('input,text,textarea,select,button');\n\t},\n\n\t/**\n\t * Returns the post data within a container.\n\t *\n\t * @param mixed container\n\t * @return array\n\t */\n\tgetPostData: function(container)\n\t{\n\t\tvar postData = {},\n\t\t\tarrayInputCounters = {},\n\t\t\t$inputs = Garnish.findInputs(container);\n\n\t\tfor (var i = 0; i < $inputs.length; i++)\n\t\t{\n\t\t\tvar $input = $inputs.eq(i);\n\n\t\t\tif ($input.prop('disabled'))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar inputName = $input.attr('name');\n\t\t\tif (!inputName)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar inputVal = Garnish.getInputPostVal($input);\n\t\t\tif (inputVal === null)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar isArrayInput = (inputName.substr(-2) == '[]');\n\n\t\t\tif (isArrayInput)\n\t\t\t{\n\t\t\t\t// Get the cropped input name\n\t\t\t\tvar croppedName = inputName.substring(0, inputName.length-2);\n\n\t\t\t\t// Prep the input counter\n\t\t\t\tif (typeof arrayInputCounters[croppedName] == 'undefined')\n\t\t\t\t{\n\t\t\t\t\tarrayInputCounters[croppedName] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!Garnish.isArray(inputVal))\n\t\t\t{\n\t\t\t\tinputVal = [inputVal];\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < inputVal.length; j++)\n\t\t\t{\n\t\t\t\tif (isArrayInput)\n\t\t\t\t{\n\t\t\t\t\tvar inputName = croppedName+'['+arrayInputCounters[croppedName]+']';\n\t\t\t\t\tarrayInputCounters[croppedName]++;\n\t\t\t\t}\n\n\t\t\t\tpostData[inputName] = inputVal[j];\n\t\t\t}\n\t\t}\n\n\t\treturn postData;\n\t},\n\n\tcopyInputValues: function(source, target)\n\t{\n\t\tvar $sourceInputs = Garnish.findInputs(source),\n\t\t\t$targetInputs = Garnish.findInputs(target);\n\n\t\tfor (var i = 0; i < $sourceInputs.length; i++)\n\t\t{\n\t\t\tif (typeof $targetInputs[i] == typeof undefined)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$targetInputs.eq(i).val(\n\t\t\t\t$sourceInputs.eq(i).val()\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether the \"Ctrl\" key is pressed (or ⌘ if this is a Mac) for a given keyboard event\n\t *\n\t * @param ev The keyboard event\n\t *\n\t * @return boolean Whether the \"Ctrl\" key is pressed\n\t */\n\tisCtrlKeyPressed: function(ev)\n\t{\n\t\tif (window.navigator.platform.match(/Mac/))\n\t\t{\n\t\t\t// metaKey maps to ⌘ on Macs\n\t\t\treturn ev.metaKey;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Both altKey and ctrlKey == true on some Windows keyboards when the right-hand ALT key is pressed\n\t\t\t// so just be safe and make sure altKey == false\n\t\t\treturn (ev.ctrlKey && !ev.altKey);\n\t\t}\n\t}\n});\n\n\n/**\n * Garnish base class\n */\nGarnish.Base = Base.extend({\n\n\tsettings: null,\n\n\t_eventHandlers: null,\n\t_namespace: null,\n\t_$listeners: null,\n\t_disabled: false,\n\n\tconstructor: function()\n\t{\n\t\tthis._eventHandlers = [];\n\t\tthis._namespace = '.Garnish'+Math.floor(Math.random()*1000000000);\n\t\tthis._listeners = [];\n\t\tthis.init.apply(this, arguments);\n\t},\n\n\tinit: $.noop,\n\n\tsetSettings: function(settings, defaults)\n\t{\n\t\tvar baseSettings = (typeof this.settings == 'undefined' ? {} : this.settings);\n\t\tthis.settings = $.extend({}, baseSettings, defaults, settings);\n\t},\n\n\ton: function(events, data, handler)\n\t{\n\t\tif (typeof data == 'function')\n\t\t{\n\t\t\thandler = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\tvar events = this._normalizeEvents(events);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tvar ev = events[i];\n\n\t\t\tthis._eventHandlers.push({\n\t\t\t\ttype: ev[0],\n\t\t\t\tnamespace: ev[1],\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler\n\t\t\t});\n\t\t}\n\t},\n\n\toff: function(events, handler)\n\t{\n\t\tvar events = this._normalizeEvents(events);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tvar ev = events[i];\n\n\t\t\tfor (var j = this._eventHandlers.length - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tvar eventHandler = this._eventHandlers[j];\n\n\t\t\t\tif (eventHandler.type == ev[0] && (!ev[1] || eventHandler.namespace == ev[1]) && eventHandler.handler === handler)\n\t\t\t\t{\n\t\t\t\t\tthis._eventHandlers.splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttrigger: function(type, data)\n\t{\n\t\tvar ev = {\n\t\t\ttype: type,\n\t\t\ttarget: this\n\t\t};\n\n\t\tif (typeof params == 'undefined')\n\t\t{\n\t\t\tparams = [];\n\t\t}\n\n\t\tfor (var i = 0; i < this._eventHandlers.length; i++)\n\t\t{\n\t\t\tvar handler = this._eventHandlers[i];\n\n\t\t\tif (handler.type == type)\n\t\t\t{\n\t\t\t\tvar _ev = $.extend({ data: handler.data }, data, ev);\n\t\t\t\thandler.handler(_ev)\n\t\t\t}\n\t\t}\n\t},\n\n\t_normalizeEvents: function(events)\n\t{\n\t\tif (typeof events == 'string')\n\t\t{\n\t\t\tevents = events.split(' ');\n\t\t}\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tif (typeof events[i] == 'string')\n\t\t\t{\n\t\t\t\tevents[i] = events[i].split('.');\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t},\n\n\t_splitEvents: function(events)\n\t{\n\t\tif (typeof events == 'string')\n\t\t{\n\t\t\tevents = events.split(',');\n\n\t\t\tfor (var i = 0; i < events.length; i++)\n\t\t\t{\n\t\t\t\tevents[i] = $.trim(events[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t},\n\n\t_formatEvents: function(events)\n\t{\n\t\tvar events = this._splitEvents(events).slice(0);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tevents[i] += this._namespace;\n\t\t}\n\n\t\treturn events.join(' ');\n\t},\n\n\taddListener: function(elem, events, data, func)\n\t{\n\t\tvar $elem = $(elem);\n\n\t\t// Ignore if there aren't any elements\n\t\tif (!$elem.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tevents = this._splitEvents(events);\n\n\t\t// Param mapping\n\t\tif (typeof func == typeof undefined && typeof data != 'object')\n\t\t{\n\t\t\t// (elem, events, func)\n\t\t\tfunc = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\tif (typeof func == 'function')\n\t\t{\n\t\t\tfunc = $.proxy(func, this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfunc = $.proxy(this, func);\n\t\t}\n\n\t\t$elem.on(this._formatEvents(events), data, $.proxy(function()\n\t\t{\n\t\t\tif (!this._disabled)\n\t\t\t{\n\t\t\t\tfunc.apply(this, arguments);\n\t\t\t}\n\t\t}, this));\n\n\t\t// Remember that we're listening to this element\n\t\tif ($.inArray(elem, this._listeners) == -1)\n\t\t{\n\t\t\tthis._listeners.push(elem);\n\t\t}\n\t},\n\n\tremoveListener: function(elem, events)\n\t{\n\t\t$(elem).off(this._formatEvents(events));\n\t},\n\n\tremoveAllListeners: function(elem)\n\t{\n\t\t$(elem).off(this._namespace);\n\t},\n\n\tdisable: function()\n\t{\n\t\tthis._disabled = true;\n\t},\n\n\tenable: function()\n\t{\n\t\tthis._disabled = false;\n\t},\n\n\tdestroy: function()\n\t{\n\t\tthis.trigger('destroy');\n\t\tthis.removeAllListeners(this._listeners);\n\t}\n});\n\n// Custom events\n// -----------------------------------------------------------------------------\n\nvar erd;\n\nfunction getErd()\n{\n\tif (typeof erd == typeof undefined)\n\t{\n\t\terd = elementResizeDetectorMaker();\n\t}\n\n\treturn erd;\n}\n\nfunction triggerResizeEvent(elem) {\n\t$(elem).trigger('resize');\n};\n\n// Work them into jQuery's event system\n$.extend(jQuery.event.special, {\n\tactivate: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\tvar activateNamespace = this._namespace+'-activate';\n\t\t\tvar $elem = $(this);\n\n\t\t\t$elem.on({\n\t\t\t\t'mousedown.garnish-activate': function(e) {\n\t\t\t\t\t// Prevent buttons from getting focus on click\n\t\t\t\t\te.preventDefault();\n\t\t\t\t},\n\t\t\t\t'click.garnish-activate': function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!$elem.hasClass('disabled'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$elem.trigger('activate');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'keydown.garnish-activate': function(e) {\n\t\t\t\t\t// Ignore if the event was bubbled up, or if it wasn't the space key\n\t\t\t\t\tif (this != $elem[0] || e.keyCode != Garnish.SPACE_KEY) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!$elem.hasClass('disabled'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$elem.addClass('active');\n\n\t\t\t\t\t\tGarnish.$doc.on('keyup.garnish-activate', function(e) {\n\t\t\t\t\t\t\t$elem.removeClass('active');\n\n\t\t\t\t\t\t\tif (e.keyCode == Garnish.SPACE_KEY) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$elem.trigger('activate');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tGarnish.$doc.off('keyup.garnish-activate');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!$elem.hasClass('disabled')) {\n\t\t\t\t$elem.attr('tabindex', '0');\n\t\t\t} else {\n\t\t\t\t$elem.removeAttr('tabindex');\n\t\t\t}\n\t\t},\n\t\tteardown: function() {\n\t\t\t$(this).off('.garnish-activate');\n\t\t}\n\t},\n\n\ttextchange: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\tvar $elem = $(this);\n\t\t\t$elem.data('garnish-textchange-value', $elem.val());\n\t\t\t$elem.on('keypress.garnish-textchange keyup.garnish-textchange change.garnish-textchange blur.garnish-textchange', function(e) {\n\t\t\t\tvar val = $elem.val();\n\t\t\t\tif (val != $elem.data('garnish-textchange-value'))\n\t\t\t\t{\n\t\t\t\t\t$elem.data('garnish-textchange-value', val);\n\t\t\t\t\t$elem.trigger('textchange');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tteardown: function() {\n\t\t\t$(this).off('.garnish-textchange');\n\t\t},\n\t\thandle: function(ev, data) {\n\t\t\tvar el = this;\n\t\t\tvar args = arguments;\n\t\t\tvar delay = data && typeof data.delay != typeof undefined ? data.delay : (ev.data && typeof ev.data.delay != typeof undefined ? ev.data.delay : null);\n\t\t\tvar handleObj = ev.handleObj;\n\t\t\tvar targetData = $.data(ev.target);\n\n\t\t\t// Was this event configured with a delay?\n\t\t\tif (delay) {\n\t\t\t\tif (targetData.delayTimeout) {\n\t\t\t\t\tclearTimeout(targetData.delayTimeout);\n\t\t\t\t}\n\n\t\t\t\ttargetData.delayTimeout = setTimeout(function() {\n\t\t\t\t\thandleObj.handler.apply(el, args);\n\t\t\t\t}, delay);\n\t\t\t} else {\n\t\t\t\treturn handleObj.handler.apply(el, args);\n\t\t\t}\n\t\t}\n\t},\n\n\tresize: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\t// window is the only element that natively supports a resize event\n\t\t\tif (this == window) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$('> :last-child', this).addClass('last');\n\t\t\tgetErd().listenTo(this, triggerResizeEvent)\n\t\t},\n\t\tteardown: function() {\n\t\t\tif (this == window) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tgetErd().removeListener(this, triggerResizeEvent);\n\t\t}\n\t}\n});\n\n// Give them their own element collection chaining methods\njQuery.each(['activate','textchange','resize'], function(i, name) {\n\tjQuery.fn[name] = function(data, fn) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on(name, null, data, fn) :\n\t\t\tthis.trigger(name);\n\t};\n});\n","/**\n * Base drag class\n *\n * Does all the grunt work for manipulating elements via click-and-drag,\n * while leaving the actual element manipulation up to a subclass.\n */\nGarnish.BaseDrag = Garnish.Base.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$items: null,\n\n\tdragging: false,\n\n\tmousedownX: null,\n\tmousedownY: null,\n\trealMouseX: null,\n\trealMouseY: null,\n\tmouseX: null,\n\tmouseY: null,\n\tmouseDistX: null,\n\tmouseDistY: null,\n\tmouseOffsetX: null,\n\tmouseOffsetY: null,\n\n\t$targetItem: null,\n\n\tscrollProperty: null,\n\tscrollAxis: null,\n\tscrollDist: null,\n\tscrollProxy: null,\n\tscrollFrame: null,\n\n\t_: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tthis.settings = $.extend({}, Garnish.BaseDrag.defaults, settings);\n\n\t\tthis.$items = $();\n\t\tthis._ = {};\n\n\t\tif (items)\n\t\t{\n\t\t\tthis.addItems(items);\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether dragging is allowed right now.\n\t */\n\tallowDragging: function()\n\t{\n\t\treturn true;\n\t},\n\n\t/**\n\t * Start Dragging\n\t */\n\tstartDragging: function()\n\t{\n\t\tthis.dragging = true;\n\t\tthis.onDragStart();\n\t},\n\n\t/**\n\t * Drag\n\t */\n\tdrag: function(didMouseMove)\n\t{\n\t\tif (didMouseMove)\n\t\t{\n\t\t\t// Is the mouse up against one of the window edges?\n\t\t\tthis.drag._scrollProperty = null;\n\n\t\t\tif (this.settings.axis != Garnish.X_AXIS)\n\t\t\t{\n\t\t\t\t// Scrolling up?\n\t\t\t\tthis.drag._winScrollTop = Garnish.$win.scrollTop();\n\t\t\t\tthis.drag._minMouseScrollY = this.drag._winScrollTop + Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\tif (this.mouseY < this.drag._minMouseScrollY)\n\t\t\t\t{\n\t\t\t\t\tthis.drag._scrollProperty = 'scrollTop';\n\t\t\t\t\tthis.drag._scrollAxis = 'Y';\n\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseY - this.drag._minMouseScrollY) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Scrolling down?\n\t\t\t\t\tthis.drag._maxMouseScrollY = this.drag._winScrollTop + Garnish.$win.height() - Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\t\tif (this.mouseY > this.drag._maxMouseScrollY)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drag._scrollProperty = 'scrollTop';\n\t\t\t\t\t\tthis.drag._scrollAxis = 'Y';\n\t\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseY - this.drag._maxMouseScrollY) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.drag._scrollProperty && this.settings.axis != Garnish.Y_AXIS)\n\t\t\t{\n\t\t\t\t// Scrolling left?\n\t\t\t\tthis.drag._winScrollLeft = Garnish.$win.scrollLeft();\n\t\t\t\tthis.drag._minMouseScrollX = this.drag._winScrollLeft + Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\tif (this.mouseX < this.drag._minMouseScrollX)\n\t\t\t\t{\n\t\t\t\t\tthis.drag._scrollProperty = 'scrollLeft';\n\t\t\t\t\tthis.drag._scrollAxis = 'X';\n\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseX - this.drag._minMouseScrollX) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Scrolling right?\n\t\t\t\t\tthis.drag._maxMouseScrollX = this.drag._winScrollLeft + Garnish.$win.width() - Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\t\tif (this.mouseX > this.drag._maxMouseScrollX)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drag._scrollProperty = 'scrollLeft';\n\t\t\t\t\t\tthis.drag._scrollAxis = 'X';\n\t\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseX - this.drag._maxMouseScrollX) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.drag._scrollProperty)\n\t\t\t{\n\t\t\t\t// Are we starting to scroll now?\n\t\t\t\tif (!this.scrollProperty)\n\t\t\t\t{\n\t\t\t\t\tif (!this.scrollProxy)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.scrollProxy = $.proxy(this, '_scrollWindow');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.scrollFrame)\n\t\t\t\t\t{\n\t\t\t\t\t\tGarnish.cancelAnimationFrame(this.scrollFrame);\n\t\t\t\t\t\tthis.scrollFrame = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scrollFrame = Garnish.requestAnimationFrame(this.scrollProxy);\n\t\t\t\t}\n\n\t\t\t\tthis.scrollProperty = this.drag._scrollProperty;\n\t\t\t\tthis.scrollAxis = this.drag._scrollAxis;\n\t\t\t\tthis.scrollDist = this.drag._scrollDist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._cancelWindowScroll();\n\t\t\t}\n\t\t}\n\n\t\tthis.onDrag();\n\t},\n\n\t/**\n\t * Stop Dragging\n\t */\n\tstopDragging: function()\n\t{\n\t\tthis.dragging = false;\n\t\tthis.onDragStop();\n\n\t\t// Clear the scroll animation\n\t\tthis._cancelWindowScroll();\n\t},\n\n\t/**\n\t * Add Items\n\t *\n\t * @param mixed items Elements that should be draggable.\n\t */\n\taddItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure this element doesn't belong to another dragger\n\t\t\tif ($.data(item, 'drag'))\n\t\t\t{\n\t\t\t\tGarnish.log('Element was added to more than one dragger');\n\t\t\t\t$.data(item, 'drag').removeItems(item);\n\t\t\t}\n\n\t\t\t// Add the item\n\t\t\t$.data(item, 'drag', this);\n\n\t\t\t// Add the listener\n\t\t\tthis.addListener(item, 'mousedown', '_handleMouseDown');\n\t\t}\n\n\t\tthis.$items = this.$items.add(items);\n\t},\n\n\t/**\n\t * Remove Items\n\t *\n\t * @param mixed items Elements that should no longer be draggable.\n\t */\n\tremoveItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure we actually know about this item\n\t\t\tvar index = $.inArray(item, this.$items);\n\t\t\tif (index != -1)\n\t\t\t{\n\t\t\t\tthis._deinitItem(item);\n\t\t\t\tthis.$items.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Remove All Items\n\t */\n\tremoveAllItems: function()\n\t{\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tthis._deinitItem(this.$items[i]);\n\t\t}\n\n\t\tthis.$items = $();\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.removeAllItems();\n\t\tthis.base();\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('dragStart');\n\t\t\tthis.settings.onDragStart();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('drag');\n\t\t\tthis.settings.onDrag();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('dragStop');\n\t\t\tthis.settings.onDragStop();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t/**\n\t * Handle Mouse Down\n\t */\n\t_handleMouseDown: function(ev)\n\t{\n\t\t// Ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if we already have a target\n\t\tif (this.$targetItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if they didn't actually click on the handle\n\t\tvar $target = $(ev.target),\n\t\t\t$handle = this._getItemHandle(ev.currentTarget);\n\n\t\tif (!$target.is($handle) && !$target.closest($handle).length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the target isn't a button (unless the button is the handle)\n\t\tif (ev.currentTarget != ev.target && this.settings.ignoreHandleSelector)\n\t\t{\n\t\t\tif (\n\t\t\t\t$target.is(this.settings.ignoreHandleSelector) ||\n\t\t\t\t$target.closest(this.settings.ignoreHandleSelector).length\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tev.preventDefault();\n\n\t\t// Make sure that dragging is allowed right now\n\t\tif (!this.allowDragging())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Capture the target\n\t\tthis.$targetItem = $(ev.currentTarget);\n\n\t\t// Capture the current mouse position\n\t\tthis.mousedownX = this.mouseX = ev.pageX;\n\t\tthis.mousedownY = this.mouseY = ev.pageY;\n\n\t\t// Capture the difference between the mouse position and the target item's offset\n\t\tvar offset = this.$targetItem.offset();\n\t\tthis.mouseOffsetX = ev.pageX - offset.left;\n\t\tthis.mouseOffsetY = ev.pageY - offset.top;\n\n\t\t// Listen for mousemove, mouseup\n\t\tthis.addListener(Garnish.$doc, 'mousemove', '_handleMouseMove');\n\t\tthis.addListener(Garnish.$doc, 'mouseup', '_handleMouseUp');\n\t},\n\n\t_getItemHandle: function(item)\n\t{\n\t\tif (this.settings.handle)\n\t\t{\n\t\t\tif (typeof this.settings.handle == 'object')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle);\n\t\t\t}\n\n\t\t\tif (typeof this.settings.handle == 'string')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle, item);\n\t\t\t}\n\n\t\t\tif (typeof this.settings.handle == 'function')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle(item));\n\t\t\t}\n\t\t}\n\n\t\treturn $(item);\n\t},\n\n\t/**\n\t * Handle Mouse Move\n\t */\n\t_handleMouseMove: function(ev)\n\t{\n\t\tev.preventDefault();\n\n\t\tthis.realMouseX = ev.pageX;\n\t\tthis.realMouseY = ev.pageY;\n\n\t\tif (this.settings.axis != Garnish.Y_AXIS)\n\t\t{\n\t\t\tthis.mouseX = ev.pageX;\n\t\t}\n\n\t\tif (this.settings.axis != Garnish.X_AXIS)\n\t\t{\n\t\t\tthis.mouseY = ev.pageY;\n\t\t}\n\n\t\tthis.mouseDistX = this.mouseX - this.mousedownX;\n\t\tthis.mouseDistY = this.mouseY - this.mousedownY;\n\n\t\tif (!this.dragging)\n\t\t{\n\t\t\t// Has the mouse moved far enough to initiate dragging yet?\n\t\t\tthis._handleMouseMove._mouseDist = Garnish.getDist(this.mousedownX, this.mousedownY, this.realMouseX, this.realMouseY);\n\n\t\t\tif (this._handleMouseMove._mouseDist >= Garnish.BaseDrag.minMouseDist)\n\t\t\t{\n\t\t\t\tthis.startDragging();\n\t\t\t}\n\t\t}\n\n\t\tif (this.dragging)\n\t\t{\n\t\t\tthis.drag(true);\n\t\t}\n\t},\n\n\t/**\n\t * Handle Moues Up\n\t */\n\t_handleMouseUp: function(ev)\n\t{\n\t\t// Unbind the document events\n\t\tthis.removeAllListeners(Garnish.$doc);\n\n\t\tif (this.dragging)\n\t\t{\n\t\t\tthis.stopDragging();\n\t\t}\n\n\t\tthis.$targetItem = null;\n\t},\n\n\t/**\n\t * Scroll Window\n\t */\n\t_scrollWindow: function()\n\t{\n\t\tthis._.scrollPos = Garnish.$scrollContainer[this.scrollProperty]();\n\t\tGarnish.$scrollContainer[this.scrollProperty](this._.scrollPos + this.scrollDist);\n\n\t\tthis['mouse'+this.scrollAxis] -= this._.scrollPos - Garnish.$scrollContainer[this.scrollProperty]();\n\t\tthis['realMouse'+this.scrollAxis] = this['mouse'+this.scrollAxis];\n\n\t\tthis.drag();\n\n\t\tthis.scrollFrame = Garnish.requestAnimationFrame(this.scrollProxy);\n\t},\n\n\t/**\n\t * Cancel Window Scroll\n\t */\n\t_cancelWindowScroll: function()\n\t{\n\t\tif (this.scrollFrame)\n\t\t{\n\t\t\tGarnish.cancelAnimationFrame(this.scrollFrame);\n\t\t\tthis.scrollFrame = null;\n\t\t}\n\n\t\tthis.scrollProperty = null;\n\t\tthis.scrollAxis = null;\n\t\tthis.scrollDist = null;\n\t},\n\n\t/**\n\t * Deinitialize an item.\n\t */\n\t_deinitItem: function(item)\n\t{\n\t\tthis.removeAllListeners(item);\n\t\t$.removeData(item, 'drag');\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tminMouseDist: 1,\n\twindowScrollTargetSize: 25,\n\n\tdefaults: {\n\t\thandle: null,\n\t\taxis: null,\n\t\tignoreHandleSelector: 'input, textarea, button, select, .btn',\n\n\t\tonDragStart: $.noop,\n\t\tonDrag:      $.noop,\n\t\tonDragStop:  $.noop\n\t}\n});\n","\n/**\n * Checkbox select class\n */\nGarnish.CheckboxSelect = Garnish.Base.extend({\n\n\t$container: null,\n\t$all: null,\n\t$options: null,\n\n\tinit: function(container)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Is this already a checkbox select?\n\t\tif (this.$container.data('checkboxSelect'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a checkbox select on an element');\n\t\t\tthis.$container.data('checkbox-select').destroy();\n\t\t}\n\n\t\tthis.$container.data('checkboxSelect', this);\n\n\t\tvar $checkboxes = this.$container.find('input');\n\t\tthis.$all = $checkboxes.filter('.all:first');\n\t\tthis.$options = $checkboxes.not(this.$all);\n\n\t\tthis.addListener(this.$all, 'change', 'onAllChange');\n\t},\n\n\tonAllChange: function()\n\t{\n\t\tvar isAllChecked = this.$all.prop('checked');\n\n\t\tthis.$options.prop({\n\t\t\tchecked:  isAllChecked,\n\t\t\tdisabled: isAllChecked\n\t\t});\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$container.removeData('checkboxSelect');\n\t\tthis.base();\n\t}\n});\n","/**\n * Context Menu\n */\nGarnish.ContextMenu = Garnish.Base.extend({\n\n\t$target: null,\n\toptions: null,\n\t$menu: null,\n\tshowingMenu: false,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(target, options, settings)\n\t{\n\t\tthis.$target = $(target);\n\n\t\t// Is this already a context menu target?\n\t\tif (this.$target.data('contextmenu'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a context menu on an element');\n\t\t\tthis.$target.data('contextmenu').destroy();\n\t\t}\n\n\t\tthis.$target.data('contextmenu', this);\n\n\t\tthis.options = options;\n\t\tthis.setSettings(settings, Garnish.ContextMenu.defaults);\n\n\t\tGarnish.ContextMenu.counter++;\n\n\t\tthis.enable();\n\t},\n\n\t/**\n\t * Build Menu\n\t */\n\tbuildMenu: function()\n\t{\n\t\tthis.$menu = $('<div class=\"'+this.settings.menuClass+'\" style=\"display: none\" />');\n\n\t\tvar $ul = $('<ul/>').appendTo(this.$menu);\n\n\t\tfor (var i in this.options)\n\t\t{\n\t\t\tvar option = this.options[i];\n\n\t\t\tif (option == '-')\n\t\t\t{\n\t\t\t\t// Create a new <ul>\n\t\t\t\t$('<hr/>').appendTo(this.$menu);\n\t\t\t\t$ul = $('<ul/>').appendTo(this.$menu);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar $li = $('<li></li>').appendTo($ul),\n\t\t\t\t\t$a = $('<a>'+option.label+'</a>').appendTo($li);\n\n\t\t\t\tif (typeof option.onClick == 'function')\n\t\t\t\t{\n\t\t\t\t\t// maintain the current $a and options.onClick variables\n\t\t\t\t\t(function($a, onClick)\n\t\t\t\t\t{\n\t\t\t\t\t\tsetTimeout($.proxy(function(){\n\t\t\t\t\t\t\t$a.mousedown($.proxy(function(ev)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t\t\t\t// call the onClick callback, with the scope set to the item,\n\t\t\t\t\t\t\t\t// and pass it the event with currentTarget set to the item as well\n\t\t\t\t\t\t\t\tonClick.call(this.currentTarget, $.extend(ev, { currentTarget: this.currentTarget }));\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t}, this), 1);\n\t\t\t\t\t}).call(this, $a, option.onClick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Show Menu\n\t */\n\tshowMenu: function(ev)\n\t{\n\t\t// Ignore left mouse clicks\n\t\tif (ev.type == 'mousedown' && ev.which != Garnish.SECONDARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (ev.type == 'contextmenu')\n\t\t{\n\t\t\t// Prevent the real context menu from showing\n\t\t\tev.preventDefault();\n\t\t}\n\n\t\t// Ignore if already showing\n\t\tif (this.showing && ev.currentTarget == this.currentTarget)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentTarget = ev.currentTarget;\n\n\t\tif (!this.$menu)\n\t\t{\n\t\t\tthis.buildMenu();\n\t\t}\n\n\t\tthis.$menu.appendTo(document.body);\n\t\tthis.$menu.show();\n\t\tthis.$menu.css({ left: ev.pageX+1, top: ev.pageY-4 });\n\n\t\tthis.showing = true;\n\n\t\tsetTimeout($.proxy(function()\n\t\t{\n\t\t\tthis.addListener(Garnish.$doc, 'mousedown', 'hideMenu');\n\t\t}, this), 0);\n\t},\n\n\t/**\n\t * Hide Menu\n\t */\n\thideMenu: function()\n\t{\n\t\tthis.removeListener(Garnish.$doc, 'mousedown');\n\t\tthis.$menu.hide();\n\t\tthis.showing = false;\n\t},\n\n\t/**\n\t * Enable\n\t */\n\tenable: function()\n\t{\n\t\tthis.addListener(this.$target, 'contextmenu,mousedown', 'showMenu');\n\t},\n\n\t/**\n\t * Disable\n\t */\n\tdisable: function()\n\t{\n\t\tthis.removeListener(this.$target, 'contextmenu,mousedown');\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$target.removeData('contextmenu');\n\t\tthis.base();\n\t}\n},\n{\n\tdefaults: {\n\t\tmenuClass: 'menu'\n\t},\n\tcounter: 0\n});\n","/**\n * Drag class\n *\n * Builds on the BaseDrag class by \"picking up\" the selceted element(s),\n * without worrying about what to do when an element is being dragged.\n */\nGarnish.Drag = Garnish.BaseDrag.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\ttargetItemWidth: null,\n\ttargetItemHeight: null,\n\ttargetItemPositionInDraggee: null,\n\n\t$draggee: null,\n\n\totherItems: null,\n\ttotalOtherItems: null,\n\n\thelpers: null,\n\thelperTargets: null,\n\thelperPositions: null,\n\thelperLagIncrement: null,\n\tupdateHelperPosProxy: null,\n\tupdateHelperPosFrame: null,\n\n\tlastMouseX: null,\n\tlastMouseY: null,\n\n\t_returningHelpersToDraggees: false,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.Drag.defaults, settings);\n\t\tthis.base(items, settings);\n\t},\n\n\t/**\n\t * Returns whether dragging is allowed right now.\n\t */\n\tallowDragging: function()\n\t{\n\t\t// Don't allow dragging if we're in the middle of animating the helpers back to the draggees\n\t\treturn !this._returningHelpersToDraggees;\n\t},\n\n\t/**\n\t * Start Dragging\n\t */\n\tstartDragging: function()\n\t{\n\t\t// Reset some things\n\t\tthis.helpers = [];\n\t\tthis.helperTargets = [];\n\t\tthis.helperPositions = [];\n\t\tthis.lastMouseX = this.lastMouseY = null;\n\n\t\t// Capture the target item's width/height\n\t\tthis.targetItemWidth  = this.$targetItem.outerWidth();\n\t\tthis.targetItemHeight = this.$targetItem.outerHeight();\n\n\t\t// Save the draggee's display style (block/table-row) so we can re-apply it later\n\t\tthis.draggeeDisplay = this.$targetItem.css('display');\n\n\t\t// Set the $draggee\n\t\tthis.setDraggee(this.findDraggee());\n\n\t\t// Create an array of all the other items\n\t\tthis.otherItems = [];\n\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tvar item = this.$items[i];\n\n\t\t\tif ($.inArray(item, this.$draggee) == -1)\n\t\t\t{\n\t\t\t\tthis.otherItems.push(item);\n\t\t\t}\n\t\t};\n\n\t\tthis.totalOtherItems = this.otherItems.length;\n\n\t\t// Keep the helpers following the cursor, with a little lag to smooth it out\n\t\tif (!this.updateHelperPosProxy)\n\t\t{\n\t\t\tthis.updateHelperPosProxy = $.proxy(this, '_updateHelperPos');\n\t\t}\n\n\t\tthis.helperLagIncrement = this.helpers.length == 1 ? 0 : this.settings.helperLagIncrementDividend / (this.helpers.length-1);\n\t\tthis.updateHelperPosFrame = Garnish.requestAnimationFrame(this.updateHelperPosProxy);\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Sets the draggee.\n\t */\n\tsetDraggee: function($draggee)\n\t{\n\t\t// Record the target item's position in the draggee\n\t\tthis.targetItemPositionInDraggee = $.inArray(this.$targetItem[0], $draggee.add(this.$targetItem[0]));\n\n\t\t// Keep the target item at the front of the list\n\t\tthis.$draggee = $([ this.$targetItem[0] ].concat($draggee.not(this.$targetItem).toArray()));\n\n\t\t// Create the helper(s)\n\t\tif (this.settings.singleHelper)\n\t\t{\n\t\t\tthis._createHelper(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = 0; i < this.$draggee.length; i++)\n\t\t\t{\n\t\t\t\tthis._createHelper(i);\n\t\t\t}\n\t\t}\n\n\t\tif (this.settings.removeDraggee)\n\t\t{\n\t\t\tthis.$draggee.hide();\n\t\t}\n\t\telse if (this.settings.collapseDraggees)\n\t\t{\n\t\t\tthis.$targetItem.css('visibility', 'hidden');\n\t\t\tthis.$draggee.not(this.$targetItem).hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$draggee.css('visibility', 'hidden');\n\t\t}\n\t},\n\n\t/**\n\t * Appends additional items to the draggee.\n\t */\n\tappendDraggee: function($newDraggee)\n\t{\n\t\tif (!$newDraggee.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.settings.collapseDraggees)\n\t\t{\n\t\t\tvar oldLength = this.$draggee.length;\n\t\t}\n\n\t\tthis.$draggee = $(this.$draggee.toArray().concat($newDraggee.toArray()));\n\n\t\t// Create new helpers?\n\t\tif (!this.settings.collapseDraggees)\n\t\t{\n\t\t\tvar newLength = this.$draggee.length;\n\n\t\t\tfor (var i = oldLength; i < newLength; i++)\n\t\t\t{\n\t\t\t\tthis._createHelper(i);\n\t\t\t}\n\t\t}\n\n\t\tif (this.settings.removeDraggee || this.settings.collapseDraggees)\n\t\t{\n\t\t\t$newDraggee.hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$newDraggee.css('visibility', 'hidden');\n\t\t}\n\t},\n\n\t/**\n\t * Drag\n\t */\n\tdrag: function(didMouseMove)\n\t{\n\t\t// Update the draggee's virtual midpoint\n\t\tthis.draggeeVirtualMidpointX = this.mouseX - this.mouseOffsetX + (this.targetItemWidth / 2);\n\t\tthis.draggeeVirtualMidpointY = this.mouseY - this.mouseOffsetY + (this.targetItemHeight / 2);\n\n\t\tthis.base(didMouseMove);\n\t},\n\n\t/**\n\t * Stop Dragging\n\t */\n\tstopDragging: function()\n\t{\n\t\t// Clear the helper animation\n\t\tGarnish.cancelAnimationFrame(this.updateHelperPosFrame);\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Identifies the item(s) that are being dragged.\n\t */\n\tfindDraggee: function()\n\t{\n\t\tswitch (typeof this.settings.filter)\n\t\t{\n\t\t\tcase 'function':\n\t\t\t{\n\t\t\t\treturn this.settings.filter();\n\t\t\t}\n\n\t\t\tcase 'string':\n\t\t\t{\n\t\t\t\treturn this.$items.filter(this.settings.filter);\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\treturn this.$targetItem;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target X position\n\t */\n\tgetHelperTargetX: function()\n\t{\n\t\treturn this.mouseX - this.mouseOffsetX;\n\t},\n\n\t/**\n\t * Returns the helper’s target Y position\n\t */\n\tgetHelperTargetY: function()\n\t{\n\t\treturn this.mouseY - this.mouseOffsetY;\n\t},\n\n\t/**\n\t * Return Helpers to Draggees\n\t */\n\treturnHelpersToDraggees: function()\n\t{\n\t\tthis._returningHelpersToDraggees = true;\n\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\tvar $draggee = this.$draggee.eq(i),\n\t\t\t\t$helper = this.helpers[i];\n\n\t\t\t$draggee.css({\n\t\t\t\tdisplay:    this.draggeeDisplay,\n\t\t\t\tvisibility: 'hidden'\n\t\t\t});\n\n\t\t\tvar draggeeOffset = $draggee.offset();\n\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tvar callback = $.proxy(this, '_showDraggee');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar callback = null;\n\t\t\t}\n\n\t\t\t$helper.velocity({left: draggeeOffset.left, top: draggeeOffset.top}, Garnish.FX_DURATION, callback);\n\t\t}\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\tonReturnHelpersToDraggees: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('returnHelpersToDraggees');\n\t\t\tthis.settings.onReturnHelpersToDraggees();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t/**\n\t * Creates a helper.\n\t */\n\t_createHelper: function(i)\n\t{\n\t\tvar $draggee = this.$draggee.eq(i),\n\t\t\t$draggeeHelper = $draggee.clone().addClass('draghelper');\n\n\t\tif (this.settings.copyDraggeeInputValuesToHelper)\n\t\t{\n\t\t\tGarnish.copyInputValues($draggee, $draggeeHelper);\n\t\t}\n\n\t\t// Remove any name= attributes so radio buttons don't lose their values\n\t\t$draggeeHelper.find('[name]').attr('name', '');\n\n\t\t$draggeeHelper.css({\n\t\t\twidth: $draggee.width() + 1, // Prevent the brower from wrapping text if the width was actually a fraction of a pixel larger\n\t\t\theight: $draggee.height(),\n\t\t\tmargin: 0\n\t\t});\n\n\t\tif (this.settings.helper)\n\t\t{\n\t\t\tif (typeof this.settings.helper == 'function')\n\t\t\t{\n\t\t\t\t$draggeeHelper = this.settings.helper($draggeeHelper);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$draggeeHelper = $(this.settings.helper).append($draggeeHelper);\n\t\t\t}\n\t\t}\n\n\t\t$draggeeHelper.appendTo(Garnish.$bod);\n\n\t\tvar helperPos = this._getHelperTarget(i);\n\n\t\t$draggeeHelper.css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: helperPos.top,\n\t\t\tleft: helperPos.left,\n\t\t\tzIndex: this.settings.helperBaseZindex + this.$draggee.length - i,\n\t\t\topacity: this.settings.helperOpacity\n\t\t});\n\n\t\tthis.helperPositions[i] = {\n\t\t\ttop:  helperPos.top,\n\t\t\tleft: helperPos.left\n\t\t};\n\n\t\tthis.helpers.push($draggeeHelper);\n\t},\n\n\t/**\n\t * Update Helper Position\n\t */\n\t_updateHelperPos: function()\n\t{\n\t\t// Has the mouse moved?\n\t\tif (this.mouseX !== this.lastMouseX || this.mouseY !== this.lastMouseY)\n\t\t{\n\t\t\t// Get the new target helper positions\n\t\t\tfor (this._updateHelperPos._i = 0; this._updateHelperPos._i < this.helpers.length; this._updateHelperPos._i++)\n\t\t\t{\n\t\t\t\tthis.helperTargets[this._updateHelperPos._i] = this._getHelperTarget(this._updateHelperPos._i);\n\t\t\t}\n\n\t\t\tthis.lastMouseX = this.mouseX;\n\t\t\tthis.lastMouseY = this.mouseY;\n\t\t}\n\n\t\t// Gravitate helpers toward their target positions\n\t\tfor (this._updateHelperPos._j = 0; this._updateHelperPos._j < this.helpers.length; this._updateHelperPos._j++)\n\t\t{\n\t\t\tthis._updateHelperPos._lag = this.settings.helperLagBase + (this.helperLagIncrement * this._updateHelperPos._j);\n\n\t\t\tthis.helperPositions[this._updateHelperPos._j] = {\n\t\t\t\tleft: this.helperPositions[this._updateHelperPos._j].left + ((this.helperTargets[this._updateHelperPos._j].left - this.helperPositions[this._updateHelperPos._j].left) / this._updateHelperPos._lag),\n\t\t\t\ttop:  this.helperPositions[this._updateHelperPos._j].top  + ((this.helperTargets[this._updateHelperPos._j].top  - this.helperPositions[this._updateHelperPos._j].top) / this._updateHelperPos._lag)\n\t\t\t};\n\n\t\t\tthis.helpers[this._updateHelperPos._j].css(this.helperPositions[this._updateHelperPos._j]);\n\t\t}\n\n\t\t// Let's do this again on the next frame!\n\t\tthis.updateHelperPosFrame = Garnish.requestAnimationFrame(this.updateHelperPosProxy);\n\t},\n\n\t/**\n\t * Get the helper position for a draggee helper\n\t */\n\t_getHelperTarget: function(i)\n\t{\n\t\treturn {\n\t\t\tleft: this.getHelperTargetX() + (this.settings.helperSpacingX * i),\n\t\t\ttop:  this.getHelperTargetY() + (this.settings.helperSpacingY * i)\n\t\t};\n\t},\n\n\t_showDraggee: function()\n\t{\n\t\t// Remove the helpers\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\tthis.helpers[i].remove();\n\t\t}\n\n\t\tthis.helpers = null;\n\n\t\tthis.$draggee.show().css('visibility', 'inherit');\n\n\t\tthis.onReturnHelpersToDraggees();\n\n\t\tthis._returningHelpersToDraggees = false;\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tfilter: null,\n\t\tsingleHelper: false,\n\t\tcollapseDraggees: false,\n\t\tremoveDraggee: false,\n\t\tcopyDraggeeInputValuesToHelper: false,\n\t\thelperOpacity: 1,\n\t\thelper: null,\n\t\thelperBaseZindex: 1000,\n\t\thelperLagBase: 1,\n\t\thelperLagIncrementDividend: 1.5,\n\t\thelperSpacingX: 5,\n\t\thelperSpacingY: 5,\n\t\tonReturnHelpersToDraggees: $.noop\n\t}\n});\n","/**\n * Drag-and-drop class\n *\n * Builds on the Drag class by allowing you to set up \"drop targets\"\n * which the dragged elemements can be dropped onto.\n */\nGarnish.DragDrop = Garnish.Drag.extend({\n\n\t$dropTargets: null,\n\t$activeDropTarget: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(settings)\n\t{\n\t\tsettings = $.extend({}, Garnish.DragDrop.defaults, settings);\n\t\tthis.base(settings);\n\t},\n\n\tupdateDropTargets: function()\n\t{\n\t\tif (this.settings.dropTargets)\n\t\t{\n\t\t\tif (typeof this.settings.dropTargets == 'function')\n\t\t\t{\n\t\t\t\tthis.$dropTargets = $(this.settings.dropTargets());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.$dropTargets = $(this.settings.dropTargets);\n\t\t\t}\n\n\t\t\t// Discard if it's an empty array\n\t\t\tif (!this.$dropTargets.length)\n\t\t\t{\n\t\t\t\tthis.$dropTargets = null;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tthis.updateDropTargets();\n\t\tthis.$activeDropTarget = null;\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\tif (this.$dropTargets)\n\t\t{\n\t\t\tthis.onDrag._activeDropTarget = null;\n\n\t\t\t// is the cursor over any of the drop target?\n\t\t\tfor (this.onDrag._i = 0; this.onDrag._i < this.$dropTargets.length; this.onDrag._i++)\n\t\t\t{\n\t\t\t\tthis.onDrag._elem = this.$dropTargets[this.onDrag._i];\n\n\t\t\t\tif (Garnish.hitTest(this.mouseX, this.mouseY, this.onDrag._elem))\n\t\t\t\t{\n\t\t\t\t\tthis.onDrag._activeDropTarget = this.onDrag._elem;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// has the drop target changed?\n\t\t\tif (\n\t\t\t\t(this.$activeDropTarget && this.onDrag._activeDropTarget != this.$activeDropTarget[0]) ||\n\t\t\t\t(!this.$activeDropTarget && this.onDrag._activeDropTarget !== null)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// was there a previous one?\n\t\t\t\tif (this.$activeDropTarget)\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget.removeClass(this.settings.activeDropTargetClass);\n\t\t\t\t}\n\n\t\t\t\t// remember the new one\n\t\t\t\tif (this.onDrag._activeDropTarget)\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget = $(this.onDrag._activeDropTarget).addClass(this.settings.activeDropTargetClass);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget = null;\n\t\t\t\t}\n\n\t\t\t\tthis.settings.onDropTargetChange(this.$activeDropTarget);\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tif (this.$dropTargets && this.$activeDropTarget)\n\t\t{\n\t\t\tthis.$activeDropTarget.removeClass(this.settings.activeDropTargetClass);\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Fade Out Helpers\n\t */\n\tfadeOutHelpers: function()\n\t{\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\t(function($draggeeHelper)\n\t\t\t{\n\t\t\t\t$draggeeHelper.velocity('fadeOut', {\n\t\t\t\t\tduration: Garnish.FX_DURATION,\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\t$draggeeHelper.remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(this.helpers[i]);\n\t\t}\n\t}\n},\n{\n\tdefaults: {\n\t\tdropTargets: null,\n\t\tonDropTargetChange: $.noop,\n\t\tactiveDropTargetClass: 'active'\n\t}\n});\n","/**\n * Drag-to-move clas\n *\n * Builds on the BaseDrag class by simply moving the dragged element(s) along with the mouse.\n */\nGarnish.DragMove = Garnish.BaseDrag.extend({\n\n\tonDrag: function(items, settings)\n\t{\n\t\tthis.$targetItem.css({\n\t\t\tleft: this.mouseX - this.mouseOffsetX,\n\t\t\ttop:  this.mouseY - this.mouseOffsetY\n\t\t});\n\t}\n\n});\n","/**\n * Drag-to-sort class\n *\n * Builds on the Drag class by allowing you to sort the elements amongst themselves.\n */\nGarnish.DragSort = Garnish.Drag.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$heightedContainer: null,\n\t$insertion: null,\n\tinsertionVisible: false,\n\toldDraggeeIndexes: null,\n\tnewDraggeeIndexes: null,\n\tclosestItem: null,\n\n\t_midpointVersion: 0,\n\t_$prevItem: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.DragSort.defaults, settings);\n\t\tthis.base(items, settings);\n\t},\n\n\t/**\n\t * Creates the insertion element.\n\t */\n\tcreateInsertion: function()\n\t{\n\t\tif (this.settings.insertion)\n\t\t{\n\t\t\tif (typeof this.settings.insertion == 'function')\n\t\t\t{\n\t\t\t\treturn $(this.settings.insertion(this.$draggee));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn $(this.settings.insertion);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target X position\n\t */\n\tgetHelperTargetX: function()\n\t{\n\t\tif (this.settings.magnetStrength != 1)\n\t\t{\n\t\t\tthis.getHelperTargetX._draggeeOffsetX = this.$draggee.offset().left;\n\t\t\treturn this.getHelperTargetX._draggeeOffsetX + ((this.mouseX - this.mouseOffsetX - this.getHelperTargetX._draggeeOffsetX) / this.settings.magnetStrength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.base();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target Y position\n\t */\n\tgetHelperTargetY: function()\n\t{\n\t\tif (this.settings.magnetStrength != 1)\n\t\t{\n\t\t\tthis.getHelperTargetY._draggeeOffsetY = this.$draggee.offset().top;\n\t\t\treturn this.getHelperTargetY._draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - this.getHelperTargetY._draggeeOffsetY) / this.settings.magnetStrength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.base();\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether the draggee can be inserted before a given item.\n\t */\n\tcanInsertBefore: function($item)\n\t{\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns whether the draggee can be inserted after a given item.\n\t */\n\tcanInsertAfter: function($item)\n\t{\n\t\treturn true;\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tthis.oldDraggeeIndexes = this._getDraggeeIndexes();\n\n\t\t// Are we supposed to be moving the target item to the front, and is it not already there?\n\t\tif (\n\t\t\tthis.settings.moveTargetItemToFront &&\n\t\t\tthis.$draggee.length > 1 &&\n\t\t\tthis._getItemIndex(this.$draggee[0]) > this._getItemIndex(this.$draggee[1])\n\t\t)\n\t\t{\n\t\t\t// Reposition the target item before the other draggee items in the DOM\n\t\t\tthis.$draggee.first().insertBefore(this.$draggee[1]);\n\t\t}\n\n\t\t// Create the insertion\n\t\tthis.$insertion = this.createInsertion();\n\t\tthis._placeInsertionWithDraggee();\n\n\t\tthis.closestItem = null;\n\t\tthis._clearMidpoints();\n\n\t\t//  Get the closest container that has a height\n\t\tif (this.settings.container)\n\t\t{\n\t\t\tthis.$heightedContainer = $(this.settings.container);\n\n\t\t\twhile (!this.$heightedContainer.height())\n\t\t\t{\n\t\t\t\tthis.$heightedContainer = this.$heightedContainer.parent();\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\t// If there's a container set, make sure that we're hovering over it\n\t\tif (this.$heightedContainer && !Garnish.hitTest(this.mouseX, this.mouseY, this.$heightedContainer))\n\t\t{\n\t\t\tif (this.closestItem)\n\t\t\t{\n\t\t\t\tthis.closestItem = null;\n\t\t\t\tthis._removeInsertion();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Is there a new closest item?\n\t\t\tif (\n\t\t\t\tthis.closestItem !== (this.closestItem = this._getClosestItem()) &&\n\t\t\t\tthis.closestItem !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tthis._updateInsertion();\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tthis._removeInsertion();\n\n\t\t// Should we keep the target item where it was?\n\t\tif (!this.settings.moveTargetItemToFront && this.targetItemPositionInDraggee != 0)\n\t\t{\n\t\t\tthis.$targetItem.insertAfter(this.$draggee.eq(this.targetItemPositionInDraggee));\n\t\t}\n\n\t\t// Return the helpers to the draggees\n\t\tthis.returnHelpersToDraggees();\n\n\t\tthis.base();\n\n\t\t// Has the item actually moved?\n\t\tthis.$items = $().add(this.$items);\n\t\tthis.newDraggeeIndexes = this._getDraggeeIndexes();\n\n\t\tif (this.newDraggeeIndexes.join(',') != this.oldDraggeeIndexes.join(','))\n\t\t{\n\t\t\tthis.onSortChange();\n\t\t}\n\t},\n\n\t/**\n\t * On Insertion Point Change event\n\t */\n\tonInsertionPointChange: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('insertionPointChange');\n\t\t\tthis.settings.onInsertionPointChange();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Sort Change event\n\t */\n\tonSortChange: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('sortChange');\n\t\t\tthis.settings.onSortChange();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t_getItemIndex: function(item)\n\t{\n\t\treturn $.inArray(item, this.$items);\n\t},\n\n\t_getDraggeeIndexes: function()\n\t{\n\t\tvar indexes = [];\n\n\t\tfor (var i = 0; i < this.$draggee.length; i++)\n\t\t{\n\t\t\tindexes.push(this._getItemIndex(this.$draggee[i]))\n\t\t}\n\n\t\treturn indexes;\n\t},\n\n\t/**\n\t * Returns the closest item to the cursor.\n\t */\n\t_getClosestItem: function()\n\t{\n\t\tthis._getClosestItem._closestItem = null;\n\n\t\t// Start by checking the draggee/insertion, if either are visible\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (!this.settings.removeDraggee)\n\t\t{\n\t\t\tthis._testForClosestItem(this.$draggee[0]);\n\t\t}\n\t\telse if (this.insertionVisible)\n\t\t{\n\t\t\tthis._testForClosestItem(this.$insertion[0]);\n\t\t}\n\n\t\t// Check items before the draggee\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this._getClosestItem._closestItem) this._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._closestItem)\n\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._startXDist = this._getClosestItem._lastXDist = this._getClosestItem._closestItem ? Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX) : null;\n\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._startYDist = this._getClosestItem._lastYDist = this._getClosestItem._closestItem ? Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY) : null;\n\n\t\tthis._getClosestItem._$otherItem = this.$draggee.first().prev();\n\n\t\twhile (this._getClosestItem._$otherItem.length)\n\t\t{\n\t\t\t// See if we're just getting further away\n\t\t\tthis._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._$otherItem[0]);\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._xDist = Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._yDist = Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t\tif (\n\t\t\t\t(this.settings.axis == Garnish.Y_AXIS || (this._getClosestItem._lastXDist !== null && this._getClosestItem._xDist > this._getClosestItem._lastXDist)) &&\n\t\t\t\t(this.settings.axis == Garnish.X_AXIS || (this._getClosestItem._lastYDist !== null && this._getClosestItem._yDist > this._getClosestItem._lastYDist))\n\t\t\t)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._xDist;\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._yDist;\n\n\t\t\t// Give the extending class a chance to allow/disallow this item\n\t\t\tif (this.canInsertBefore(this._getClosestItem._$otherItem))\n\t\t\t{\n\t\t\t\tthis._testForClosestItem(this._getClosestItem._$otherItem[0]);\n\t\t\t}\n\n\t\t\t// Prep the next item\n\t\t\tthis._getClosestItem._$otherItem = this._getClosestItem._$otherItem.prev();\n\t\t}\n\n\t\t// Check items after the draggee\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._startXDist;\n\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._startYDist;\n\n\t\tthis._getClosestItem._$otherItem = this.$draggee.last().next();\n\n\t\twhile (this._getClosestItem._$otherItem.length)\n\t\t{\n\t\t\t// See if we're just getting further away\n\t\t\tthis._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._$otherItem[0]);\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._xDist = Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._yDist = Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t\tif (\n\t\t\t\t(this.settings.axis == Garnish.Y_AXIS || (this._getClosestItem._lastXDist !== null && this._getClosestItem._xDist > this._getClosestItem._lastXDist)) &&\n\t\t\t\t(this.settings.axis == Garnish.X_AXIS || (this._getClosestItem._lastYDist !== null && this._getClosestItem._yDist > this._getClosestItem._lastYDist))\n\t\t\t)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._xDist;\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._yDist;\n\n\t\t\t// Give the extending class a chance to allow/disallow this item\n\t\t\tif (this.canInsertAfter(this._getClosestItem._$otherItem))\n\t\t\t{\n\t\t\t\tthis._testForClosestItem(this._getClosestItem._$otherItem[0]);\n\t\t\t}\n\n\t\t\t// Prep the next item\n\t\t\tthis._getClosestItem._$otherItem = this._getClosestItem._$otherItem.next();\n\t\t}\n\n\t\t// Return the result\n\t\t// ---------------------------------------------------------------------\n\n\t\t// Ignore if it's the draggee or insertion\n\t\tif (\n\t\t\tthis._getClosestItem._closestItem != this.$draggee[0] &&\n\t\t\t(!this.insertionVisible || this._getClosestItem._closestItem != this.$insertion[0])\n\t\t)\n\t\t{\n\t\t\treturn this._getClosestItem._closestItem;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t_clearMidpoints: function()\n\t{\n\t\tthis._midpointVersion++;\n\t\tthis._$prevItem = null;\n\t},\n\n\t_getItemMidpoint: function(item)\n\t{\n\t\tif ($.data(item, 'midpointVersion') != this._midpointVersion)\n\t\t{\n\t\t\t// If this isn't the draggee, temporarily move the draggee to this item\n\t\t\tthis._getItemMidpoint._repositionDraggee = (\n\t\t\t\t!this.settings.axis &&\n\t\t\t\t(!this.settings.removeDraggee || this.insertionVisible) &&\n\t\t\t\titem != this.$draggee[0] &&\n\t\t\t\t(!this.$insertion || item != this.$insertion.get(0))\n\t\t\t);\n\n\t\t\tif (this._getItemMidpoint._repositionDraggee)\n\t\t\t{\n\t\t\t\t// Is this the first time we've had to temporarily reposition the draggee since the last midpoint clearing?\n\t\t\t\tif (!this._$prevItem)\n\t\t\t\t{\n\t\t\t\t\tthis._$prevItem = (this.insertionVisible ? this.$insertion : this.$draggee).first().prev();\n\t\t\t\t}\n\n\t\t\t\tthis._moveDraggeeToItem(item);\n\n\t\t\t\t// Now figure out which element we're actually getting the midpoint of\n\t\t\t\tif (!this.settings.removeDraggee)\n\t\t\t\t{\n\t\t\t\t\tthis._getItemMidpoint._$item = this.$draggee;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis._getItemMidpoint._$item = this.$insertion;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We're actually getting the midpoint of this item\n\t\t\t\tthis._getItemMidpoint._$item = $(item);\n\t\t\t}\n\n\t\t\tthis._getItemMidpoint._offset = this._getItemMidpoint._$item.offset();\n\n\t\t\t$.data(item, 'midpoint', {\n\t\t\t\tx: this._getItemMidpoint._offset.left + this._getItemMidpoint._$item.outerWidth() / 2,\n\t\t\t\ty: this._getItemMidpoint._offset.top + this._getItemMidpoint._$item.outerHeight() / 2\n\t\t\t});\n\n\t\t\t$.data(item, 'midpointVersion', this._midpointVersion);\n\n\t\t\tdelete this._getItemMidpoint._$item;\n\t\t\tdelete this._getItemMidpoint._offset;\n\n\t\t\tif (this._getItemMidpoint._repositionDraggee)\n\t\t\t{\n\t\t\t\t// Move the draggee back\n\t\t\t\tif (this._$prevItem.length)\n\t\t\t\t{\n\t\t\t\t\tthis.$draggee.insertAfter(this._$prevItem);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.$draggee.prependTo(this.$draggee.parent());\n\t\t\t\t}\n\n\t\t\t\tthis._placeInsertionWithDraggee();\n\t\t\t}\n\t\t}\n\n\t\treturn $.data(item, 'midpoint');\n\t},\n\n\t_testForClosestItem: function(item)\n\t{\n\t\tthis._testForClosestItem._midpoint = this._getItemMidpoint(item);\n\t\tthis._testForClosestItem._mouseDistX = Math.abs(this._testForClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\tthis._testForClosestItem._mouseDistY = Math.abs(this._testForClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t// Don't even consider items that are further away on the Y axis\n\t\tif (\n\t\t\tthis._getClosestItem._closestItem === null ||\n\t\t\tthis._testForClosestItem._mouseDistY < this._getClosestItem._closestItemMouseDistY ||\n\t\t\t(\n\t\t\t\tthis._testForClosestItem._mouseDistY == this._getClosestItem._closestItemMouseDistY &&\n\t\t\t\tthis._testForClosestItem._mouseDistX <= this._getClosestItem._closestItemMouseDistX\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\tthis._getClosestItem._closestItem          = item;\n\t\t\tthis._getClosestItem._closestItemMouseDistX = this._testForClosestItem._mouseDistX;\n\t\t\tthis._getClosestItem._closestItemMouseDistY = this._testForClosestItem._mouseDistY;\n\t\t}\n\t},\n\n\t/**\n\t * Updates the position of the insertion point.\n\t */\n\t_updateInsertion: function()\n\t{\n\t\tif (this.closestItem)\n\t\t{\n\t\t\tthis._moveDraggeeToItem(this.closestItem);\n\t\t}\n\n\t\t// Now that things have shifted around, invalidate the midpoints\n\t\tthis._clearMidpoints();\n\n\t\tthis.onInsertionPointChange();\n\t},\n\n\t_moveDraggeeToItem: function(item)\n\t{\n\t\t// Going down?\n\t\tif (this.$draggee.index() < $(item).index())\n\t\t{\n\t\t\tthis.$draggee.insertAfter(item);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$draggee.insertBefore(item);\n\t\t}\n\n\t\tthis._placeInsertionWithDraggee();\n\t},\n\n\t_placeInsertionWithDraggee: function()\n\t{\n\t\tif (this.$insertion)\n\t\t{\n\t\t\tthis.$insertion.insertBefore(this.$draggee.first());\n\t\t\tthis.insertionVisible = true;\n\t\t}\n\t},\n\n\t/**\n\t * Removes the insertion, if it's visible.\n\t */\n\t_removeInsertion: function()\n\t{\n\t\tif (this.insertionVisible)\n\t\t{\n\t\t\tthis.$insertion.remove();\n\t\t\tthis.insertionVisible = false;\n\t\t}\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tcontainer: null,\n\t\tinsertion: null,\n\t\tmoveTargetItemToFront: false,\n\t\tmagnetStrength: 1,\n\t\tonInsertionPointChange: $.noop,\n\t\tonSortChange: $.noop\n\t}\n});\n","/**\n * ESC key manager class\n */\nGarnish.EscManager = Garnish.Base.extend({\n\n\thandlers: null,\n\n\tinit: function()\n\t{\n\t\tthis.handlers = [];\n\n\t\tthis.addListener(Garnish.$bod, 'keyup', function(ev)\n\t\t{\n\t\t\tif (ev.keyCode == Garnish.ESC_KEY)\n\t\t\t{\n\t\t\t\tthis.escapeLatest(ev);\n\t\t\t}\n\t\t});\n\t},\n\n\tregister: function(obj, func)\n\t{\n\t\tthis.handlers.push({\n\t\t\tobj: obj,\n\t\t\tfunc: func\n\t\t});\n\t},\n\n\tunregister: function(obj)\n\t{\n\t\tfor (var i = this.handlers.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (this.handlers[i].obj == obj)\n\t\t\t{\n\t\t\t\tthis.handlers.splice(i, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\tescapeLatest: function(ev)\n\t{\n\t\tif (this.handlers.length)\n\t\t{\n\t\t\tvar handler = this.handlers.pop();\n\n\t\t\tif (typeof handler.func == 'function')\n\t\t\t{\n\t\t\t\tvar func = handler.func;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar func = handler.obj[handler.func];\n\t\t\t}\n\n\t\t\tfunc.call(handler.obj, ev);\n\n\t\t\tif (typeof handler.obj.trigger == 'function')\n\t\t\t{\n\t\t\t\thandler.obj.trigger('escape');\n\t\t\t}\n\t\t}\n\t}\n\n});\n\nGarnish.escManager = new Garnish.EscManager();\n","/**\n * HUD\n */\nGarnish.HUD = Garnish.Base.extend({\n\n\t$trigger: null,\n\t$fixedTriggerParent: null,\n\t$hud: null,\n\t$tip: null,\n\t$body: null,\n\t$header: null,\n\t$footer: null,\n\t$mainContainer: null,\n\t$main: null,\n\t$shade: null,\n\n\tshowing: false,\n\torientation: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(trigger, bodyContents, settings) {\n\n\t\tthis.$trigger = $(trigger);\n\n\t\tthis.setSettings(settings, Garnish.HUD.defaults);\n\t\tthis.on('show', this.settings.onShow);\n\t\tthis.on('hide', this.settings.onHide);\n\t\tthis.on('submit', this.settings.onSubmit);\n\n\t\tif (typeof Garnish.HUD.activeHUDs == \"undefined\")\n\t\t{\n\t\t\tGarnish.HUD.activeHUDs = {};\n\t\t}\n\n\t\tthis.$shade = $('<div/>', {'class': this.settings.shadeClass});\n\t\tthis.$hud = $('<div/>', {'class': this.settings.hudClass});\n\t\tthis.$tip = $('<div/>', {'class': this.settings.tipClass}).appendTo(this.$hud);\n\t\tthis.$body = $('<form/>', {'class': this.settings.bodyClass}).appendTo(this.$hud);\n\t\tthis.$mainContainer = $('<div/>', {'class': this.settings.mainContainerClass}).appendTo(this.$body);\n\t\tthis.$main = $('<div/>', {'class': this.settings.mainClass}).appendTo(this.$mainContainer);\n\n\t\tthis.updateBody(bodyContents);\n\n\t\t// See if the trigger is fixed\n\t\tvar $parent = this.$trigger;\n\n\t\tdo {\n\t\t\tif ($parent.css('position') == 'fixed')\n\t\t\t{\n\t\t\t\tthis.$fixedTriggerParent = $parent;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$parent = $parent.offsetParent();\n\t\t}\n\t\twhile ($parent.length && $parent.prop('nodeName') != 'HTML');\n\n\t\tif (this.$fixedTriggerParent)\n\t\t{\n\t\t\tthis.$hud.css('position', 'fixed');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$hud.css('position', 'absolute');\n\t\t}\n\n\t\tthis.show();\n\n\t\tthis.addListener(this.$body, 'submit', '_handleSubmit');\n\t\tthis.addListener(this.$shade, 'click', 'hide');\n\n\t\tif (!this.$fixedTriggerParent && Garnish.$scrollContainer[0] != Garnish.$win[0])\n\t\t{\n\t\t\tthis.addListener(Garnish.$scrollContainer, 'scroll', 'updateSizeAndPosition');\n\t\t}\n\n\t\tif (this.settings.closeBtn)\n\t\t{\n\t\t\tthis.addListener(this.settings.closeBtn, 'activate', 'hide');\n\t\t}\n\t},\n\n\t/**\n\t * Update the body contents\n\t */\n\tupdateBody: function(bodyContents)\n\t{\n\t\tthis.removeListener(this.$main, 'resize');\n\n\t\t// Cleanup\n\t\tthis.$main.html('');\n\n\t\tif (this.$header)\n\t\t{\n\t\t\tthis.$hud.removeClass('has-header');\n\t\t\tthis.$header.remove();\n\t\t\tthis.$header = null;\n\t\t}\n\n\t\tif (this.$footer)\n\t\t{\n\t\t\tthis.$hud.removeClass('has-footer');\n\t\t\tthis.$footer.remove();\n\t\t\tthis.$footer = null;\n\t\t}\n\n\t\t// Append the new body contents\n\t\tthis.$main.append(bodyContents);\n\n\t\t// Look for a header and footer\n\t\tvar $header = this.$main.find('.'+this.settings.headerClass+':first'),\n\t\t\t$footer = this.$main.find('.'+this.settings.footerClass+':first');\n\n\t\tif ($header.length)\n\t\t{\n\t\t\tthis.$header = $header.insertBefore(this.$mainContainer);\n\t\t\tthis.$hud.addClass('has-header');\n\t\t}\n\n\t\tif ($footer.length)\n\t\t{\n\t\t\tthis.$footer = $footer.insertAfter(this.$mainContainer);\n\t\t\tthis.$hud.addClass('has-footer');\n\t\t}\n\t},\n\n\t/**\n\t * Show\n\t */\n\tshow: function(ev)\n\t{\n\t\tif (ev && ev.stopPropagation)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t}\n\n\t\tif (this.showing)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.settings.closeOtherHUDs)\n\t\t{\n\t\t\tfor (var hudID in Garnish.HUD.activeHUDs)\n\t\t\t{\n\t\t\t\tGarnish.HUD.activeHUDs[hudID].hide();\n\t\t\t}\n\t\t}\n\n\t\t// Prevent the browser from jumping\n\t\tthis.$hud.css('top', Garnish.$scrollContainer.scrollTop());\n\n\t\t// Move it to the end of <body> so it gets the highest sub-z-index\n\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\tthis.$hud.appendTo(Garnish.$bod);\n\n\t\tthis.$hud.show();\n\t\tthis.updateSizeAndPosition();\n\n\t\tthis.$shade.show();\n\n\t\tthis.showing = true;\n\t\tGarnish.HUD.activeHUDs[this._namespace] = this;\n\n\t\tGarnish.escManager.register(this, 'hide');\n\n\t\tthis.onShow();\n\n\t\t// Reposition one last time just in case\n\t\tGarnish.requestAnimationFrame($.proxy(this, 'updateSizeAndPosition'));\n\n\t\tthis.enable();\n\t},\n\n\tonShow: function()\n\t{\n\t\tthis.trigger('show');\n\t},\n\n\tupdateSizeAndPosition: function()\n\t{\n\t\tthis.removeListener(this.$main, 'resize');\n\n\t\tvar windowWidth,\n\t\t\twindowHeight,\n\t\t\ttriggerWidth,\n\t\t\ttriggerHeight,\n\t\t\ttriggerOffset,\n\t\t\twindowScrollLeft,\n\t\t\twindowScrollTop,\n\t\t\tscrollContainerTriggerOffset,\n\t\t\tscrollContainerScrollLeft,\n\t\t\tscrollContainerScrollTop,\n\t\t\thudBodyWidth,\n\t\t\thudBodyHeight;\n\n\t\t// Get the window sizes and trigger offset\n\t\t// ---------------------------------------------------------------------\n\n\t\twindowWidth = Garnish.$win.width();\n\t\twindowHeight = Garnish.$win.height();\n\t\twindowScrollLeft = Garnish.$win.scrollLeft();\n\t\twindowScrollTop = Garnish.$win.scrollTop();\n\n\t\t// Get the trigger's dimensions\n\t\ttriggerWidth = this.$trigger.outerWidth();\n\t\ttriggerHeight = this.$trigger.outerHeight();\n\n\t\t// Get the offsets for each side of the trigger element\n\t\ttriggerOffset = this.$trigger.offset();\n\n\t\tif (this.$fixedTriggerParent)\n\t\t{\n\t\t\ttriggerOffset.left -= windowScrollLeft;\n\t\t\ttriggerOffset.top -= windowScrollTop;\n\n\t\t\tscrollContainerTriggerOffset = triggerOffset;\n\n\t\t\twindowScrollLeft = 0;\n\t\t\twindowScrollTop = 0;\n\t\t\tscrollContainerScrollLeft = 0;\n\t\t\tscrollContainerScrollTop = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscrollContainerTriggerOffset = Garnish.getOffset(this.$trigger);\n\n\t\t\tscrollContainerScrollLeft = Garnish.$scrollContainer.scrollLeft();\n\t\t\tscrollContainerScrollTop = Garnish.$scrollContainer.scrollTop();\n\t\t}\n\n\t\ttriggerOffset.right = triggerOffset.left + triggerWidth;\n\t\ttriggerOffset.bottom = triggerOffset.top + triggerHeight;\n\n\t\tscrollContainerTriggerOffset.right = scrollContainerTriggerOffset.left + triggerWidth;\n\t\tscrollContainerTriggerOffset.bottom = scrollContainerTriggerOffset.top + triggerHeight;\n\n\t\t// Get the HUD dimensions\n\t\tthis.$hud.css({\n\t\t\twidth: ''\n\t\t});\n\n\t\tthis.$mainContainer.css({\n\t\t\theight: '',\n\t\t\t'overflow-x': '',\n\t\t\t'overflow-y': ''\n\t\t});\n\n\t\thudBodyWidth = this.$body.width();\n\t\thudBodyHeight = this.$body.height();\n\n\t\t// Determine the best orientation for the HUD\n\t\t// ---------------------------------------------------------------------\n\n\t\t// Find the actual available top/right/bottom/left clearances\n\t\tvar clearances = {\n\t\t\tbottom: windowHeight + scrollContainerScrollTop - scrollContainerTriggerOffset.bottom,\n\t\t\ttop:    scrollContainerTriggerOffset.top - scrollContainerScrollTop,\n\t\t\tright:  windowWidth + scrollContainerScrollLeft - scrollContainerTriggerOffset.right,\n\t\t\tleft:   scrollContainerTriggerOffset.left - scrollContainerScrollLeft\n\t\t};\n\n\t\t// Find the first position that has enough room\n\t\tthis.orientation = null;\n\n\t\tfor (var i = 0; i < this.settings.orientations.length; i++)\n\t\t{\n\t\t\tvar orientation = this.settings.orientations[i],\n\t\t\t\trelevantSize = (orientation == 'top' || orientation == 'bottom' ? hudBodyHeight : hudBodyWidth);\n\n\t\t\tif (clearances[orientation] - (this.settings.windowSpacing + this.settings.triggerSpacing) >= relevantSize)\n\t\t\t{\n\t\t\t\t// This is the first orientation that has enough room in order of preference, so we'll go with this\n\t\t\t\tthis.orientation = orientation;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!this.orientation || clearances[orientation] > clearances[this.orientation])\n\t\t\t{\n\t\t\t\t// Use this as a fallback as it's the orientation with the most clearance so far\n\t\t\t\tthis.orientation = orientation;\n\t\t\t}\n\t\t}\n\n\t\t// Just in case...\n\t\tif (!this.orientation || $.inArray(this.orientation, ['bottom', 'top', 'right', 'left']) == -1)\n\t\t{\n\t\t\tthis.orientation = 'bottom'\n\t\t}\n\n\t\t// Update the tip class\n\t\tif (this.tipClass)\n\t\t{\n\t\t\tthis.$tip.removeClass(this.tipClass);\n\t\t}\n\n\t\tthis.tipClass = this.settings.tipClass+'-'+Garnish.HUD.tipClasses[this.orientation];\n\t\tthis.$tip.addClass(this.tipClass);\n\n\t\t// Make sure the HUD body is within the allowed size\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar maxHudBodyWidth,\n\t\t\tmaxHudBodyHeight;\n\n\t\tif (this.orientation == 'top' || this.orientation == 'bottom')\n\t\t{\n\t\t\tmaxHudBodyWidth = windowWidth - this.settings.windowSpacing * 2;\n\t\t\tmaxHudBodyHeight = clearances[this.orientation];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxHudBodyWidth = clearances[this.orientation];\n\t\t\tmaxHudBodyHeight = windowHeight - this.settings.windowSpacing * 2;\n\t\t}\n\n\t\tif (maxHudBodyWidth < this.settings.minBodyWidth)\n\t\t{\n\t\t\tmaxHudBodyWidth = this.settings.minBodyWidth;\n\t\t}\n\n\t\tif (maxHudBodyHeight < this.settings.minBodyHeight)\n\t\t{\n\t\t\tmaxHudBodyHeight = this.settings.minBodyHeight;\n\t\t}\n\n\t\tif (hudBodyWidth > maxHudBodyWidth || hudBodyWidth < this.settings.minBodyWidth)\n\t\t{\n\t\t\tif (hudBodyWidth > maxHudBodyWidth)\n\t\t\t{\n\t\t\t\thudBodyWidth = maxHudBodyWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thudBodyWidth = this.settings.minBodyWidth;\n\t\t\t}\n\n\t\t\tthis.$hud.width(hudBodyWidth);\n\n\t\t\t// Is there any overflow now?\n\t\t\tif (this.$main.outerWidth() > maxHudBodyWidth)\n\t\t\t{\n\t\t\t\tthis.$mainContainer.css('overflow-x', 'scroll');\n\t\t\t}\n\n\t\t\t// The height may have just changed\n\t\t\thudBodyHeight = this.$body.height();\n\t\t}\n\n\t\tif (hudBodyHeight > maxHudBodyHeight || hudBodyHeight < this.settings.minBodyHeight)\n\t\t{\n\t\t\tif (hudBodyHeight > maxHudBodyHeight)\n\t\t\t{\n\t\t\t\thudBodyHeight = maxHudBodyHeight;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thudBodyHeight = this.settings.minBodyHeight;\n\t\t\t}\n\n\t\t\tvar mainHeight = hudBodyHeight;\n\n\t\t\tif (this.$header)\n\t\t\t{\n\t\t\t\tmainHeight -= this.$header.outerHeight();\n\t\t\t}\n\n\t\t\tif (this.$footer)\n\t\t\t{\n\t\t\t\tmainHeight -= this.$footer.outerHeight();\n\t\t\t}\n\n\t\t\tthis.$mainContainer.height(mainHeight);\n\n\t\t\t// Is there any overflow now?\n\t\t\tif (this.$main.outerHeight() > mainHeight)\n\t\t\t{\n\t\t\t\tthis.$mainContainer.css('overflow-y', 'scroll');\n\t\t\t}\n\t\t}\n\n\t\t// Set the HUD/tip positions\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this.orientation == 'top' || this.orientation == 'bottom')\n\t\t{\n\t\t\t// Center the HUD horizontally\n\t\t\tvar maxLeft = (windowWidth + windowScrollLeft) - (hudBodyWidth + this.settings.windowSpacing),\n\t\t\t\tminLeft = (windowScrollLeft + this.settings.windowSpacing),\n\t\t\t\ttriggerCenter = triggerOffset.left + Math.round(triggerWidth / 2),\n\t\t\t\tleft = triggerCenter - Math.round(hudBodyWidth / 2);\n\n\t\t\tif (left > maxLeft) left = maxLeft;\n\t\t\tif (left < minLeft) left = minLeft;\n\n\t\t\tthis.$hud.css('left', left);\n\n\t\t\tvar tipLeft = (triggerCenter - left) - (this.settings.tipWidth / 2);\n\t\t\tthis.$tip.css({ left: tipLeft, top: '' });\n\n\t\t\tif (this.orientation == 'top')\n\t\t\t{\n\t\t\t\tvar top = triggerOffset.top - (hudBodyHeight + this.settings.triggerSpacing);\n\t\t\t\tthis.$hud.css('top', top);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar top = triggerOffset.bottom + this.settings.triggerSpacing;\n\t\t\t\tthis.$hud.css('top', top);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Center the HUD vertically\n\t\t\tvar maxTop = (windowHeight + windowScrollTop) - (hudBodyHeight + this.settings.windowSpacing),\n\t\t\t\tminTop = (windowScrollTop + this.settings.windowSpacing),\n\t\t\t\ttriggerCenter = triggerOffset.top + Math.round(triggerHeight / 2),\n\t\t\t\ttop = triggerCenter - Math.round(hudBodyHeight / 2);\n\n\t\t\tif (top > maxTop) top = maxTop;\n\t\t\tif (top < minTop) top = minTop;\n\n\t\t\tthis.$hud.css('top', top);\n\n\t\t\tvar tipTop = (triggerCenter - top) - (this.settings.tipWidth / 2);\n\t\t\tthis.$tip.css({ top: tipTop, left: '' });\n\n\n\t\t\tif (this.orientation == 'left')\n\t\t\t{\n\t\t\t\tvar left = triggerOffset.left - (hudBodyWidth + this.settings.triggerSpacing);\n\t\t\t\tthis.$hud.css('left', left);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = triggerOffset.right + this.settings.triggerSpacing;\n\t\t\t\tthis.$hud.css('left', left);\n\t\t\t}\n\t\t}\n\n\t\tGarnish.requestAnimationFrame($.proxy(function() {\n\t\t\tthis.addListener(this.$main, 'resize', 'updateSizeAndPosition');\n\t\t}, this));\n\t},\n\n\t/**\n\t * Hide\n\t */\n\thide: function()\n\t{\n\t\tthis.disable();\n\n\t\tthis.$hud.hide();\n\t\tthis.$shade.hide();\n\t\tthis.showing = false;\n\n\t\tdelete Garnish.HUD.activeHUDs[this._namespace];\n\n\t\tGarnish.escManager.unregister(this);\n\n\t\tthis.onHide();\n\t},\n\n\tonHide: function()\n\t{\n\t\tthis.trigger('hide');\n\t},\n\n\ttoggle: function()\n\t{\n\t\tif (this.showing)\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t},\n\n\tsubmit: function()\n\t{\n\t\tthis.onSubmit();\n\t},\n\n\tonSubmit: function()\n\t{\n\t\tthis.trigger('submit');\n\t},\n\n\t_handleSubmit: function(ev)\n\t{\n\t\tev.preventDefault();\n\t\tthis.submit();\n\t}\n},\n{\n\ttipClasses: { bottom: 'top', top: 'bottom', right: 'left', left: 'right'},\n\n\tdefaults: {\n\t\tshadeClass: 'hud-shade',\n\t\thudClass: 'hud',\n\t\ttipClass: 'tip',\n\t\tbodyClass: 'body',\n\t\theaderClass: 'hud-header',\n\t\tfooterClass: 'hud-footer',\n\t\tmainContainerClass: 'main-container',\n\t\tmainClass: 'main',\n\t\torientations: ['bottom', 'top', 'right', 'left'],\n\t\ttriggerSpacing: 10,\n\t\twindowSpacing: 10,\n\t\ttipWidth: 30,\n\t\tminBodyWidth: 200,\n\t\tminBodyHeight: 0,\n\t\tonShow: $.noop,\n\t\tonHide: $.noop,\n\t\tonSubmit: $.noop,\n\t\tcloseBtn: null,\n\t\tcloseOtherHUDs: true\n\t}\n});\n","/**\n * Light Switch\n */\nGarnish.LightSwitch = Garnish.Base.extend({\n\n\tsettings: null,\n\t$outerContainer: null,\n\t$innerContainer: null,\n\t$input: null,\n\t$toggleTarget: null,\n\ton: null,\n\tdragger: null,\n\n\tdragStartMargin: null,\n\n\tinit: function(outerContainer, settings)\n\t{\n\t\tthis.$outerContainer = $(outerContainer);\n\n\t\t// Is this already a switch?\n\t\tif (this.$outerContainer.data('lightswitch'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a switch on an element');\n\t\t\tthis.$outerContainer.data('lightswitch').destroy();\n\t\t}\n\n\t\tthis.$outerContainer.data('lightswitch', this);\n\n\t\tthis.setSettings(settings, Garnish.LightSwitch.defaults);\n\n\t\tthis.$innerContainer = this.$outerContainer.find('.container:first');\n\t\tthis.$input = this.$outerContainer.find('input:first');\n\t\tthis.$toggleTarget = $(this.$outerContainer.attr('data-toggle'));\n\n\t\tthis.on = this.$outerContainer.hasClass('on');\n\n\t\tthis.addListener(this.$outerContainer, 'mousedown', '_handleMouseDown');\n\t\tthis.addListener(this.$outerContainer, 'keydown', '_handleKeyDown');\n\n\t\tthis.dragger = new Garnish.BaseDrag(this.$outerContainer, {\n\t\t\taxis:                 Garnish.X_AXIS,\n\t\t\tignoreHandleSelector: null,\n\t\t\tonDragStart:          $.proxy(this, '_handleDragStart'),\n\t\t\tonDrag:               $.proxy(this, '_handleDrag'),\n\t\t\tonDragStop:           $.proxy(this, '_handleDragStop')\n\t\t});\n\t},\n\n\tturnOn: function()\n\t{\n\t\tthis.$innerContainer.velocity('stop').velocity({marginLeft: 0}, Garnish.FX_DURATION);\n\t\tthis.$input.val(Garnish.Y_AXIS);\n\t\tthis.on = true;\n\t\tthis.onChange();\n\n\t\tthis.$toggleTarget.show();\n\t\tthis.$toggleTarget.height('auto');\n\t\tvar height = this.$toggleTarget.height();\n\t\tthis.$toggleTarget.height(0);\n\t\tthis.$toggleTarget.velocity('stop').velocity({height: height}, Garnish.FX_DURATION, $.proxy(function() {\n\t\t\tthis.$toggleTarget.height('auto');\n\t\t}, this));\n\t},\n\n\tturnOff: function()\n\t{\n\t\tthis.$innerContainer.velocity('stop').velocity({marginLeft: Garnish.LightSwitch.offMargin}, Garnish.FX_DURATION);\n\t\tthis.$input.val('');\n\t\tthis.on = false;\n\t\tthis.onChange();\n\n\t\tthis.$toggleTarget.velocity('stop').velocity({height: 0}, Garnish.FX_DURATION);\n\t},\n\n\ttoggle: function(ev)\n\t{\n\t\tif (!this.on)\n\t\t{\n\t\t\tthis.turnOn();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.turnOff();\n\t\t}\n\t},\n\n\tonChange: function()\n\t{\n\t\tthis.trigger('change');\n\t\tthis.settings.onChange();\n\t\tthis.$outerContainer.trigger('change');\n\t},\n\n\t_handleMouseDown: function()\n\t{\n\t\tthis.addListener(Garnish.$doc, 'mouseup', '_handleMouseUp')\n\t},\n\n\t_handleMouseUp: function()\n\t{\n\t\tthis.removeListener(Garnish.$doc, 'mouseup');\n\n\t\t// Was this a click?\n\t\tif (!this.dragger.dragging)\n\t\t\tthis.toggle();\n\t},\n\n\t_handleKeyDown: function(ev)\n\t{\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.SPACE_KEY:\n\t\t\t{\n\t\t\t\tthis.toggle();\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t_getMargin: function()\n\t{\n\t\treturn parseInt(this.$innerContainer.css('marginLeft'))\n\t},\n\n\t_handleDragStart: function()\n\t{\n\t\tthis.dragStartMargin = this._getMargin();\n\t},\n\n\t_handleDrag: function()\n\t{\n\t\tvar margin = this.dragStartMargin + this.dragger.mouseDistX;\n\n\t\tif (margin < Garnish.LightSwitch.offMargin)\n\t\t{\n\t\t\tmargin = Garnish.LightSwitch.offMargin;\n\t\t}\n\t\telse if (margin > 0)\n\t\t{\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tthis.$innerContainer.css('marginLeft', margin);\n\t},\n\n\t_handleDragStop: function()\n\t{\n\t\tvar margin = this._getMargin();\n\n\t\tif (margin > -16)\n\t\t{\n\t\t\tthis.turnOn();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.turnOff();\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$outerContainer.removeData('lightswitch');\n\t\tthis.dragger.destroy();\n\t\tthis.base();\n\t}\n},\n{\n\toffMargin: -50,\n\tdefaults: {\n\t\tonChange: $.noop\n\t}\n});\n","/**\n * Menu\n */\nGarnish.Menu = Garnish.Base.extend({\n\n\tsettings: null,\n\n\t$container: null,\n\t$options: null,\n\t$anchor: null,\n\n\t_windowWidth: null,\n\t_windowHeight: null,\n\t_windowScrollLeft: null,\n\t_windowScrollTop: null,\n\n\t_anchorOffset: null,\n\t_anchorWidth: null,\n\t_anchorHeight: null,\n\t_anchorOffsetRight: null,\n\t_anchorOffsetBottom: null,\n\n\t_menuWidth: null,\n\t_menuHeight: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(container, settings)\n\t{\n\t\tthis.setSettings(settings, Garnish.Menu.defaults);\n\n\t\tthis.$container = $(container);\n\t\tthis.$options = $();\n\t\tthis.addOptions(this.$container.find('a'));\n\n\t\t// Deprecated\n\t\tif (this.settings.attachToElement)\n\t\t{\n\t\t\tthis.settings.anchor = this.settings.attachToElement;\n\t\t\tGarnish.log('The \\'attachToElement\\' setting is deprecated. Use \\'anchor\\' instead.');\n\t\t}\n\n\t\tif (this.settings.anchor)\n\t\t{\n\t\t\tthis.$anchor = $(this.settings.anchor);\n\t\t}\n\n\t\t// Prevent clicking on the container from hiding the menu\n\t\tthis.addListener(this.$container, 'mousedown', function(ev)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t});\n\t},\n\n\taddOptions: function($options)\n\t{\n\t\tthis.$options = this.$options.add($options);\n\t\t$options.data('menu', this);\n\t\tthis.addListener($options, 'click', 'selectOption');\n\t},\n\n\tsetPositionRelativeToAnchor: function()\n\t{\n\t\tthis._windowWidth = Garnish.$win.width();\n\t\tthis._windowHeight = Garnish.$win.height();\n\t\tthis._windowScrollLeft = Garnish.$win.scrollLeft();\n\t\tthis._windowScrollTop = Garnish.$win.scrollTop();\n\n\t\tthis._anchorOffset = this.$anchor.offset();\n\t\tthis._anchorWidth = this.$anchor.outerWidth();\n\t\tthis._anchorHeight = this.$anchor.outerHeight();\n\t\tthis._anchorOffsetRight = this._anchorOffset.left + this._anchorHeight;\n\t\tthis._anchorOffsetBottom = this._anchorOffset.top + this._anchorHeight;\n\n\t\tthis.$container.css('minWidth', 0);\n\t\tthis.$container.css('minWidth', this._anchorWidth - (this.$container.outerWidth() - this.$container.width()));\n\n\t\tthis._menuWidth = this.$container.outerWidth();\n\t\tthis._menuHeight = this.$container.outerHeight();\n\n\t\t// Is there room for the menu below the anchor?\n\t\tvar topClearance = this._anchorOffset.top - this._windowScrollTop,\n\t\t\tbottomClearance = this._windowHeight + this._windowScrollTop - this._anchorOffsetBottom;\n\n\t\tif (bottomClearance >= this._menuHeight || bottomClearance >= topClearance || topClearance < this._menuHeight)\n\t\t{\n\t\t\tthis.$container.css('top', this._anchorOffsetBottom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$container.css('top', this._anchorOffset.top - this._menuHeight);\n\t\t}\n\n\t\t// Figure out how we're aliging it\n\t\tvar align = this.$container.data('align');\n\n\t\tif (align != 'left' && align != 'center' && align != 'right')\n\t\t{\n\t\t\talign = 'left';\n\t\t}\n\n\t\tif (align == 'center')\n\t\t{\n\t\t\tthis._alignCenter();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Figure out which options are actually possible\n\t\t\tvar rightClearance = this._windowWidth + this._windowScrollLeft - (this._anchorOffset.left + this._menuWidth),\n\t\t\t\tleftClearance = this._anchorOffsetRight - this._menuWidth;\n\n\t\t\tif (align == 'right' && leftClearance >= 0 || rightClearance < 0)\n\t\t\t{\n\t\t\t\tthis._alignRight();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._alignLeft();\n\t\t\t}\n\t\t}\n\n\t\tdelete this._windowWidth;\n\t\tdelete this._windowHeight;\n\t\tdelete this._windowScrollLeft;\n\t\tdelete this._windowScrollTop;\n\t\tdelete this._anchorOffset;\n\t\tdelete this._anchorWidth;\n\t\tdelete this._anchorHeight;\n\t\tdelete this._anchorOffsetRight;\n\t\tdelete this._anchorOffsetBottom;\n\t\tdelete this._menuWidth;\n\t\tdelete this._menuHeight;\n\t},\n\n\tshow: function()\n\t{\n\t\t// Move the menu to the end of the DOM\n\t\tthis.$container.appendTo(Garnish.$bod)\n\n\t\tif (this.$anchor)\n\t\t{\n\t\t\tthis.setPositionRelativeToAnchor();\n\t\t}\n\n\t\tthis.$container.velocity('stop');\n\t\tthis.$container.css({\n\t\t\topacity: 1,\n\t\t\tdisplay: 'block'\n\t\t});\n\n\t\tGarnish.escManager.register(this, 'hide');\n\t},\n\n\thide: function()\n\t{\n\t\tthis.$container.velocity('fadeOut', { duration: Garnish.FX_DURATION }, $.proxy(function()\n\t\t{\n\t\t\tthis.$container.detach();\n\t\t}, this));\n\n\t\tGarnish.escManager.unregister(this);\n\n\t\tthis.trigger('hide');\n\t},\n\n\tselectOption: function(ev)\n\t{\n\t\tthis.settings.onOptionSelect(ev.currentTarget);\n\t\tthis.trigger('optionselect', { selectedOption: ev.currentTarget });\n\t\tthis.hide();\n\t},\n\n\t_alignLeft: function()\n\t{\n\t\tthis.$container.css({\n\t\t\tleft: this._anchorOffset.left,\n\t\t\tright: 'auto'\n\t\t});\n\t},\n\n\t_alignRight: function()\n\t{\n\t\tthis.$container.css({\n\t\t\tright: this._windowWidth - (this._anchorOffset.left + this._anchorWidth),\n\t\t\tleft: 'auto'\n\t\t});\n\t},\n\n\t_alignCenter: function()\n\t{\n\t\tvar left = Math.round((this._anchorOffset.left + this._anchorWidth / 2) - (this._menuWidth / 2));\n\n\t\tif (left < 0)\n\t\t{\n\t\t\tleft = 0;\n\t\t}\n\n\t\tthis.$container.css('left', left);\n\t}\n\n},\n{\n\tdefaults: {\n\t\tanchor: null,\n\t\tonOptionSelect: $.noop\n\t}\n});\n","/**\n * Menu Button\n */\nGarnish.MenuBtn = Garnish.Base.extend({\n\n\t$btn: null,\n\tmenu: null,\n\tshowingMenu: false,\n\tdisabled: true,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(btn, settings)\n\t{\n\t\tthis.$btn = $(btn);\n\n\t\t// Is this already a menu button?\n\t\tif (this.$btn.data('menubtn'))\n\t\t{\n\t\t\t// Grab the old MenuBtn's menu container\n\t\t\tvar $menu = this.$btn.data('menubtn').menu.$container;\n\n\t\t\tGarnish.log('Double-instantiating a menu button on an element');\n\t\t\tthis.$btn.data('menubtn').destroy();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar $menu = this.$btn.next('.menu').detach();\n\t\t}\n\n\t\tthis.$btn.data('menubtn', this);\n\n\t\tthis.setSettings(settings, Garnish.MenuBtn.defaults);\n\n\t\tthis.menu = new Garnish.Menu($menu, {\n\t\t\tanchor: (this.settings.menuAnchor || this.$btn),\n\t\t\tonOptionSelect: $.proxy(this, 'onOptionSelect')\n\t\t});\n\n\t\tthis.menu.on('hide', $.proxy(this, 'onMenuHide'));\n\n\t\tthis.addListener(this.$btn, 'mousedown', 'onMouseDown');\n\t\tthis.enable();\n\t},\n\n\tonMouseDown: function(ev)\n\t{\n\t\tif (ev.which != Garnish.PRIMARY_CLICK || Garnish.isCtrlKeyPressed(ev))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tev.preventDefault();\n\n\t\tif (this.showingMenu)\n\t\t{\n\t\t\tthis.hideMenu();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.showMenu();\n\t\t}\n\t},\n\n\tshowMenu: function()\n\t{\n\t\tif (this.disabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.menu.show();\n\t\tthis.$btn.addClass('active');\n\t\tthis.showingMenu = true;\n\n\t\tsetTimeout($.proxy(function() {\n\t\t\tthis.addListener(Garnish.$doc, 'mousedown', 'onMouseDown');\n\t\t}, this), 1);\n\t},\n\n\thideMenu: function()\n\t{\n\t\tthis.menu.hide();\n\t},\n\n\tonMenuHide: function()\n\t{\n\t\tthis.$btn.removeClass('active');\n\t\tthis.showingMenu = false;\n\n\t\tthis.removeListener(Garnish.$doc, 'mousedown');\n\t},\n\n\tonOptionSelect: function(option)\n\t{\n\t\tthis.settings.onOptionSelect(option);\n\t\tthis.trigger('optionSelect', { option: option });\n\t},\n\n\tenable: function ()\n\t{\n\t\tthis.disabled = false;\n\t},\n\n\tdisable: function ()\n\t{\n\t\tthis.disabled = true;\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$btn.removeData('menubtn');\n\t\tthis.base();\n\t}\n},\n{\n\tdefaults: {\n\t\tmenuAnchor: null,\n\t\tonOptionSelect: $.noop\n\t}\n});\n","/**\n * Mixed input\n *\n * @todo RTL support, in the event that the input doesn't have dir=\"ltr\".\n */\nGarnish.MixedInput = Garnish.Base.extend({\n\n\t$container: null,\n\telements: null,\n\tfocussedElement: null,\n\tblurTimeout: null,\n\n\tinit: function(container, settings)\n\t{\n\t\tthis.$container = $(container);\n\t\tthis.setSettings(settings, Garnish.MixedInput.defaults);\n\n\t\tthis.elements = [];\n\n\t\t// Allow the container to receive focus\n\t\tthis.$container.attr('tabindex', 0);\n\t\tthis.addListener(this.$container, 'focus', 'onFocus');\n\t},\n\n\tgetElementIndex: function($elem)\n\t{\n\t\treturn $.inArray($elem, this.elements);\n\t},\n\n\tisText: function($elem)\n\t{\n\t\treturn ($elem.prop('nodeName') == 'INPUT');\n\t},\n\n\tonFocus: function(ev)\n\t{\n\t\t// Set focus to the first element\n\t\tif (this.elements.length)\n\t\t{\n\t\t\tvar $elem = this.elements[0];\n\t\t\tthis.setFocus($elem);\n\t\t\tthis.setCarotPos($elem, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addTextElement();\n\t\t}\n\t},\n\n\taddTextElement: function(index)\n\t{\n\t\tvar text = new TextElement(this);\n\t\tthis.addElement(text.$input, index);\n\t\treturn text;\n\t},\n\n\taddElement: function($elem, index)\n\t{\n\t\t// Was a target index passed, and is it valid?\n\t\tif (typeof index == 'undefined')\n\t\t{\n\t\t\tif (this.focussedElement)\n\t\t\t{\n\t\t\t\tvar focussedElement = this.focussedElement,\n\t\t\t\t\tfocussedElementIndex = this.getElementIndex(focussedElement);\n\n\t\t\t\t// Is the focus on a text element?\n\t\t\t\tif (this.isText(focussedElement))\n\t\t\t\t{\n\t\t\t\t\tvar selectionStart = focussedElement.prop('selectionStart'),\n\t\t\t\t\t\tselectionEnd = focussedElement.prop('selectionEnd'),\n\t\t\t\t\t\tval = focussedElement.val(),\n\t\t\t\t\t\tpreVal = val.substring(0, selectionStart),\n\t\t\t\t\t\tpostVal = val.substr(selectionEnd);\n\n\t\t\t\t\tif (preVal && postVal)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Split the input into two\n\t\t\t\t\t\tfocussedElement.val(preVal).trigger('change');\n\t\t\t\t\t\tvar newText = new TextElement(this);\n\t\t\t\t\t\tnewText.$input.val(postVal).trigger('change');\n\t\t\t\t\t\tthis.addElement(newText.$input, focussedElementIndex+1);\n\n\t\t\t\t\t\t// Insert the new element in between them\n\t\t\t\t\t\tindex = focussedElementIndex+1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!preVal)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert the new element before this one\n\t\t\t\t\t\tindex = focussedElementIndex;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert it after this one\n\t\t\t\t\t\tindex = focussedElementIndex + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Just insert the new one after this one\n\t\t\t\t\tindex = focussedElementIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Insert the new element at the end\n\t\t\t\tindex = this.elements.length;\n\t\t\t}\n\t\t}\n\n\t\t// Add the element\n\t\tif (typeof this.elements[index] != 'undefined')\n\t\t{\n\t\t\t$elem.insertBefore(this.elements[index]);\n\t\t\tthis.elements.splice(index, 0, $elem);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just for safe measure, set the index to what it really will be\n\t\t\tindex = this.elements.length;\n\n\t\t\tthis.$container.append($elem);\n\t\t\tthis.elements.push($elem);\n\t\t}\n\n\t\t// Make sure that there are text elements surrounding all non-text elements\n\t\tif (!this.isText($elem))\n\t\t{\n\t\t\t// Add a text element before?\n\t\t\tif (index == 0 || !this.isText(this.elements[index-1]))\n\t\t\t{\n\t\t\t\tthis.addTextElement(index);\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\t// Add a text element after?\n\t\t\tif (index == this.elements.length-1 || !this.isText(this.elements[index+1]))\n\t\t\t{\n\t\t\t\tthis.addTextElement(index+1);\n\t\t\t}\n\t\t}\n\n\t\t// Add event listeners\n\t\tthis.addListener($elem, 'click', function() {\n\t\t\tthis.setFocus($elem);\n\t\t});\n\n\t\t// Set focus to the new element\n\t\tsetTimeout($.proxy(function() {\n\t\t\tthis.setFocus($elem);\n\t\t}, this), 1);\n\t},\n\n\tremoveElement: function($elem)\n\t{\n\t\tvar index = this.getElementIndex($elem);\n\t\tif (index != -1)\n\t\t{\n\t\t\tthis.elements.splice(index, 1);\n\n\t\t\tif (!this.isText($elem))\n\t\t\t{\n\t\t\t\t// Combine the two now-adjacent text elements\n\t\t\t\tvar $prevElem = this.elements[index-1],\n\t\t\t\t\t$nextElem = this.elements[index];\n\n\t\t\t\tif (this.isText($prevElem) && this.isText($nextElem))\n\t\t\t\t{\n\t\t\t\t\tvar prevElemVal = $prevElem.val(),\n\t\t\t\t\t\tnewVal = prevElemVal + $nextElem.val();\n\t\t\t\t\t$prevElem.val(newVal).trigger('change');\n\t\t\t\t\tthis.removeElement($nextElem);\n\t\t\t\t\tthis.setFocus($prevElem);\n\t\t\t\t\tthis.setCarotPos($prevElem, prevElemVal.length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$elem.remove();\n\t\t}\n\t},\n\n\tsetFocus: function($elem)\n\t{\n\t\tthis.$container.addClass('focus');\n\n\t\tif (!this.focussedElement)\n\t\t{\n\t\t\t// Prevent the container from receiving focus\n\t\t\t// as long as one of its elements has focus\n\t\t\tthis.$container.attr('tabindex', '-1');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Blur the previously-focussed element\n\t\t\tthis.blurFocussedElement();\n\t\t}\n\n\t\t$elem.attr('tabindex', '0');\n\t\t$elem.focus();\n\t\tthis.focussedElement = $elem;\n\n\t\tthis.addListener($elem, 'blur', function() {\n\t\t\tthis.blurTimeout = setTimeout($.proxy(function() {\n\t\t\t\tif (this.focussedElement == $elem)\n\t\t\t\t{\n\t\t\t\t\tthis.blurFocussedElement();\n\t\t\t\t\tthis.focussedElement = null;\n\t\t\t\t\tthis.$container.removeClass('focus');\n\n\t\t\t\t\t// Get ready for future focus\n\t\t\t\t\tthis.$container.attr('tabindex', '0');\n\t\t\t\t}\n\t\t\t}, this), 1);\n\t\t});\n\t},\n\n\tblurFocussedElement: function()\n\t{\n\t\tthis.removeListener(this.focussedElement, 'blur');\n\t\tthis.focussedElement.attr('tabindex', '-1');\n\t},\n\n\tfocusPreviousElement: function($from)\n\t{\n\t\tvar index = this.getElementIndex($from);\n\n\t\tif (index > 0)\n\t\t{\n\t\t\tvar $elem = this.elements[index-1];\n\t\t\tthis.setFocus($elem);\n\n\t\t\t// If it's a text element, put the carot at the end\n\t\t\tif (this.isText($elem))\n\t\t\t{\n\t\t\t\tvar length = $elem.val().length;\n\t\t\t\tthis.setCarotPos($elem, length);\n\t\t\t}\n\t\t}\n\t},\n\n\tfocusNextElement: function($from)\n\t{\n\t\tvar index = this.getElementIndex($from);\n\n\t\tif (index < this.elements.length-1)\n\t\t{\n\t\t\tvar $elem = this.elements[index+1];\n\t\t\tthis.setFocus($elem);\n\n\t\t\t// If it's a text element, put the carot at the beginning\n\t\t\tif (this.isText($elem))\n\t\t\t{\n\t\t\t\tthis.setCarotPos($elem, 0)\n\t\t\t}\n\t\t}\n\t},\n\n\tsetCarotPos: function($elem, pos)\n\t{\n\t\t$elem.prop('selectionStart', pos);\n\t\t$elem.prop('selectionEnd', pos);\n\t}\n\n});\n\n\n\nvar TextElement = Garnish.Base.extend({\n\n\tparentInput: null,\n\t$input: null,\n\t$stage: null,\n\tval: null,\n\tfocussed: false,\n\tinterval: null,\n\n\tinit: function(parentInput)\n\t{\n\t\tthis.parentInput = parentInput;\n\n\t\tthis.$input = $('<input type=\"text\"/>').appendTo(this.parentInput.$container);\n\t\tthis.$input.css('margin-right', (2-TextElement.padding)+'px');\n\n\t\tthis.setWidth();\n\n\t\tthis.addListener(this.$input, 'focus', 'onFocus');\n\t\tthis.addListener(this.$input, 'blur', 'onBlur');\n\t\tthis.addListener(this.$input, 'keydown', 'onKeyDown');\n\t\tthis.addListener(this.$input, 'change', 'checkInput');\n\t},\n\n\tgetIndex: function()\n\t{\n\t\treturn this.parentInput.getElementIndex(this.$input);\n\t},\n\n\tbuildStage: function()\n\t{\n\t\tthis.$stage = $('<stage/>').appendTo(Garnish.$bod);\n\n\t\t// replicate the textarea's text styles\n\t\tthis.$stage.css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -9999,\n\t\t\tleft: -9999,\n\t\t\twordWrap: 'nowrap'\n\t\t});\n\n\t\tGarnish.copyTextStyles(this.$input, this.$stage);\n\t},\n\n\tgetTextWidth: function(val)\n\t{\n\t\tif (!this.$stage)\n\t\t{\n\t\t\tthis.buildStage();\n\t\t}\n\n\t\tif (val)\n\t\t{\n\t\t\t// Ampersand entities\n\t\t\tval = val.replace(/&/g, '&amp;');\n\n\t\t\t// < and >\n\t\t\tval = val.replace(/</g, '&lt;');\n\t\t\tval = val.replace(/>/g, '&gt;');\n\n\t\t\t// Spaces\n\t\t\tval = val.replace(/ /g, '&nbsp;');\n\t\t}\n\n\t\tthis.$stage.html(val);\n\t\tthis.stageWidth = this.$stage.width();\n\t\treturn this.stageWidth;\n\t},\n\n\tonFocus: function()\n\t{\n\t\tthis.focussed = true;\n\t\tthis.interval = setInterval($.proxy(this, 'checkInput'), Garnish.NiceText.interval);\n\t\tthis.checkInput();\n\t},\n\n\tonBlur: function()\n\t{\n\t\tthis.focussed = false;\n\t\tclearInterval(this.interval);\n\t\tthis.checkInput();\n\t},\n\n\tonKeyDown: function(ev)\n\t{\n\t\tsetTimeout($.proxy(this, 'checkInput'), 1);\n\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == 0 && this.$input.prop('selectionEnd') == 0)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the previous element\n\t\t\t\t\tthis.parentInput.focusPreviousElement(this.$input);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == this.val.length && this.$input.prop('selectionEnd') == this.val.length)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the next element\n\t\t\t\t\tthis.parentInput.focusNextElement(this.$input);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.DELETE_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == 0 && this.$input.prop('selectionEnd') == 0)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the previous element\n\t\t\t\t\tthis.parentInput.focusPreviousElement(this.$input);\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tgetVal: function()\n\t{\n\t\tthis.val = this.$input.val();\n\t\treturn this.val;\n\t},\n\n\tsetVal: function(val)\n\t{\n\t\tthis.$input.val(val);\n\t\tthis.checkInput();\n\t},\n\n\tcheckInput: function()\n\t{\n\t\t// Has the value changed?\n\t\tvar changed = (this.val !== this.getVal());\n\t\tif (changed)\n\t\t{\n\t\t\tthis.setWidth();\n\t\t\tthis.onChange();\n\t\t}\n\n\t\treturn changed;\n\t},\n\n\tsetWidth: function()\n\t{\n\t\t// has the width changed?\n\t\tif (this.stageWidth !== this.getTextWidth(this.val))\n\t\t{\n\t\t\t// update the textarea width\n\t\t\tvar width = this.stageWidth + TextElement.padding;\n\t\t\tthis.$input.width(width);\n\t\t}\n\t},\n\n\tonChange: $.noop\n},\n{\n\tpadding: 20\n});\n","/**\n * Modal\n */\nGarnish.Modal = Garnish.Base.extend({\n\n\t$container: null,\n\t$shade: null,\n\n\tvisible: false,\n\n\tdragger: null,\n\n\tdesiredWidth: null,\n\tdesiredHeight: null,\n\tresizeDragger: null,\n\tresizeStartWidth: null,\n\tresizeStartHeight: null,\n\n\tinit: function(container, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(container))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = container;\n\t\t\tcontainer = null;\n\t\t}\n\n\t\tthis.setSettings(settings, Garnish.Modal.defaults);\n\n\t\t// Create the shade\n\t\tthis.$shade = $('<div class=\"'+this.settings.shadeClass+'\"/>');\n\n\t\t// If the container is already set, drop the shade below it.\n\t\tif (container)\n\t\t{\n\t\t\tthis.$shade.insertBefore(container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\t}\n\n\t\tif (container)\n\t\t{\n\t\t\tthis.setContainer(container);\n\n\t\t\tif (this.settings.autoShow)\n\t\t\t{\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}\n\n\t\tGarnish.Modal.instances.push(this);\n\t},\n\n\tsetContainer: function(container)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Is this already a modal?\n\t\tif (this.$container.data('modal'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a modal on an element');\n\t\t\tthis.$container.data('modal').destroy();\n\t\t}\n\n\t\tthis.$container.data('modal', this);\n\n\t\tif (this.settings.draggable)\n\t\t{\n\t\t\tthis.dragger = new Garnish.DragMove(this.$container, {\n\t\t\t\thandle: (this.settings.dragHandleSelector ? this.$container.find(this.settings.dragHandleSelector) : this.$container)\n\t\t\t});\n\t\t}\n\n\t\tif (this.settings.resizable)\n\t\t{\n\t\t\tvar $resizeDragHandle = $('<div class=\"resizehandle\"/>').appendTo(this.$container);\n\n\t\t\tthis.resizeDragger = new Garnish.BaseDrag($resizeDragHandle, {\n\t\t\t\tonDragStart:   $.proxy(this, '_handleResizeStart'),\n\t\t\t\tonDrag:        $.proxy(this, '_handleResize')\n\t\t\t});\n\t\t}\n\n\t\tthis.addListener(this.$container, 'click', function(ev) {\n\t\t\tev.stopPropagation();\n\t\t});\n\n\t\t// Show it if we're late to the party\n\t\tif (this.visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t},\n\n\tshow: function()\n\t{\n\t\t// Close other modals as needed\n\t\tif (this.settings.closeOtherModals && Garnish.Modal.visibleModal && Garnish.Modal.visibleModal != this)\n\t\t{\n\t\t\tGarnish.Modal.visibleModal.hide();\n\t\t}\n\n\t\tif (this.$container)\n\t\t{\n\t\t\t// Move it to the end of <body> so it gets the highest sub-z-index\n\t\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\t\tthis.$container.appendTo(Garnish.$bod);\n\n\t\t\tthis.$container.show();\n\t\t\tthis.updateSizeAndPosition();\n\n\t\t\tthis.$shade.velocity('fadeIn', { duration: 50 });\n\t\t\tthis.$container.delay(50).velocity('fadeIn', {\n\t\t\t\tcomplete: $.proxy(this, 'onFadeIn')\n\t\t\t});\n\n\t\t\tif (this.settings.hideOnShadeClick)\n\t\t\t{\n\t\t\t\tthis.addListener(this.$shade, 'click', 'hide');\n\t\t\t}\n\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'updateSizeAndPosition');\n\t\t}\n\n\t\tthis.enable();\n\n\t\tif (this.settings.hideOnEsc)\n\t\t{\n\t\t\tGarnish.escManager.register(this, 'hide');\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.visible = true;\n\t\t\tGarnish.Modal.visibleModal = this;\n\n\t\t\tthis.trigger('show');\n\t\t\tthis.settings.onShow();\n\t\t}\n\t},\n\n\tquickShow: function()\n\t{\n\t\tthis.show();\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('stop');\n\t\t\tthis.$container.show().css('opacity', 1);\n\n\t\t\tthis.$shade.velocity('stop');\n\t\t\tthis.$shade.show().css('opacity', 1);\n\t\t}\n\t},\n\n\thide: function(ev)\n\t{\n\t\tthis.disable();\n\n\t\tif (ev)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t}\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('fadeOut', { duration: Garnish.FX_DURATION });\n\t\t\tthis.$shade.velocity('fadeOut', {\n\t\t\t\tduration: Garnish.FX_DURATION,\n\t\t\t\tcomplete: $.proxy(this, 'onFadeOut')\n\t\t\t});\n\n\t\t\tif (this.settings.hideOnShadeClick)\n\t\t\t{\n\t\t\t\tthis.removeListener(this.$shade, 'click');\n\t\t\t}\n\n\t\t\tthis.removeListener(Garnish.$win, 'resize');\n\t\t}\n\n\t\tthis.visible = false;\n\t\tGarnish.Modal.visibleModal = null;\n\n\t\tif (this.settings.hideOnEsc)\n\t\t{\n\t\t\tGarnish.escManager.unregister(this);\n\t\t}\n\n\t\tthis.trigger('hide');\n\t\tthis.settings.onHide();\n\t},\n\n\tquickHide: function()\n\t{\n\t\tthis.hide();\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('stop');\n\t\t\tthis.$container.css('opacity', 0).hide();\n\n\t\t\tthis.$shade.velocity('stop');\n\t\t\tthis.$shade.css('opacity', 0).hide();\n\t\t}\n\t},\n\n\tupdateSizeAndPosition: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$container.css({\n\t\t\t'width':      (this.desiredWidth ? Math.max(this.desiredWidth, 200) : ''),\n\t\t\t'height':     (this.desiredHeight ? Math.max(this.desiredHeight, 200) : ''),\n\t\t\t'min-width':  '',\n\t\t\t'min-height': ''\n\t\t});\n\n\t\t// Set the width first so that the height can adjust for the width\n\t\tthis.updateSizeAndPosition._windowWidth = Garnish.$win.width();\n\t\tthis.updateSizeAndPosition._width = Math.min(this.getWidth(), this.updateSizeAndPosition._windowWidth - this.settings.minGutter*2);\n\n\t\tthis.$container.css({\n\t\t\t'width':      this.updateSizeAndPosition._width,\n\t\t\t'min-width':  this.updateSizeAndPosition._width,\n\t\t\t'left':       Math.round((this.updateSizeAndPosition._windowWidth - this.updateSizeAndPosition._width) / 2)\n\t\t});\n\n\t\t// Now set the height\n\t\tthis.updateSizeAndPosition._windowHeight = Garnish.$win.height();\n\t\tthis.updateSizeAndPosition._height = Math.min(this.getHeight(), this.updateSizeAndPosition._windowHeight - this.settings.minGutter*2);\n\n\t\tthis.$container.css({\n\t\t\t'height':     this.updateSizeAndPosition._height,\n\t\t\t'min-height': this.updateSizeAndPosition._height,\n\t\t\t'top':        Math.round((this.updateSizeAndPosition._windowHeight - this.updateSizeAndPosition._height) / 2)\n\t\t});\n\t},\n\n\tonFadeIn: function()\n\t{\n\t\tthis.trigger('fadeIn');\n\t\tthis.settings.onFadeIn();\n\t},\n\n\tonFadeOut: function()\n\t{\n\t\tthis.trigger('fadeOut');\n\t\tthis.settings.onFadeOut();\n\t},\n\n\tgetHeight: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\tthrow 'Attempted to get the height of a modal whose container has not been set.';\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.show();\n\t\t}\n\n\t\tthis.getHeight._height = this.$container.outerHeight();\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.hide();\n\t\t}\n\n\t\treturn this.getHeight._height;\n\t},\n\n\tgetWidth: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\tthrow 'Attempted to get the width of a modal whose container has not been set.';\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.show();\n\t\t}\n\n\t\t// Chrome might be 1px shy here for some reason\n\t\tthis.getWidth._width = this.$container.outerWidth() + 1;\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.hide();\n\t\t}\n\n\t\treturn this.getWidth._width;\n\t},\n\n\t_handleResizeStart: function()\n\t{\n\t\tthis.resizeStartWidth = this.getWidth();\n\t\tthis.resizeStartHeight = this.getHeight();\n\t},\n\n\t_handleResize: function()\n\t{\n\t\tif (Garnish.ltr)\n\t\t{\n\t\t\tthis.desiredWidth = this.resizeStartWidth + (this.resizeDragger.mouseDistX * 2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.desiredWidth = this.resizeStartWidth - (this.resizeDragger.mouseDistX * 2);\n\t\t}\n\n\t\tthis.desiredHeight = this.resizeStartHeight + (this.resizeDragger.mouseDistY * 2);\n\n\t\tthis.updateSizeAndPosition();\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.removeData('modal').remove();\n\t\t}\n\n\t\tif (this.dragger)\n\t\t{\n\t\t\tthis.dragger.destroy();\n\t\t}\n\n\t\tif (this.resizeDragger)\n\t\t{\n\t\t\tthis.resizeDragger.destroy();\n\t\t}\n\n\t\tthis.base();\n\t}\n},\n{\n\trelativeElemPadding: 8,\n\tdefaults: {\n\t\tautoShow: true,\n\t\tdraggable: false,\n\t\tdragHandleSelector: null,\n\t\tresizable: false,\n\t\tminGutter: 10,\n\t\tonShow: $.noop,\n\t\tonHide: $.noop,\n\t\tonFadeIn: $.noop,\n\t\tonFadeOut: $.noop,\n\t\tcloseOtherModals: false,\n\t\thideOnEsc: true,\n\t\thideOnShadeClick: true,\n\t\tshadeClass: 'modal-shade'\n\t},\n\tinstances: [],\n\tvisibleModal: null\n});\n","/**\n * Nice Text\n */\nGarnish.NiceText = Garnish.Base.extend({\n\n\t$input: null,\n\t$hint: null,\n\t$stage: null,\n\t$charsLeft: null,\n\tautoHeight: null,\n\tmaxLength: null,\n\tshowCharsLeft: false,\n\tshowingHint: false,\n\tval: null,\n\tinputBoxSizing: 'content-box',\n\twidth: null,\n\theight: null,\n\tminHeight: null,\n\tinitialized: false,\n\n\tinit: function(input, settings)\n\t{\n\t\tthis.$input = $(input);\n\t\tthis.settings = $.extend({}, Garnish.NiceText.defaults, settings);\n\n\t\tif (this.isVisible())\n\t\t{\n\t\t\tthis.initialize();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'initializeIfVisible');\n\t\t}\n\t},\n\n\tisVisible: function()\n\t{\n\t\treturn (this.$input.height() > 0);\n\t},\n\n\tinitialize: function()\n\t{\n\t\tif (this.initialized)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\t\tthis.removeListener(Garnish.$win, 'resize');\n\n\t\tthis.maxLength = this.$input.attr('maxlength');\n\n\t\tif (this.maxLength)\n\t\t{\n\t\t\tthis.maxLength = parseInt(this.maxLength);\n\t\t}\n\n\t\tif (this.maxLength && (this.settings.showCharsLeft || Garnish.hasAttr(this.$input, 'data-show-chars-left')))\n\t\t{\n\t\t\tthis.showCharsLeft = true;\n\n\t\t\t// Remove the maxlength attribute\n\t\t\tthis.$input.removeAttr('maxlength');\n\t\t}\n\n\t\t// Is this already a transparent text input?\n\t\tif (this.$input.data('nicetext'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a transparent text input on an element');\n\t\t\tthis.$input.data('nicetext').destroy();\n\t\t}\n\n\t\tthis.$input.data('nicetext', this);\n\n\t\tthis.getVal();\n\n\t\tthis.autoHeight = (this.settings.autoHeight && this.$input.prop('nodeName') == 'TEXTAREA');\n\n\t\tif (this.autoHeight)\n\t\t{\n\t\t\tthis.minHeight = this.getHeightForValue('');\n\t\t\tthis.updateHeight();\n\n\t\t\t// Update height when the window resizes\n\t\t\tthis.width = this.$input.width();\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'updateHeightIfWidthChanged');\n\t\t}\n\n\t\tif (this.settings.hint)\n\t\t{\n\t\t\tthis.$hintContainer = $('<div class=\"texthint-container\"/>').insertBefore(this.$input);\n\t\t\tthis.$hint = $('<div class=\"texthint\">'+this.settings.hint+'</div>').appendTo(this.$hintContainer);\n\t\t\tthis.$hint.css({\n\t\t\t\ttop:  (parseInt(this.$input.css('borderTopWidth'))  + parseInt(this.$input.css('paddingTop'))),\n\t\t\t\tleft: (parseInt(this.$input.css('borderLeftWidth')) + parseInt(this.$input.css('paddingLeft')) + 1)\n\t\t\t});\n\t\t\tGarnish.copyTextStyles(this.$input, this.$hint);\n\n\t\t\tif (this.val)\n\t\t\t{\n\t\t\t\tthis.$hint.hide();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.showingHint = true;\n\t\t\t}\n\n\t\t\t// Focus the input when clicking on the hint\n\t\t\tthis.addListener(this.$hint, 'mousedown', function(ev) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tthis.$input.focus();\n\t\t\t});\n\t\t}\n\n\t\tif (this.showCharsLeft)\n\t\t{\n\t\t\tthis.$charsLeft = $('<div class=\"'+this.settings.charsLeftClass+'\"/>').insertAfter(this.$input);\n\t\t\tthis.updateCharsLeft();\n\t\t}\n\n\t\tthis.addListener(this.$input, 'textchange', 'onTextChange');\n\t},\n\n\tinitializeIfVisible: function()\n\t{\n\t\tif (this.isVisible())\n\t\t{\n\t\t\tthis.initialize();\n\t\t}\n\t},\n\n\tgetVal: function()\n\t{\n\t\tthis.val = this.$input.val();\n\t\treturn this.val;\n\t},\n\n\tshowHint: function()\n\t{\n\t\tthis.$hint.velocity('fadeIn', {\n\t\t\tcomplete: Garnish.NiceText.hintFadeDuration\n\t\t});\n\n\t\tthis.showingHint = true;\n\t},\n\n\thideHint: function()\n\t{\n\t\tthis.$hint.velocity('fadeOut', {\n\t\t\tcomplete: Garnish.NiceText.hintFadeDuration\n\t\t});\n\n\t\tthis.showingHint = false;\n\t},\n\n\tonTextChange: function()\n\t{\n\t\tthis.getVal();\n\n\t\tif (this.$hint)\n\t\t{\n\t\t\tif (this.showingHint && this.val)\n\t\t\t{\n\t\t\t\tthis.hideHint();\n\t\t\t}\n\t\t\telse if (!this.showingHint && !this.val)\n\t\t\t{\n\t\t\t\tthis.showHint();\n\t\t\t}\n\t\t}\n\n\t\tif (this.autoHeight)\n\t\t{\n\t\t\tthis.updateHeight();\n\t\t}\n\n\t\tif (this.showCharsLeft)\n\t\t{\n\t\t\tthis.updateCharsLeft();\n\t\t}\n\t},\n\n\tbuildStage: function()\n\t{\n\t\tthis.$stage = $('<stage/>').appendTo(Garnish.$bod);\n\n\t\t// replicate the textarea's text styles\n\t\tthis.$stage.css({\n\t\t\tdisplay: 'block',\n\t\t\tposition: 'absolute',\n\t\t\ttop: -9999,\n\t\t\tleft: -9999\n\t\t});\n\n\t\tthis.inputBoxSizing = this.$input.css('box-sizing');\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.$stage.css({\n\t\t\t\t'border-top':          this.$input.css('border-top'),\n\t\t\t\t'border-right':        this.$input.css('border-right'),\n\t\t\t\t'border-bottom':       this.$input.css('border-bottom'),\n\t\t\t\t'border-left':         this.$input.css('border-left'),\n\t\t\t\t'padding-top':         this.$input.css('padding-top'),\n\t\t\t\t'padding-right':       this.$input.css('padding-right'),\n\t\t\t\t'padding-bottom':      this.$input.css('padding-bottom'),\n\t\t\t\t'padding-left':        this.$input.css('padding-left'),\n\t\t\t\t'-webkit-box-sizing':  this.inputBoxSizing,\n\t\t\t\t'-moz-box-sizing':     this.inputBoxSizing,\n\t\t\t\t'box-sizing':          this.inputBoxSizing\n\t\t\t});\n\t\t}\n\n\t\tGarnish.copyTextStyles(this.$input, this.$stage);\n\t},\n\n\tgetHeightForValue: function(val)\n\t{\n\t\tif (!this.$stage)\n\t\t{\n\t\t\tthis.buildStage();\n\t\t}\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.$stage.css('width', this.$input.outerWidth());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$stage.css('width', this.$input.width());\n\t\t}\n\n\t\tif (!val)\n\t\t{\n\t\t\tval = '&nbsp;';\n\t\t\tfor (var i = 1; i < this.$input.prop('rows'); i++)\n\t\t\t{\n\t\t\t\tval += '<br/>&nbsp;';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Ampersand entities\n\t\t\tval = val.replace(/&/g, '&amp;');\n\n\t\t\t// < and >\n\t\t\tval = val.replace(/</g, '&lt;');\n\t\t\tval = val.replace(/>/g, '&gt;');\n\n\t\t\t// Spaces\n\t\t\tval = val.replace(/ /g, '&nbsp;');\n\n\t\t\t// Line breaks\n\t\t\tval = val.replace(/[\\n\\r]$/g, '');\n\t\t\tval = val.replace(/[\\n\\r]/g, '<br/>');\n\t\t\tval += '<br/>&nbsp;';\n\t\t}\n\n\t\tthis.$stage.html(val);\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.$stage.outerHeight();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.$stage.height();\n\t\t}\n\n\t\tif (this.minHeight && this.getHeightForValue._height < this.minHeight)\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.minHeight;\n\t\t}\n\n\t\treturn this.getHeightForValue._height;\n\t},\n\n\tupdateHeight: function()\n\t{\n\t\t// has the height changed?\n\t\tif (this.height !== (this.height = this.getHeightForValue(this.val)))\n\t\t{\n\t\t\tthis.$input.css('min-height', this.height);\n\n\t\t\tif (this.initialized)\n\t\t\t{\n\t\t\t\tthis.onHeightChange();\n\t\t\t}\n\t\t}\n\t},\n\n\tupdateHeightIfWidthChanged: function()\n\t{\n\t\tif (this.width !== (this.width = this.$input.width()) && this.width)\n\t\t{\n\t\t\tthis.updateHeight();\n\t\t}\n\t},\n\n\tonHeightChange: function()\n\t{\n\t\tthis.settings.onHeightChange();\n\t},\n\n\tupdateCharsLeft: function()\n\t{\n\t\tthis.updateCharsLeft._charsLeft = this.maxLength - this.val.length;\n\t\tthis.$charsLeft.text(this.updateCharsLeft._charsLeft);\n\n\t\tif (this.updateCharsLeft._charsLeft >= 0)\n\t\t{\n\t\t\tthis.$charsLeft.removeClass(this.settings.negativeCharsLeftClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$charsLeft.addClass(this.settings.negativeCharsLeftClass);\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$input.removeData('nicetext');\n\n\t\tif (this.$hint)\n\t\t{\n\t\t\tthis.$hint.remove();\n\t\t}\n\n\t\tif (this.$stage)\n\t\t{\n\t\t\tthis.$stage.remove();\n\t\t}\n\n\t\tthis.base();\n\t}\n},\n{\n\tinterval: 100,\n\thintFadeDuration: 50,\n\tdefaults: {\n\t\tautoHeight:             true,\n\t\tshowCharsLeft:          false,\n\t\tcharsLeftClass:         'chars-left',\n\t\tnegativeCharsLeftClass: 'negative-chars-left',\n\t\tonHeightChange:         $.noop\n\t}\n});\n","/**\n * Pill\n */\nGarnish.Pill = Garnish.Base.extend({\n\n\t$outerContainer: null,\n\t$innerContainer: null,\n\t$btns: null,\n\t$selectedBtn: null,\n\t$input: null,\n\n\tinit: function(outerContainer)\n\t{\n\t\tthis.$outerContainer = $(outerContainer);\n\n\t\t// Is this already a pill?\n\t\tif (this.$outerContainer.data('pill'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a pill on an element');\n\t\t\tthis.$outerContainer.data('pill').destroy();\n\t\t}\n\n\t\tthis.$outerContainer.data('pill', this);\n\n\t\tthis.$innerContainer = this.$outerContainer.find('.btngroup:first');\n\t\tthis.$btns = this.$innerContainer.find('.btn');\n\t\tthis.$selectedBtn = this.$btns.filter('.active:first');\n\t\tthis.$input = this.$outerContainer.find('input:first');\n\n\t\tGarnish.preventOutlineOnMouseFocus(this.$innerContainer);\n\t\tthis.addListener(this.$btns, 'mousedown', 'onMouseDown');\n\t\tthis.addListener(this.$innerContainer, 'keydown', 'onKeyDown');\n\t},\n\n\tselect: function(btn)\n\t{\n\t\tthis.$selectedBtn.removeClass('active');\n\t\tvar $btn = $(btn);\n\t\t$btn.addClass('active');\n\t\tthis.$input.val($btn.attr('data-value'));\n\t\tthis.$selectedBtn = $btn;\n\t},\n\n\tselectNext: function()\n\t{\n\t\tif (!this.$selectedBtn.length)\n\t\t{\n\t\t\tthis.select(this.$btns[this.$btns.length-1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar nextIndex = this._getSelectedBtnIndex() + 1;\n\n\t\t\tif (typeof this.$btns[nextIndex] != 'undefined')\n\t\t\t{\n\t\t\t\tthis.select(this.$btns[nextIndex]);\n\t\t\t}\n\t\t}\n\t},\n\n\tselectPrev: function()\n\t{\n\t\tif (!this.$selectedBtn.length)\n\t\t{\n\t\t\tthis.select(this.$btns[0]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar prevIndex = this._getSelectedBtnIndex() - 1;\n\n\t\t\tif (typeof this.$btns[prevIndex] != 'undefined')\n\t\t\t{\n\t\t\t\tthis.select(this.$btns[prevIndex]);\n\t\t\t}\n\t\t}\n\t},\n\n\tonMouseDown: function(ev)\n\t{\n\t\tthis.select(ev.currentTarget);\n\t},\n\n\t_getSelectedBtnIndex: function()\n\t{\n\t\tif (typeof this.$selectedBtn[0] != 'undefined')\n\t\t{\n\t\t\treturn $.inArray(this.$selectedBtn[0], this.$btns);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\tonKeyDown: function(ev)\n\t{\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.selectNext();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.selectPrev();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.selectPrev();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.selectNext();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$outerContainer.removeData('pill');\n\t\tthis.base();\n\t}\n});\n","/**\n * Select\n */\nGarnish.Select = Garnish.Base.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$container: null,\n\t$items: null,\n\t$selectedItems: null,\n\n\tmousedownTarget: null,\n\tmouseUpTimeout: null,\n\tcallbackFrame: null,\n\n\t$focusable: null,\n\t$first: null,\n\tfirst: null,\n\t$last: null,\n\tlast: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(container, items, settings)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Param mapping\n\t\tif (typeof items == typeof undefined && $.isPlainObject(container))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = container;\n\t\t\tcontainer = null;\n\t\t\titems = null;\n\t\t}\n\t\telse if (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (container, settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\t// Is this already a select?\n\t\tif (this.$container.data('select'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a select on an element');\n\t\t\tthis.$container.data('select').destroy();\n\t\t}\n\n\t\tthis.$container.data('select', this);\n\n\t\tthis.setSettings(settings, Garnish.Select.defaults);\n\n\t\tthis.$items = $();\n\t\tthis.$selectedItems = $();\n\n\t\tthis.addItems(items);\n\n\t\t// --------------------------------------------------------------------\n\n\t\tif (this.settings.allowEmpty && !this.settings.checkboxMode)\n\t\t{\n\t\t\tthis.addListener(this.$container, 'click', function(ev)\n\t\t\t{\n\t\t\t\tif (this.ignoreClick)\n\t\t\t\t{\n\t\t\t\t\tthis.ignoreClick = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Deselect all items on container click\n\t\t\t\t\tthis.deselectAll(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * Get Item Index\n\t */\n\tgetItemIndex: function($item)\n\t{\n\t\treturn this.$items.index($item[0]);\n\t},\n\n\t/**\n\t * Is Selected?\n\t */\n\tisSelected: function(item)\n\t{\n\t\tif (Garnish.isJquery(item))\n\t\t{\n\t\t\tif (!item[0])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\titem = item[0];\n\t\t}\n\n\t\treturn ($.inArray(item, this.$selectedItems) != -1);\n\t},\n\n\t/**\n\t * Select Item\n\t */\n\tselectItem: function($item, focus, preventScroll)\n\t{\n\t\tif (!this.settings.multi)\n\t\t{\n\t\t\tthis.deselectAll();\n\t\t}\n\n\t\tthis.$first = this.$last = $item;\n\t\tthis.first = this.last = this.getItemIndex($item);\n\n\t\tif (focus)\n\t\t{\n\t\t\tthis.setFocusableItem($item);\n\t\t\tthis.focusItem($item, preventScroll);\n\t\t}\n\n\t\tthis._selectItems($item);\n\t},\n\n\tselectAll: function()\n\t{\n\t\tif (!this.settings.multi || !this.$items.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.first = 0;\n\t\tthis.last = this.$items.length-1;\n\t\tthis.$first = this.$items.eq(this.first);\n\t\tthis.$last = this.$items.eq(this.last);\n\n\t\tthis._selectItems(this.$items);\n\t},\n\n\t/**\n\t * Select Range\n\t */\n\tselectRange: function($item, preventScroll)\n\t{\n\t\tif (!this.settings.multi)\n\t\t{\n\t\t\treturn this.selectItem($item, true);\n\t\t}\n\n\t\tthis.deselectAll();\n\n\t\tthis.$last = $item;\n\t\tthis.last = this.getItemIndex($item);\n\n\t\tthis.setFocusableItem($item);\n\t\tthis.focusItem($item, preventScroll);\n\n\t\t// prepare params for $.slice()\n\t\tif (this.first < this.last)\n\t\t{\n\t\t\tvar sliceFrom = this.first,\n\t\t\t\tsliceTo = this.last + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar sliceFrom = this.last,\n\t\t\t\tsliceTo = this.first + 1;\n\t\t}\n\n\t\tthis._selectItems(this.$items.slice(sliceFrom, sliceTo));\n\t},\n\n\t/**\n\t * Deselect Item\n\t */\n\tdeselectItem: function($item)\n\t{\n\t\tvar index = this.getItemIndex($item);\n\t\tif (this.first === index) this.$first = this.first = null;\n\t\tif (this.last === index) this.$last = this.last = null;\n\n\t\tthis._deselectItems($item);\n\t},\n\n\t/**\n\t * Deselect All\n\t */\n\tdeselectAll: function(clearFirst)\n\t{\n\t\tif (clearFirst)\n\t\t{\n\t\t\tthis.$first = this.first = this.$last = this.last = null;\n\t\t}\n\n\t\tthis._deselectItems(this.$items);\n\t},\n\n\t/**\n\t * Deselect Others\n\t */\n\tdeselectOthers: function($item)\n\t{\n\t\tthis.deselectAll();\n\t\tthis.selectItem($item, true);\n\t},\n\n\t/**\n\t * Toggle Item\n\t */\n\ttoggleItem: function($item, preventScroll)\n\t{\n\t\tif (!this.isSelected($item))\n\t\t{\n\t\t\tthis.selectItem($item, true, preventScroll);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this._canDeselect($item))\n\t\t\t{\n\t\t\t\tthis.deselectItem($item, true);\n\t\t\t}\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\tclearMouseUpTimeout: function()\n\t{\n\t\tclearTimeout(this.mouseUpTimeout);\n\t},\n\n\tgetFirstItem: function()\n\t{\n\t\tif (this.$items.length)\n\t\t{\n\t\t\treturn this.$items.first();\n\t\t}\n\t},\n\n\tgetLastItem: function()\n\t{\n\t\tif (this.$items.length)\n\t\t{\n\t\t\treturn this.$items.last();\n\t\t}\n\t},\n\n\tisPreviousItem: function(index)\n\t{\n\t\treturn (index > 0);\n\t},\n\n\tisNextItem: function(index)\n\t{\n\t\treturn (index < this.$items.length-1);\n\t},\n\n\tgetPreviousItem: function(index)\n\t{\n\t\tif (this.isPreviousItem(index))\n\t\t{\n\t\t\treturn this.$items.eq(index-1);\n\t\t}\n\t},\n\n\tgetNextItem: function(index)\n\t{\n\t\tif (this.isNextItem(index))\n\t\t{\n\t\t\treturn this.$items.eq(index+1);\n\t\t}\n\t},\n\n\tgetItemToTheLeft: function(index)\n\t{\n\t\tvar func = (Garnish.ltr ? 'Previous' : 'Next');\n\n\t\tif (this['is'+func+'Item'](index))\n\t\t{\n\t\t\tif (this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this['get'+func+'Item'](index);\n\t\t\t}\n\t\t\tif (!this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.X_AXIS, '<');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemToTheRight: function(index)\n\t{\n\t\tvar func = (Garnish.ltr ? 'Next' : 'Previous');\n\n\t\tif (this['is'+func+'Item'](index))\n\t\t{\n\t\t\tif (this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this['get'+func+'Item'](index);\n\t\t\t}\n\t\t\telse if (!this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.X_AXIS, '>');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemAbove: function(index)\n\t{\n\t\tif (this.isPreviousItem(index))\n\t\t{\n\t\t\tif (this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getPreviousItem(index);\n\t\t\t}\n\t\t\telse if (!this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.Y_AXIS, '<');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemBelow: function(index)\n\t{\n\t\tif (this.isNextItem(index))\n\t\t{\n\t\t\tif (this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getNextItem(index);\n\t\t\t}\n\t\t\telse if (!this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.Y_AXIS, '>');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetClosestItem: function(index, axis, dir)\n\t{\n\t\tvar axisProps = Garnish.Select.closestItemAxisProps[axis],\n\t\t\tdirProps = Garnish.Select.closestItemDirectionProps[dir];\n\n\t\tvar $thisItem = this.$items.eq(index),\n\t\t\tthisOffset = $thisItem.offset(),\n\t\t\tthisMidpoint = thisOffset[axisProps.midpointOffset] + Math.round($thisItem[axisProps.midpointSizeFunc]()/2),\n\t\t\totherRowPos = null,\n\t\t\tsmallestMidpointDiff = null,\n\t\t\t$closestItem = null;\n\n\t\t// Go the other way if this is the X axis and a RTL page\n\t\tif (Garnish.rtl && axis == Garnish.X_AXIS)\n\t\t{\n\t\t\tvar step = dirProps.step * -1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar step = dirProps.step;\n\t\t}\n\n\t\tfor (var i = index + step; (typeof this.$items[i] != 'undefined'); i += step)\n\t\t{\n\t\t\tvar $otherItem = this.$items.eq(i),\n\t\t\t\totherOffset = $otherItem.offset();\n\n\t\t\t// Are we on the next row yet?\n\t\t\tif (dirProps.isNextRow(otherOffset[axisProps.rowOffset], thisOffset[axisProps.rowOffset]))\n\t\t\t{\n\t\t\t\t// Is this the first time we've seen this row?\n\t\t\t\tif (otherRowPos === null)\n\t\t\t\t{\n\t\t\t\t\totherRowPos = otherOffset[axisProps.rowOffset];\n\t\t\t\t}\n\t\t\t\t// Have we gone too far?\n\t\t\t\telse if (otherOffset[axisProps.rowOffset] != otherRowPos)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar otherMidpoint = otherOffset[axisProps.midpointOffset] + Math.round($otherItem[axisProps.midpointSizeFunc]()/2),\n\t\t\t\t\tmidpointDiff = Math.abs(thisMidpoint - otherMidpoint);\n\n\t\t\t\t// Are we getting warmer?\n\t\t\t\tif (smallestMidpointDiff === null || midpointDiff < smallestMidpointDiff)\n\t\t\t\t{\n\t\t\t\t\tsmallestMidpointDiff = midpointDiff;\n\t\t\t\t\t$closestItem = $otherItem;\n\t\t\t\t}\n\t\t\t\t// Getting colder?\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Getting colder?\n\t\t\telse if (dirProps.isWrongDirection(otherOffset[axisProps.rowOffset], thisOffset[axisProps.rowOffset]))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $closestItem;\n\t},\n\n\tgetFurthestItemToTheLeft: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'ToTheLeft');\n\t},\n\n\tgetFurthestItemToTheRight: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'ToTheRight');\n\t},\n\n\tgetFurthestItemAbove: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'Above');\n\t},\n\n\tgetFurthestItemBelow: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'Below');\n\t},\n\n\tgetFurthestItem: function(index, dir)\n\t{\n\t\tvar $item, $testItem;\n\n\t\twhile ($testItem = this['getItem'+dir](index))\n\t\t{\n\t\t\t$item = $testItem;\n\t\t\tindex = this.getItemIndex($item);\n\t\t}\n\n\t\treturn $item;\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * totalSelected getter\n\t */\n\tget totalSelected()\n\t{\n\t\treturn this.getTotalSelected();\n\t},\n\n\t/**\n\t * Get Total Selected\n\t */\n\tgetTotalSelected: function()\n\t{\n\t\treturn this.$selectedItems.length;\n\t},\n\n\t/**\n\t * Add Items\n\t */\n\taddItems: function(items)\n\t{\n\t\tvar $items = $(items);\n\n\t\tfor (var i = 0; i < $items.length; i++)\n\t\t{\n\t\t\tvar item = $items[i];\n\n\t\t\t// Make sure this element doesn't belong to another selector\n\t\t\tif ($.data(item, 'select'))\n\t\t\t{\n\t\t\t\tGarnish.log('Element was added to more than one selector');\n\t\t\t\t$.data(item, 'select').removeItems(item);\n\t\t\t}\n\n\t\t\t// Add the item\n\t\t\t$.data(item, 'select', this);\n\n\t\t\t// Get the handle\n\t\t\tif (this.settings.handle)\n\t\t\t{\n\t\t\t\tif (typeof this.settings.handle == 'object')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(this.settings.handle);\n\t\t\t\t}\n\t\t\t\telse if (typeof this.settings.handle == 'string')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(item).find(this.settings.handle);\n\t\t\t\t}\n\t\t\t\telse if (typeof this.settings.handle == 'function')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(this.settings.handle(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar $handle = $(item);\n\t\t\t}\n\n\t\t\t$.data(item, 'select-handle', $handle);\n\t\t\t$handle.data('select-item', item);\n\n\t\t\tthis.addListener($handle, 'mousedown', 'onMouseDown');\n\t\t\tthis.addListener($handle, 'mouseup', 'onMouseUp');\n\t\t\tthis.addListener($handle, 'click', function(ev)\n\t\t\t{\n\t\t\t\tthis.ignoreClick = true;\n\t\t\t});\n\n\t\t\tthis.addListener(item, 'keydown', 'onKeyDown');\n\t\t}\n\n\t\tthis.$items = this.$items.add($items);\n\t\tthis.updateIndexes();\n\t},\n\n\t/**\n\t * Remove Items\n\t */\n\tremoveItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tvar itemsChanged = false,\n\t\t\tselectionChanged = false;\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure we actually know about this item\n\t\t\tvar index = $.inArray(item, this.$items);\n\t\t\tif (index != -1)\n\t\t\t{\n\t\t\t\tthis._deinitItem(item);\n\t\t\t\tthis.$items.splice(index, 1);\n\t\t\t\titemsChanged = true;\n\n\t\t\t\tvar selectedIndex = $.inArray(item, this.$selectedItems);\n\t\t\t\tif (selectedIndex != -1)\n\t\t\t\t{\n\t\t\t\t\tthis.$selectedItems.splice(selectedIndex, 1);\n\t\t\t\t\tselectionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (itemsChanged)\n\t\t{\n\t\t\tthis.updateIndexes();\n\n\t\t\tif (selectionChanged)\n\t\t\t{\n\t\t\t\t$(items).removeClass(this.settings.selectedClass);\n\t\t\t\tthis.onSelectionChange();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Remove All Items\n\t */\n\tremoveAllItems: function()\n\t{\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tthis._deinitItem(this.$items[i]);\n\t\t}\n\n\t\tthis.$items = $();\n\t\tthis.$selectedItems = $();\n\t\tthis.updateIndexes();\n\t},\n\n\t/**\n\t * Update First/Last indexes\n\t */\n\tupdateIndexes: function()\n\t{\n\t\tif (this.first !== null)\n\t\t{\n\t\t\tthis.first = this.getItemIndex(this.$first);\n\t\t\tthis.setFocusableItem(this.$first);\n\t\t}\n\t\telse if (this.$items.length)\n\t\t{\n\t\t\tthis.setFocusableItem($(this.$items[0]));\n\t\t}\n\n\t\tif (this.last !== null)\n\t\t{\n\t\t\tthis.last = this.getItemIndex(this.$last);\n\t\t}\n\t},\n\n\t/**\n\t * Reset Item Order\n\t */\n\t resetItemOrder: function()\n\t {\n\t \tthis.$items = $().add(this.$items);\n\t \tthis.$selectedItems = $().add(this.$selectedItems);\n\t \tthis.updateIndexes();\n\t },\n\n\t/**\n\t * Sets the focusable item.\n\t *\n\t * We only want to have one focusable item per selection list, so that the user\n\t * doesn't have to tab through a million items.\n\t *\n\t * @param object $item\n\t */\n\tsetFocusableItem: function($item)\n\t{\n\t\tif (this.$focusable)\n\t\t{\n\t\t\tthis.$focusable.removeAttr('tabindex');\n\t\t}\n\n\t\tthis.$focusable = $item.attr('tabindex', '0');\n\t},\n\n\t/**\n\t * Sets the focus on an item.\n\t */\n\tfocusItem: function($item, preventScroll)\n\t{\n\t\tif (preventScroll)\n\t\t{\n\t\t\tvar scrollLeft = Garnish.$doc.scrollLeft(),\n\t\t\t\tscrollTop = Garnish.$doc.scrollTop();\n\t\t\t$item.focus();\n\t\t\twindow.scrollTo(scrollLeft, scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$item.focus();\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * Get Selected Items\n\t */\n\tgetSelectedItems: function()\n\t{\n\t\treturn this.$selectedItems;\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$container.removeData('select');\n\t\tthis.removeAllItems();\n\t\tthis.base();\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Mouse Down\n\t */\n\tonMouseDown: function(ev)\n\t{\n\t\t// ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Enforce the filter\n\t\tif (this.settings.filter && !$(ev.target).is(this.settings.filter))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mousedownTarget = ev.currentTarget;\n\n\t\tvar $item = $($.data(ev.currentTarget, 'select-item'));\n\n\t\tif (this.first !== null && ev.shiftKey)\n\t\t{\n\t\t\t// Shift key is consistent for both selection modes\n\t\t\tthis.selectRange($item, true);\n\t\t}\n\t\telse if (this._actAsCheckbox(ev))\n\t\t{\n\t\t\tthis.toggleItem($item, true);\n\t\t}\n\t},\n\n\t/**\n\t * On Mouse Up\n\t */\n\tonMouseUp: function(ev)\n\t{\n\t\t// ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Enfore the filter\n\t\tif (this.settings.filter && !$(ev.target).is(this.settings.filter))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar $item = $($.data(ev.currentTarget, 'select-item'));\n\n\t\t// was this a click?\n\t\tif (\n\t\t\t!this._actAsCheckbox(ev) &&\n\t\t\t!ev.shiftKey &&\n\t\t\tev.currentTarget == this.mousedownTarget\n\t\t)\n\t\t{\n\t\t\t// If this is already selected, wait a moment to see if this is a double click before making any rash decisions\n\t\t\tif (this.isSelected($item))\n\t\t\t{\n\t\t\t\tthis.clearMouseUpTimeout();\n\n\t\t\t\tthis.mouseUpTimeout = setTimeout($.proxy(function() {\n\t\t\t\t\tthis.deselectOthers($item);\n\t\t\t\t}, this), 300);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.deselectAll();\n\t\t\t\tthis.selectItem($item, true, true);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * On Key Down\n\t */\n\tonKeyDown: function(ev)\n\t{\n\t\t// Ignore if the focus isn't on one of our items\n\t\tif (ev.target != ev.currentTarget)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctrlKey = Garnish.isCtrlKeyPressed(ev);\n\n\t\tif (!this.settings.checkboxMode || !this.$focusable.length)\n\t\t{\n\t\t\tvar anchor = ev.shiftKey ? this.last : this.first;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar anchor = $.inArray(this.$focusable[0], this.$items);\n\n\t\t\tif (anchor == -1)\n\t\t\t{\n\t\t\t\tanchor = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Ok, what are we doing here?\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the last item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (Garnish.ltr)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemToTheLeft(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemToTheLeft(anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the first item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (Garnish.ltr)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemToTheRight(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemToTheRight(anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.UP_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the last item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (this.$focusable)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.$focusable.prev();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.$focusable || !$item.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemAbove(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemAbove(anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$item)\n\t\t\t\t\t{\n\t\t\t\t\t\t$item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.DOWN_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the first item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (this.$focusable)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.$focusable.next();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.$focusable || !$item.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemBelow(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemBelow(anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$item)\n\t\t\t\t\t{\n\t\t\t\t\t\t$item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.SPACE_KEY:\n\t\t\t{\n\t\t\t\tif (!ctrlKey)\n\t\t\t\t{\n\t\t\t\t\tev.preventDefault();\n\n\t\t\t\t\tif (this.isSelected(this.$focusable))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this._canDeselect(this.$focusable))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.deselectItem(this.$focusable);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.selectItem(this.$focusable, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.A_KEY:\n\t\t\t{\n\t\t\t\tif (ctrlKey)\n\t\t\t\t{\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tthis.selectAll();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Is there an item queued up for focus/selection?\n\t\tif ($item && $item.length)\n\t\t{\n\t\t\tif (!this.settings.checkboxMode)\n\t\t\t{\n\t\t\t\t// select it\n\t\t\t\tif (this.first !== null && ev.shiftKey)\n\t\t\t\t{\n\t\t\t\t\tthis.selectRange($item);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.deselectAll();\n\t\t\t\t\tthis.selectItem($item, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// just set the new item to be focussable\n\t\t\t\tthis.setFocusableItem($item);\n\t\t\t\t$item.focus();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Set Callback Timeout\n\t */\n\tonSelectionChange: function()\n\t{\n\t\tif (this.callbackFrame)\n\t\t{\n\t\t\tGarnish.cancelAnimationFrame(this.callbackFrame);\n\t\t\tthis.callbackFrame = null;\n\t\t}\n\n\t\tthis.callbackFrame = Garnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.callbackFrame = null;\n\t\t\tthis.trigger('selectionChange');\n\t\t\tthis.settings.onSelectionChange();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t_actAsCheckbox: function(ev)\n\t{\n\t\tif (Garnish.isCtrlKeyPressed(ev))\n\t\t{\n\t\t\treturn !this.settings.checkboxMode;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.settings.checkboxMode;\n\t\t}\n\t},\n\n\t_canDeselect: function($items)\n\t{\n\t\treturn (this.settings.allowEmpty || this.totalSelected > $items.length);\n\t},\n\n\t_selectItems: function($items)\n\t{\n\t\t$items.addClass(this.settings.selectedClass);\n\t\tthis.$selectedItems = this.$selectedItems.add($items);\n\t\tthis.onSelectionChange();\n\t},\n\n\t_deselectItems: function($items)\n\t{\n\t\t$items.removeClass(this.settings.selectedClass);\n\t\tthis.$selectedItems = this.$selectedItems.not($items);\n\t\tthis.onSelectionChange();\n\t},\n\n\t/**\n\t * Deinitialize an item.\n\t */\n\t_deinitItem: function(item)\n\t{\n\t\tvar $handle = $.data(item, 'select-handle');\n\n\t\tif ($handle)\n\t\t{\n\t\t\t$handle.removeData('select-item');\n\t\t\tthis.removeAllListeners($handle);\n\t\t}\n\n\t\t$.removeData(item, 'select');\n\t\t$.removeData(item, 'select-handle');\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tselectedClass: 'sel',\n\t\tmulti: false,\n\t\tallowEmpty: true,\n\t\tvertical: false,\n\t\thorizontal: false,\n\t\thandle: null,\n\t\tfilter: null,\n\t\tcheckboxMode: false,\n\t\tonSelectionChange: $.noop\n\t},\n\n\tclosestItemAxisProps: {\n\t\tx: {\n\t\t\tmidpointOffset:   'top',\n\t\t\tmidpointSizeFunc: 'outerHeight',\n\t\t\trowOffset:        'left'\n\t\t},\n\t\ty: {\n\t\t\tmidpointOffset:   'left',\n\t\t\tmidpointSizeFunc: 'outerWidth',\n\t\t\trowOffset:        'top'\n\t\t}\n\t},\n\n\tclosestItemDirectionProps: {\n\t\t'<': {\n\t\t\tstep: -1,\n\t\t\tisNextRow: function(a, b) { return (a < b); },\n\t\t\tisWrongDirection: function(a, b) { return (a > b); }\n\t\t},\n\t\t'>': {\n\t\t\tstep: 1,\n\t\t\tisNextRow: function(a, b) { return (a > b); },\n\t\t\tisWrongDirection: function(a, b) { return (a < b); }\n\t\t}\n\t}\n});\n","/**\n * Select Menu\n */\nGarnish.SelectMenu = Garnish.Menu.extend({\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(btn, options, settings, callback)\n\t{\n\t\t// argument mapping\n\t\tif (typeof settings == 'function')\n\t\t{\n\t\t\t// (btn, options, callback)\n\t\t\tcallback = settings;\n\t\t\tsettings = {};\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.SelectMenu.defaults, settings);\n\n\t\tthis.base(btn, options, settings, callback);\n\n\t\tthis.selected = -1;\n\t},\n\n\t/**\n\t * Build\n\t */\n\tbuild: function()\n\t{\n\t\tthis.base();\n\n\t\tif (this.selected != -1)\n\t\t{\n\t\t\tthis._addSelectedOptionClass(this.selected);\n\t\t}\n\t},\n\n\t/**\n\t * Select\n\t */\n\tselect: function(option)\n\t{\n\t\t// ignore if it's already selected\n\t\tif (option == this.selected) return;\n\n\t\tif (this.dom.ul)\n\t\t{\n\t\t\tif (this.selected != -1)\n\t\t\t{\n\t\t\t\tthis.dom.options[this.selected].className = '';\n\t\t\t}\n\n\t\t\tthis._addSelectedOptionClass(option);\n\t\t}\n\n\t\tthis.selected = option;\n\n\t\t// set the button text to the selected option\n\t\tthis.setBtnText($(this.options[option].label).text());\n\n\t\tthis.base(option);\n\t},\n\n\t/**\n\t * Add Selected Option Class\n\t */\n\t_addSelectedOptionClass: function(option)\n\t{\n\t\tthis.dom.options[option].className = 'sel';\n\t},\n\n\t/**\n\t * Set Button Text\n\t */\n\tsetBtnText: function(text)\n\t{\n\t\tthis.dom.$btnLabel.text(text);\n\t}\n\n},\n{\n\tdefaults: {\n\t\tulClass: 'menu select'\n\t}\n});\n","/**\n * Garnish UI toolkit\n *\n * @copyright 2013 Pixel & Tonic, Inc.. All rights reserved.\n * @author    Brandon Kelly <brandon@pixelandtonic.com>\n * @version   0.1\n * @license   THIS IS NO F.O.S.S!\n */\n(function($){\n\n/*!\r\n\tBase.js, version 1.1a\r\n\tCopyright 2006-2010, Dean Edwards\r\n\tLicense: http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\nvar Base = function() {\r\n\t// dummy\r\n};\r\n\r\nBase.extend = function(_instance, _static) { // subclass\r\n\tvar extend = Base.prototype.extend;\r\n\r\n\t// build the prototype\r\n\tBase._prototyping = true;\r\n\tvar proto = new this;\r\n\textend.call(proto, _instance);\r\n\tproto.base = function() {\r\n\t\t// call this method from any other method to invoke that method's ancestor\r\n\t};\r\n\tdelete Base._prototyping;\r\n\r\n\t// create the wrapper for the constructor function\r\n\t//var constructor = proto.constructor.valueOf(); //-dean\r\n\tvar constructor = proto.constructor;\r\n\tvar klass = proto.constructor = function() {\r\n\t\tif (!Base._prototyping) {\r\n\t\t\tif (this._constructing || this.constructor == klass) { // instantiation\r\n\t\t\t\tthis._constructing = true;\r\n\t\t\t\tconstructor.apply(this, arguments);\r\n\t\t\t\tdelete this._constructing;\r\n\t\t\t} else if (arguments[0] != null) { // casting\r\n\t\t\t\treturn (arguments[0].extend || extend).call(arguments[0], proto);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// build the class interface\r\n\tklass.ancestor = this;\r\n\tklass.extend = this.extend;\r\n\tklass.forEach = this.forEach;\r\n\tklass.implement = this.implement;\r\n\tklass.prototype = proto;\r\n\tklass.toString = this.toString;\r\n\tklass.valueOf = function(type) {\r\n\t\t//return (type == \"object\") ? klass : constructor; //-dean\r\n\t\treturn (type == \"object\") ? klass : constructor.valueOf();\r\n\t};\r\n\textend.call(klass, _static);\r\n\t// class initialisation\r\n\tif (typeof klass.init == \"function\") klass.init();\r\n\treturn klass;\r\n};\r\n\r\nBase.prototype = {\r\n\textend: function(source, value) {\r\n\t\tif (arguments.length > 1) { // extending with a name/value pair\r\n\t\t\tvar ancestor = this[source];\r\n\t\t\tif (ancestor && (typeof value == \"function\") && // overriding a method?\r\n\t\t\t\t// the valueOf() comparison is to avoid circular references\r\n\t\t\t\t(!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&\r\n\t\t\t\t/\\bbase\\b/.test(value)) {\r\n\t\t\t\t// get the underlying method\r\n\t\t\t\tvar method = value.valueOf();\r\n\t\t\t\t// override\r\n\t\t\t\tvalue = function() {\r\n\t\t\t\t\tvar previous = this.base || Base.prototype.base;\r\n\t\t\t\t\tthis.base = ancestor;\r\n\t\t\t\t\tvar returnValue = method.apply(this, arguments);\r\n\t\t\t\t\tthis.base = previous;\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t\t// point to the underlying method\r\n\t\t\t\tvalue.valueOf = function(type) {\r\n\t\t\t\t\treturn (type == \"object\") ? value : method;\r\n\t\t\t\t};\r\n\t\t\t\tvalue.toString = Base.toString;\r\n\t\t\t}\r\n\t\t\tthis[source] = value;\r\n\t\t} else if (source) { // extending with an object literal\r\n\t\t\tvar extend = Base.prototype.extend;\r\n\t\t\t// if this object has a customised extend method then use it\r\n\t\t\tif (!Base._prototyping && typeof this != \"function\") {\r\n\t\t\t\textend = this.extend || extend;\r\n\t\t\t}\r\n\t\t\tvar proto = {toSource: null};\r\n\t\t\t// do the \"toString\" and other methods manually\r\n\t\t\tvar hidden = [\"constructor\", \"toString\", \"valueOf\"];\r\n\t\t\t// if we are prototyping then include the constructor\r\n\t\t\tvar i = Base._prototyping ? 0 : 1;\r\n\t\t\twhile (key = hidden[i++]) {\r\n\t\t\t\tif (source[key] != proto[key]) {\r\n\t\t\t\t\textend.call(this, key, source[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// copy each of the source object's properties to this object\r\n\t\t\tfor (var key in source) {\r\n\t\t\t\tif (!proto[key]) {\r\n\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(source, key);\r\n\t\t\t\t\tif (typeof desc.value != typeof undefined) {\r\n\t\t\t\t\t\t// set the value normally in case it's a function that needs to be overwritten\r\n\t\t\t\t\t\textend.call(this, key, desc.value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// set it while maintaining the original descriptor settings\r\n\t\t\t\t\t\tObject.defineProperty(this, key, desc);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n// initialise\r\nBase = Base.extend({\r\n\tconstructor: function() {\r\n\t\tthis.extend(arguments[0]);\r\n\t}\r\n}, {\r\n\tancestor: Object,\r\n\tversion: \"1.1\",\r\n\r\n\tforEach: function(object, block, context) {\r\n\t\tfor (var key in object) {\r\n\t\t\tif (this.prototype[key] === undefined) {\r\n\t\t\t\tblock.call(context, object[key], key, object);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\timplement: function() {\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tif (typeof arguments[i] == \"function\") {\r\n\t\t\t\t// if it's a function, call it\r\n\t\t\t\targuments[i](this.prototype);\r\n\t\t\t} else {\r\n\t\t\t\t// add the interface using the extend method\r\n\t\t\t\tthis.prototype.extend(arguments[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoString: function() {\r\n\t\treturn String(this.valueOf());\r\n\t}\r\n});\r\n\n/*!\n * Garnish\n */\n\n// Bail if Garnish is already defined\nif (typeof Garnish != 'undefined')\n{\n\tthrow 'Garnish is already defined!';\n}\n\n\nGarnish = {\n\n\t// jQuery objects for common elements\n\t$win: $(window),\n\t$doc: $(document),\n\t$bod: $(document.body)\n\n};\n\nGarnish.rtl = Garnish.$bod.hasClass('rtl');\nGarnish.ltr = !Garnish.rtl;\n\nGarnish = $.extend(Garnish, {\n\n\t$scrollContainer: Garnish.$win,\n\n\t// Key code constants\n\tDELETE_KEY:  8,\n\tSHIFT_KEY:  16,\n\tCTRL_KEY:   17,\n\tALT_KEY:    18,\n\tRETURN_KEY: 13,\n\tESC_KEY:    27,\n\tSPACE_KEY:  32,\n\tLEFT_KEY:   37,\n\tUP_KEY:     38,\n\tRIGHT_KEY:  39,\n\tDOWN_KEY:   40,\n\tA_KEY:      65,\n\tS_KEY:      83,\n\tCMD_KEY:    91,\n\n\t// Mouse button constants\n\tPRIMARY_CLICK:   1,\n\tSECONDARY_CLICK: 3,\n\n\t// Axis constants\n\tX_AXIS: 'x',\n\tY_AXIS: 'y',\n\n\tFX_DURATION: 100,\n\n\t// Node types\n\tTEXT_NODE: 3,\n\n\t/**\n\t * Logs a message to the browser's console, if the browser has one.\n\t *\n\t * @param string msg\n\t */\n\tlog: function(msg)\n\t{\n\t\tif (typeof console != 'undefined' && typeof console.log == 'function')\n\t\t{\n\t\t\tconsole.log(msg);\n\t\t}\n\t},\n\n\t_isMobileBrowser: null,\n\t_isMobileOrTabletBrowser: null,\n\n\t/**\n\t * Returns whether this is a mobile browser.\n\t * Detection script courtesy of http://detectmobilebrowsers.com\n\t *\n\t * Last updated: 2014-11-24\n\t *\n\t * @param bool detectTablets\n\t * @return bool\n\t */\n\tisMobileBrowser: function(detectTablets)\n\t{\n\t\tvar key = detectTablets ? '_isMobileOrTabletBrowser' : '_isMobileBrowser';\n\n\t\tif (Garnish[key] === null)\n\t\t{\n\t\t\tvar a = navigator.userAgent || navigator.vendor || window.opera;\n\t\t\tGarnish[key] = ((new RegExp('(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino'+(detectTablets ? '|android|ipad|playbook|silk' : ''), 'i')).test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)));\n\t\t}\n\n\t\treturn Garnish[key];\n\t},\n\n\t/**\n\t * Returns whether a variable is an array.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisArray: function(val)\n\t{\n\t\treturn (val instanceof Array);\n\t},\n\n\t/**\n\t * Returns whether a variable is a jQuery collection.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisJquery: function(val)\n\t{\n\t\treturn (val instanceof jQuery);\n\t},\n\n\t/**\n\t * Returns whether a variable is a string.\n\t *\n\t * @param mixed val\n\t * @return bool\n\t */\n\tisString: function(val)\n\t{\n\t\treturn (typeof val == 'string');\n\t},\n\n\t/**\n\t * Returns whether an element has an attribute.\n\t *\n\t * @see http://stackoverflow.com/questions/1318076/jquery-hasattr-checking-to-see-if-there-is-an-attribute-on-an-element/1318091#1318091\n\t */\n\thasAttr: function(elem, attr)\n\t{\n\t\tvar val = $(elem).attr(attr);\n\t\treturn (typeof val != 'undefined' && val !== false);\n\t},\n\n\t/**\n\t * Returns whether something is a text node.\n\t *\n\t * @param object elem\n\t * @return bool\n\t */\n\tisTextNode: function(elem)\n\t{\n\t\treturn (elem.nodeType == Garnish.TEXT_NODE);\n\t},\n\n\t/**\n\t * Returns the offset of an element within the scroll container, whether that's the window or something else\n\t */\n\tgetOffset: function(elem)\n\t{\n\t\tthis.getOffset._offset = $(elem).offset();\n\n\t\tif (Garnish.$scrollContainer[0] != Garnish.$win[0])\n\t\t{\n\t\t\tthis.getOffset._offset.top += Garnish.$scrollContainer.scrollTop();\n\t\t\tthis.getOffset._offset.left += Garnish.$scrollContainer.scrollLeft();\n\t\t}\n\n\t\treturn this.getOffset._offset;\n\t},\n\n\t/**\n\t * Returns the distance between two coordinates.\n\t *\n\t * @param int x1 The first coordinate's X position.\n\t * @param int y1 The first coordinate's Y position.\n\t * @param int x2 The second coordinate's X position.\n\t * @param int y2 The second coordinate's Y position.\n\t * @return float\n\t */\n\tgetDist: function(x1, y1, x2, y2)\n\t{\n\t\treturn Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));\n\t},\n\n\t/**\n\t * Returns whether an element is touching an x/y coordinate.\n\t *\n\t * @param int    x    The coordinate's X position.\n\t * @param int    y    The coordinate's Y position.\n\t * @param object elem Either an actual element or a jQuery collection.\n\t * @return bool\n\t */\n\thitTest: function(x, y, elem)\n\t{\n\t\tGarnish.hitTest._$elem = $(elem);\n\t\tGarnish.hitTest._offset = Garnish.hitTest._$elem.offset();\n\t\tGarnish.hitTest._x1 = Garnish.hitTest._offset.left;\n\t\tGarnish.hitTest._y1 = Garnish.hitTest._offset.top;\n\t\tGarnish.hitTest._x2 = Garnish.hitTest._x1 + Garnish.hitTest._$elem.outerWidth();\n\t\tGarnish.hitTest._y2 = Garnish.hitTest._y1 + Garnish.hitTest._$elem.outerHeight();\n\n\t\treturn (x >= Garnish.hitTest._x1 && x < Garnish.hitTest._x2 && y >= Garnish.hitTest._y1 && y < Garnish.hitTest._y2);\n\t},\n\n\t/**\n\t * Returns whether the cursor is touching an element.\n\t *\n\t * @param object ev   The mouse event object containing pageX and pageY properties.\n\t * @param object elem Either an actual element or a jQuery collection.\n\t * @return bool\n\t */\n\tisCursorOver: function(ev, elem)\n\t{\n\t\treturn Garnish.hitTest(ev.pageX, ev.pageY, elem);\n\t},\n\n\t/**\n\t * Copies text styles from one element to another.\n\t *\n\t * @param object source The source element. Can be either an actual element or a jQuery collection.\n\t * @param object target The target element. Can be either an actual element or a jQuery collection.\n\t */\n\tcopyTextStyles: function(source, target)\n\t{\n\t\tvar $source = $(source),\n\t\t\t$target = $(target);\n\n\t\t$target.css({\n\t\t\tfontFamily:    $source.css('fontFamily'),\n\t\t\tfontSize:      $source.css('fontSize'),\n\t\t\tfontWeight:    $source.css('fontWeight'),\n\t\t\tletterSpacing: $source.css('letterSpacing'),\n\t\t\tlineHeight:    $source.css('lineHeight'),\n\t\t\ttextAlign:     $source.css('textAlign'),\n\t\t\ttextIndent:    $source.css('textIndent'),\n\t\t\twhiteSpace:    $source.css('whiteSpace'),\n\t\t\twordSpacing:   $source.css('wordSpacing'),\n\t\t\twordWrap:      $source.css('wordWrap')\n\t\t});\n\t},\n\n\t/**\n\t * Returns the body's real scrollTop, discarding any window banding in Safari.\n\t *\n\t * @return int\n\t */\n\tgetBodyScrollTop: function()\n\t{\n\t\tGarnish.getBodyScrollTop._scrollTop = document.body.scrollTop;\n\n\t\tif (Garnish.getBodyScrollTop._scrollTop < 0)\n\t\t{\n\t\t\tGarnish.getBodyScrollTop._scrollTop = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tGarnish.getBodyScrollTop._maxScrollTop = Garnish.$bod.outerHeight() - Garnish.$win.height();\n\n\t\t\tif (Garnish.getBodyScrollTop._scrollTop > Garnish.getBodyScrollTop._maxScrollTop)\n\t\t\t{\n\t\t\t\tGarnish.getBodyScrollTop._scrollTop = Garnish.getBodyScrollTop._maxScrollTop;\n\t\t\t}\n\t\t}\n\n\t\treturn Garnish.getBodyScrollTop._scrollTop;\n\t},\n\n\trequestAnimationFrame: (\n\t\tfunction()\n\t\t{\n\t\t\tvar raf = (\n\t\t\t\twindow.requestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\tfunction(fn){ return window.setTimeout(fn, 20); }\n\t\t\t);\n\n\t\t\treturn function(fn){ return raf(fn); };\n\t\t}\n\t)(),\n\n\tcancelAnimationFrame: (\n\t\tfunction()\n\t\t{\n\t\t\tvar cancel = (\n\t\t\t\twindow.cancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.clearTimeout\n\t\t\t);\n\n\t\t\treturn function(id){ return cancel(id); };\n\t\t}\n\t)(),\n\n\t/**\n\t * Scrolls a container element to an element within it.\n\t *\n\t * @param object container Either an actual element or a jQuery collection.\n\t * @param object elem      Either an actual element or a jQuery collection.\n\t */\n\tscrollContainerToElement: function(container, elem)\n\t{\n\t\tif (typeof elem === typeof undefined)\n\t\t{\n\t\t\tvar $elem = $(container);\n\t\t\t\t$container = $elem.scrollParent();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar $container = $(container),\n\t\t\t\t$elem = $(elem);\n\t\t}\n\n\t\tif ($container.prop('nodeName') === 'HTML' || $container[0] == Garnish.$doc[0])\n\t\t{\n\t\t\t$container = Garnish.$win;\n\t\t}\n\n\t\tvar scrollTop = $container.scrollTop(),\n\t\t\telemOffset = $elem.offset().top;\n\n\t\tif ($container[0] == window)\n\t\t{\n\t\t\tvar elemScrollOffset = elemOffset - scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar elemScrollOffset = elemOffset - $container.offset().top;\n\t\t}\n\n\t\tvar targetScrollTop = false;\n\n\t\t// Is the element above the fold?\n\t\tif (elemScrollOffset < 0)\n\t\t{\n\t\t\ttargetScrollTop = scrollTop + elemScrollOffset - 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar elemHeight = $elem.outerHeight(),\n\t\t\t\tcontainerHeight = ($container[0] == window ? window.innerHeight : $container[0].clientHeight);\n\n\t\t\t// Is it below the fold?\n\t\t\tif (elemScrollOffset + elemHeight > containerHeight)\n\t\t\t{\n\t\t\t\ttargetScrollTop = scrollTop + (elemScrollOffset - (containerHeight - elemHeight)) + 10;\n\t\t\t}\n\t\t}\n\n\t\tif (targetScrollTop !== false)\n\t\t{\n\t\t\t// Velocity only allows you to scroll to an arbitrary position if you're scrolling the main window\n\t\t\tif ($container[0] == window)\n\t\t\t{\n\t\t\t\t$('html').velocity('scroll', {\n\t\t\t\t\toffset: targetScrollTop+'px',\n\t\t\t\t\tmobileHA: false\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$container.scrollTop(targetScrollTop);\n\t\t\t}\n\t\t}\n\t},\n\n\tSHAKE_STEPS: 10,\n\tSHAKE_STEP_DURATION: 25,\n\n\t/**\n\t * Shakes an element.\n\t *\n\t * @param mixed  elem Either an actual element or a jQuery collection.\n\t * @param string prop The property that should be adjusted (default is 'margin-left').\n\t */\n\tshake: function(elem, prop)\n\t{\n\t\tvar $elem = $(elem);\n\n\t\tif (!prop)\n\t\t{\n\t\t\tprop = 'margin-left';\n\t\t}\n\n\t\tvar startingPoint = parseInt($elem.css(prop));\n\t\tif (isNaN(startingPoint))\n\t\t{\n\t\t\tstartingPoint = 0;\n\t\t}\n\n\t\tfor (var i = 0; i <= Garnish.SHAKE_STEPS; i++)\n\t\t{\n\t\t\t(function(i)\n\t\t\t{\n\t\t\t\tsetTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tGarnish.shake._properties = {};\n\t\t\t\t\tGarnish.shake._properties[prop] = startingPoint + (i % 2 ? -1 : 1) * (10-i);\n\t\t\t\t\t$elem.velocity(Garnish.shake._properties, Garnish.SHAKE_STEP_DURATION);\n\t\t\t\t}, (Garnish.SHAKE_STEP_DURATION * i));\n\t\t\t})(i);\n\t\t}\n\t},\n\n\t/**\n\t * Returns the first element in an array or jQuery collection.\n\t *\n\t * @param mixed elem\n\t * @return mixed\n\t */\n\tgetElement: function(elem)\n\t{\n\t\treturn $.makeArray(elem)[0];\n\t},\n\n\t/**\n\t * Returns the beginning of an input's name= attribute value with any [bracktes] stripped out.\n\t *\n\t * @param object elem\n\t * @return string|null\n\t */\n\tgetInputBasename: function(elem)\n\t{\n\t\tvar name = $(elem).attr('name');\n\n\t\tif (name)\n\t\t{\n\t\t\treturn name.replace(/\\[.*/, '');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Returns an input's value as it would be POSTed.\n\t * So unchecked checkboxes and radio buttons return null,\n\t * and multi-selects whose name don't end in \"[]\" only return the last selection\n\t *\n\t * @param jQuery $input\n\t * @return mixed\n\t */\n\tgetInputPostVal: function($input)\n\t{\n\t\tvar type = $input.attr('type'),\n\t\t\tval  = $input.val();\n\n\t\t// Is this an unchecked checkbox or radio button?\n\t\tif ((type == 'checkbox' || type == 'radio'))\n\t\t{\n\t\t\tif ($input.prop('checked'))\n\t\t\t{\n\t\t\t\treturn val;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any array values whose input name doesn't end in \"[]\"\n\t\t//  - e.g. a multi-select\n\t\telse if (Garnish.isArray(val) && $input.attr('name').substr(-2) != '[]')\n\t\t{\n\t\t\tif (val.length)\n\t\t\t{\n\t\t\t\treturn val[val.length-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// Just return the value\n\t\telse\n\t\t{\n\t\t\treturn val;\n\t\t}\n\t},\n\n\t/**\n\t * Returns the inputs within a container\n\t *\n\t * @param mixed container The container element. Can be either an actual element or a jQuery collection.\n\t * @return jQuery\n\t */\n\tfindInputs: function(container)\n\t{\n\t\treturn $(container).find('input,text,textarea,select,button');\n\t},\n\n\t/**\n\t * Returns the post data within a container.\n\t *\n\t * @param mixed container\n\t * @return array\n\t */\n\tgetPostData: function(container)\n\t{\n\t\tvar postData = {},\n\t\t\tarrayInputCounters = {},\n\t\t\t$inputs = Garnish.findInputs(container);\n\n\t\tfor (var i = 0; i < $inputs.length; i++)\n\t\t{\n\t\t\tvar $input = $inputs.eq(i);\n\n\t\t\tif ($input.prop('disabled'))\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar inputName = $input.attr('name');\n\t\t\tif (!inputName)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar inputVal = Garnish.getInputPostVal($input);\n\t\t\tif (inputVal === null)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar isArrayInput = (inputName.substr(-2) == '[]');\n\n\t\t\tif (isArrayInput)\n\t\t\t{\n\t\t\t\t// Get the cropped input name\n\t\t\t\tvar croppedName = inputName.substring(0, inputName.length-2);\n\n\t\t\t\t// Prep the input counter\n\t\t\t\tif (typeof arrayInputCounters[croppedName] == 'undefined')\n\t\t\t\t{\n\t\t\t\t\tarrayInputCounters[croppedName] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!Garnish.isArray(inputVal))\n\t\t\t{\n\t\t\t\tinputVal = [inputVal];\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < inputVal.length; j++)\n\t\t\t{\n\t\t\t\tif (isArrayInput)\n\t\t\t\t{\n\t\t\t\t\tvar inputName = croppedName+'['+arrayInputCounters[croppedName]+']';\n\t\t\t\t\tarrayInputCounters[croppedName]++;\n\t\t\t\t}\n\n\t\t\t\tpostData[inputName] = inputVal[j];\n\t\t\t}\n\t\t}\n\n\t\treturn postData;\n\t},\n\n\tcopyInputValues: function(source, target)\n\t{\n\t\tvar $sourceInputs = Garnish.findInputs(source),\n\t\t\t$targetInputs = Garnish.findInputs(target);\n\n\t\tfor (var i = 0; i < $sourceInputs.length; i++)\n\t\t{\n\t\t\tif (typeof $targetInputs[i] == typeof undefined)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$targetInputs.eq(i).val(\n\t\t\t\t$sourceInputs.eq(i).val()\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether the \"Ctrl\" key is pressed (or ⌘ if this is a Mac) for a given keyboard event\n\t *\n\t * @param ev The keyboard event\n\t *\n\t * @return boolean Whether the \"Ctrl\" key is pressed\n\t */\n\tisCtrlKeyPressed: function(ev)\n\t{\n\t\tif (window.navigator.platform.match(/Mac/))\n\t\t{\n\t\t\t// metaKey maps to ⌘ on Macs\n\t\t\treturn ev.metaKey;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Both altKey and ctrlKey == true on some Windows keyboards when the right-hand ALT key is pressed\n\t\t\t// so just be safe and make sure altKey == false\n\t\t\treturn (ev.ctrlKey && !ev.altKey);\n\t\t}\n\t}\n});\n\n\n/**\n * Garnish base class\n */\nGarnish.Base = Base.extend({\n\n\tsettings: null,\n\n\t_eventHandlers: null,\n\t_namespace: null,\n\t_$listeners: null,\n\t_disabled: false,\n\n\tconstructor: function()\n\t{\n\t\tthis._eventHandlers = [];\n\t\tthis._namespace = '.Garnish'+Math.floor(Math.random()*1000000000);\n\t\tthis._listeners = [];\n\t\tthis.init.apply(this, arguments);\n\t},\n\n\tinit: $.noop,\n\n\tsetSettings: function(settings, defaults)\n\t{\n\t\tvar baseSettings = (typeof this.settings == 'undefined' ? {} : this.settings);\n\t\tthis.settings = $.extend({}, baseSettings, defaults, settings);\n\t},\n\n\ton: function(events, data, handler)\n\t{\n\t\tif (typeof data == 'function')\n\t\t{\n\t\t\thandler = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\tvar events = this._normalizeEvents(events);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tvar ev = events[i];\n\n\t\t\tthis._eventHandlers.push({\n\t\t\t\ttype: ev[0],\n\t\t\t\tnamespace: ev[1],\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler\n\t\t\t});\n\t\t}\n\t},\n\n\toff: function(events, handler)\n\t{\n\t\tvar events = this._normalizeEvents(events);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tvar ev = events[i];\n\n\t\t\tfor (var j = this._eventHandlers.length - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tvar eventHandler = this._eventHandlers[j];\n\n\t\t\t\tif (eventHandler.type == ev[0] && (!ev[1] || eventHandler.namespace == ev[1]) && eventHandler.handler === handler)\n\t\t\t\t{\n\t\t\t\t\tthis._eventHandlers.splice(j, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttrigger: function(type, data)\n\t{\n\t\tvar ev = {\n\t\t\ttype: type,\n\t\t\ttarget: this\n\t\t};\n\n\t\tif (typeof params == 'undefined')\n\t\t{\n\t\t\tparams = [];\n\t\t}\n\n\t\tfor (var i = 0; i < this._eventHandlers.length; i++)\n\t\t{\n\t\t\tvar handler = this._eventHandlers[i];\n\n\t\t\tif (handler.type == type)\n\t\t\t{\n\t\t\t\tvar _ev = $.extend({ data: handler.data }, data, ev);\n\t\t\t\thandler.handler(_ev)\n\t\t\t}\n\t\t}\n\t},\n\n\t_normalizeEvents: function(events)\n\t{\n\t\tif (typeof events == 'string')\n\t\t{\n\t\t\tevents = events.split(' ');\n\t\t}\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tif (typeof events[i] == 'string')\n\t\t\t{\n\t\t\t\tevents[i] = events[i].split('.');\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t},\n\n\t_splitEvents: function(events)\n\t{\n\t\tif (typeof events == 'string')\n\t\t{\n\t\t\tevents = events.split(',');\n\n\t\t\tfor (var i = 0; i < events.length; i++)\n\t\t\t{\n\t\t\t\tevents[i] = $.trim(events[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t},\n\n\t_formatEvents: function(events)\n\t{\n\t\tvar events = this._splitEvents(events).slice(0);\n\n\t\tfor (var i = 0; i < events.length; i++)\n\t\t{\n\t\t\tevents[i] += this._namespace;\n\t\t}\n\n\t\treturn events.join(' ');\n\t},\n\n\taddListener: function(elem, events, data, func)\n\t{\n\t\tvar $elem = $(elem);\n\n\t\t// Ignore if there aren't any elements\n\t\tif (!$elem.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tevents = this._splitEvents(events);\n\n\t\t// Param mapping\n\t\tif (typeof func == typeof undefined && typeof data != 'object')\n\t\t{\n\t\t\t// (elem, events, func)\n\t\t\tfunc = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\tif (typeof func == 'function')\n\t\t{\n\t\t\tfunc = $.proxy(func, this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfunc = $.proxy(this, func);\n\t\t}\n\n\t\t$elem.on(this._formatEvents(events), data, $.proxy(function()\n\t\t{\n\t\t\tif (!this._disabled)\n\t\t\t{\n\t\t\t\tfunc.apply(this, arguments);\n\t\t\t}\n\t\t}, this));\n\n\t\t// Remember that we're listening to this element\n\t\tif ($.inArray(elem, this._listeners) == -1)\n\t\t{\n\t\t\tthis._listeners.push(elem);\n\t\t}\n\t},\n\n\tremoveListener: function(elem, events)\n\t{\n\t\t$(elem).off(this._formatEvents(events));\n\t},\n\n\tremoveAllListeners: function(elem)\n\t{\n\t\t$(elem).off(this._namespace);\n\t},\n\n\tdisable: function()\n\t{\n\t\tthis._disabled = true;\n\t},\n\n\tenable: function()\n\t{\n\t\tthis._disabled = false;\n\t},\n\n\tdestroy: function()\n\t{\n\t\tthis.trigger('destroy');\n\t\tthis.removeAllListeners(this._listeners);\n\t}\n});\n\n// Custom events\n// -----------------------------------------------------------------------------\n\nvar erd;\n\nfunction getErd()\n{\n\tif (typeof erd == typeof undefined)\n\t{\n\t\terd = elementResizeDetectorMaker();\n\t}\n\n\treturn erd;\n}\n\nfunction triggerResizeEvent(elem) {\n\t$(elem).trigger('resize');\n};\n\n// Work them into jQuery's event system\n$.extend(jQuery.event.special, {\n\tactivate: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\tvar activateNamespace = this._namespace+'-activate';\n\t\t\tvar $elem = $(this);\n\n\t\t\t$elem.on({\n\t\t\t\t'mousedown.garnish-activate': function(e) {\n\t\t\t\t\t// Prevent buttons from getting focus on click\n\t\t\t\t\te.preventDefault();\n\t\t\t\t},\n\t\t\t\t'click.garnish-activate': function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!$elem.hasClass('disabled'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$elem.trigger('activate');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'keydown.garnish-activate': function(e) {\n\t\t\t\t\t// Ignore if the event was bubbled up, or if it wasn't the space key\n\t\t\t\t\tif (this != $elem[0] || e.keyCode != Garnish.SPACE_KEY) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!$elem.hasClass('disabled'))\n\t\t\t\t\t{\n\t\t\t\t\t\t$elem.addClass('active');\n\n\t\t\t\t\t\tGarnish.$doc.on('keyup.garnish-activate', function(e) {\n\t\t\t\t\t\t\t$elem.removeClass('active');\n\n\t\t\t\t\t\t\tif (e.keyCode == Garnish.SPACE_KEY) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$elem.trigger('activate');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tGarnish.$doc.off('keyup.garnish-activate');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!$elem.hasClass('disabled')) {\n\t\t\t\t$elem.attr('tabindex', '0');\n\t\t\t} else {\n\t\t\t\t$elem.removeAttr('tabindex');\n\t\t\t}\n\t\t},\n\t\tteardown: function() {\n\t\t\t$(this).off('.garnish-activate');\n\t\t}\n\t},\n\n\ttextchange: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\tvar $elem = $(this);\n\t\t\t$elem.data('garnish-textchange-value', $elem.val());\n\t\t\t$elem.on('keypress.garnish-textchange keyup.garnish-textchange change.garnish-textchange blur.garnish-textchange', function(e) {\n\t\t\t\tvar val = $elem.val();\n\t\t\t\tif (val != $elem.data('garnish-textchange-value'))\n\t\t\t\t{\n\t\t\t\t\t$elem.data('garnish-textchange-value', val);\n\t\t\t\t\t$elem.trigger('textchange');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tteardown: function() {\n\t\t\t$(this).off('.garnish-textchange');\n\t\t},\n\t\thandle: function(ev, data) {\n\t\t\tvar el = this;\n\t\t\tvar args = arguments;\n\t\t\tvar delay = data && typeof data.delay != typeof undefined ? data.delay : (ev.data && typeof ev.data.delay != typeof undefined ? ev.data.delay : null);\n\t\t\tvar handleObj = ev.handleObj;\n\t\t\tvar targetData = $.data(ev.target);\n\n\t\t\t// Was this event configured with a delay?\n\t\t\tif (delay) {\n\t\t\t\tif (targetData.delayTimeout) {\n\t\t\t\t\tclearTimeout(targetData.delayTimeout);\n\t\t\t\t}\n\n\t\t\t\ttargetData.delayTimeout = setTimeout(function() {\n\t\t\t\t\thandleObj.handler.apply(el, args);\n\t\t\t\t}, delay);\n\t\t\t} else {\n\t\t\t\treturn handleObj.handler.apply(el, args);\n\t\t\t}\n\t\t}\n\t},\n\n\tresize: {\n\t\tsetup: function(data, namespaces, eventHandle) {\n\t\t\t// window is the only element that natively supports a resize event\n\t\t\tif (this == window) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$('> :last-child', this).addClass('last');\n\t\t\tgetErd().listenTo(this, triggerResizeEvent)\n\t\t},\n\t\tteardown: function() {\n\t\t\tif (this == window) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tgetErd().removeListener(this, triggerResizeEvent);\n\t\t}\n\t}\n});\n\n// Give them their own element collection chaining methods\njQuery.each(['activate','textchange','resize'], function(i, name) {\n\tjQuery.fn[name] = function(data, fn) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on(name, null, data, fn) :\n\t\t\tthis.trigger(name);\n\t};\n});\n\n/**\n * Base drag class\n *\n * Does all the grunt work for manipulating elements via click-and-drag,\n * while leaving the actual element manipulation up to a subclass.\n */\nGarnish.BaseDrag = Garnish.Base.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$items: null,\n\n\tdragging: false,\n\n\tmousedownX: null,\n\tmousedownY: null,\n\trealMouseX: null,\n\trealMouseY: null,\n\tmouseX: null,\n\tmouseY: null,\n\tmouseDistX: null,\n\tmouseDistY: null,\n\tmouseOffsetX: null,\n\tmouseOffsetY: null,\n\n\t$targetItem: null,\n\n\tscrollProperty: null,\n\tscrollAxis: null,\n\tscrollDist: null,\n\tscrollProxy: null,\n\tscrollFrame: null,\n\n\t_: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tthis.settings = $.extend({}, Garnish.BaseDrag.defaults, settings);\n\n\t\tthis.$items = $();\n\t\tthis._ = {};\n\n\t\tif (items)\n\t\t{\n\t\t\tthis.addItems(items);\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether dragging is allowed right now.\n\t */\n\tallowDragging: function()\n\t{\n\t\treturn true;\n\t},\n\n\t/**\n\t * Start Dragging\n\t */\n\tstartDragging: function()\n\t{\n\t\tthis.dragging = true;\n\t\tthis.onDragStart();\n\t},\n\n\t/**\n\t * Drag\n\t */\n\tdrag: function(didMouseMove)\n\t{\n\t\tif (didMouseMove)\n\t\t{\n\t\t\t// Is the mouse up against one of the window edges?\n\t\t\tthis.drag._scrollProperty = null;\n\n\t\t\tif (this.settings.axis != Garnish.X_AXIS)\n\t\t\t{\n\t\t\t\t// Scrolling up?\n\t\t\t\tthis.drag._winScrollTop = Garnish.$win.scrollTop();\n\t\t\t\tthis.drag._minMouseScrollY = this.drag._winScrollTop + Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\tif (this.mouseY < this.drag._minMouseScrollY)\n\t\t\t\t{\n\t\t\t\t\tthis.drag._scrollProperty = 'scrollTop';\n\t\t\t\t\tthis.drag._scrollAxis = 'Y';\n\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseY - this.drag._minMouseScrollY) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Scrolling down?\n\t\t\t\t\tthis.drag._maxMouseScrollY = this.drag._winScrollTop + Garnish.$win.height() - Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\t\tif (this.mouseY > this.drag._maxMouseScrollY)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drag._scrollProperty = 'scrollTop';\n\t\t\t\t\t\tthis.drag._scrollAxis = 'Y';\n\t\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseY - this.drag._maxMouseScrollY) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.drag._scrollProperty && this.settings.axis != Garnish.Y_AXIS)\n\t\t\t{\n\t\t\t\t// Scrolling left?\n\t\t\t\tthis.drag._winScrollLeft = Garnish.$win.scrollLeft();\n\t\t\t\tthis.drag._minMouseScrollX = this.drag._winScrollLeft + Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\tif (this.mouseX < this.drag._minMouseScrollX)\n\t\t\t\t{\n\t\t\t\t\tthis.drag._scrollProperty = 'scrollLeft';\n\t\t\t\t\tthis.drag._scrollAxis = 'X';\n\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseX - this.drag._minMouseScrollX) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Scrolling right?\n\t\t\t\t\tthis.drag._maxMouseScrollX = this.drag._winScrollLeft + Garnish.$win.width() - Garnish.BaseDrag.windowScrollTargetSize;\n\n\t\t\t\t\tif (this.mouseX > this.drag._maxMouseScrollX)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drag._scrollProperty = 'scrollLeft';\n\t\t\t\t\t\tthis.drag._scrollAxis = 'X';\n\t\t\t\t\t\tthis.drag._scrollDist = Math.round((this.mouseX - this.drag._maxMouseScrollX) / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.drag._scrollProperty)\n\t\t\t{\n\t\t\t\t// Are we starting to scroll now?\n\t\t\t\tif (!this.scrollProperty)\n\t\t\t\t{\n\t\t\t\t\tif (!this.scrollProxy)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.scrollProxy = $.proxy(this, '_scrollWindow');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.scrollFrame)\n\t\t\t\t\t{\n\t\t\t\t\t\tGarnish.cancelAnimationFrame(this.scrollFrame);\n\t\t\t\t\t\tthis.scrollFrame = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scrollFrame = Garnish.requestAnimationFrame(this.scrollProxy);\n\t\t\t\t}\n\n\t\t\t\tthis.scrollProperty = this.drag._scrollProperty;\n\t\t\t\tthis.scrollAxis = this.drag._scrollAxis;\n\t\t\t\tthis.scrollDist = this.drag._scrollDist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._cancelWindowScroll();\n\t\t\t}\n\t\t}\n\n\t\tthis.onDrag();\n\t},\n\n\t/**\n\t * Stop Dragging\n\t */\n\tstopDragging: function()\n\t{\n\t\tthis.dragging = false;\n\t\tthis.onDragStop();\n\n\t\t// Clear the scroll animation\n\t\tthis._cancelWindowScroll();\n\t},\n\n\t/**\n\t * Add Items\n\t *\n\t * @param mixed items Elements that should be draggable.\n\t */\n\taddItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure this element doesn't belong to another dragger\n\t\t\tif ($.data(item, 'drag'))\n\t\t\t{\n\t\t\t\tGarnish.log('Element was added to more than one dragger');\n\t\t\t\t$.data(item, 'drag').removeItems(item);\n\t\t\t}\n\n\t\t\t// Add the item\n\t\t\t$.data(item, 'drag', this);\n\n\t\t\t// Add the listener\n\t\t\tthis.addListener(item, 'mousedown', '_handleMouseDown');\n\t\t}\n\n\t\tthis.$items = this.$items.add(items);\n\t},\n\n\t/**\n\t * Remove Items\n\t *\n\t * @param mixed items Elements that should no longer be draggable.\n\t */\n\tremoveItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure we actually know about this item\n\t\t\tvar index = $.inArray(item, this.$items);\n\t\t\tif (index != -1)\n\t\t\t{\n\t\t\t\tthis._deinitItem(item);\n\t\t\t\tthis.$items.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Remove All Items\n\t */\n\tremoveAllItems: function()\n\t{\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tthis._deinitItem(this.$items[i]);\n\t\t}\n\n\t\tthis.$items = $();\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.removeAllItems();\n\t\tthis.base();\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('dragStart');\n\t\t\tthis.settings.onDragStart();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('drag');\n\t\t\tthis.settings.onDrag();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('dragStop');\n\t\t\tthis.settings.onDragStop();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t/**\n\t * Handle Mouse Down\n\t */\n\t_handleMouseDown: function(ev)\n\t{\n\t\t// Ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if we already have a target\n\t\tif (this.$targetItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if they didn't actually click on the handle\n\t\tvar $target = $(ev.target),\n\t\t\t$handle = this._getItemHandle(ev.currentTarget);\n\n\t\tif (!$target.is($handle) && !$target.closest($handle).length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the target isn't a button (unless the button is the handle)\n\t\tif (ev.currentTarget != ev.target && this.settings.ignoreHandleSelector)\n\t\t{\n\t\t\tif (\n\t\t\t\t$target.is(this.settings.ignoreHandleSelector) ||\n\t\t\t\t$target.closest(this.settings.ignoreHandleSelector).length\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tev.preventDefault();\n\n\t\t// Make sure that dragging is allowed right now\n\t\tif (!this.allowDragging())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Capture the target\n\t\tthis.$targetItem = $(ev.currentTarget);\n\n\t\t// Capture the current mouse position\n\t\tthis.mousedownX = this.mouseX = ev.pageX;\n\t\tthis.mousedownY = this.mouseY = ev.pageY;\n\n\t\t// Capture the difference between the mouse position and the target item's offset\n\t\tvar offset = this.$targetItem.offset();\n\t\tthis.mouseOffsetX = ev.pageX - offset.left;\n\t\tthis.mouseOffsetY = ev.pageY - offset.top;\n\n\t\t// Listen for mousemove, mouseup\n\t\tthis.addListener(Garnish.$doc, 'mousemove', '_handleMouseMove');\n\t\tthis.addListener(Garnish.$doc, 'mouseup', '_handleMouseUp');\n\t},\n\n\t_getItemHandle: function(item)\n\t{\n\t\tif (this.settings.handle)\n\t\t{\n\t\t\tif (typeof this.settings.handle == 'object')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle);\n\t\t\t}\n\n\t\t\tif (typeof this.settings.handle == 'string')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle, item);\n\t\t\t}\n\n\t\t\tif (typeof this.settings.handle == 'function')\n\t\t\t{\n\t\t\t\treturn $(this.settings.handle(item));\n\t\t\t}\n\t\t}\n\n\t\treturn $(item);\n\t},\n\n\t/**\n\t * Handle Mouse Move\n\t */\n\t_handleMouseMove: function(ev)\n\t{\n\t\tev.preventDefault();\n\n\t\tthis.realMouseX = ev.pageX;\n\t\tthis.realMouseY = ev.pageY;\n\n\t\tif (this.settings.axis != Garnish.Y_AXIS)\n\t\t{\n\t\t\tthis.mouseX = ev.pageX;\n\t\t}\n\n\t\tif (this.settings.axis != Garnish.X_AXIS)\n\t\t{\n\t\t\tthis.mouseY = ev.pageY;\n\t\t}\n\n\t\tthis.mouseDistX = this.mouseX - this.mousedownX;\n\t\tthis.mouseDistY = this.mouseY - this.mousedownY;\n\n\t\tif (!this.dragging)\n\t\t{\n\t\t\t// Has the mouse moved far enough to initiate dragging yet?\n\t\t\tthis._handleMouseMove._mouseDist = Garnish.getDist(this.mousedownX, this.mousedownY, this.realMouseX, this.realMouseY);\n\n\t\t\tif (this._handleMouseMove._mouseDist >= Garnish.BaseDrag.minMouseDist)\n\t\t\t{\n\t\t\t\tthis.startDragging();\n\t\t\t}\n\t\t}\n\n\t\tif (this.dragging)\n\t\t{\n\t\t\tthis.drag(true);\n\t\t}\n\t},\n\n\t/**\n\t * Handle Moues Up\n\t */\n\t_handleMouseUp: function(ev)\n\t{\n\t\t// Unbind the document events\n\t\tthis.removeAllListeners(Garnish.$doc);\n\n\t\tif (this.dragging)\n\t\t{\n\t\t\tthis.stopDragging();\n\t\t}\n\n\t\tthis.$targetItem = null;\n\t},\n\n\t/**\n\t * Scroll Window\n\t */\n\t_scrollWindow: function()\n\t{\n\t\tthis._.scrollPos = Garnish.$scrollContainer[this.scrollProperty]();\n\t\tGarnish.$scrollContainer[this.scrollProperty](this._.scrollPos + this.scrollDist);\n\n\t\tthis['mouse'+this.scrollAxis] -= this._.scrollPos - Garnish.$scrollContainer[this.scrollProperty]();\n\t\tthis['realMouse'+this.scrollAxis] = this['mouse'+this.scrollAxis];\n\n\t\tthis.drag();\n\n\t\tthis.scrollFrame = Garnish.requestAnimationFrame(this.scrollProxy);\n\t},\n\n\t/**\n\t * Cancel Window Scroll\n\t */\n\t_cancelWindowScroll: function()\n\t{\n\t\tif (this.scrollFrame)\n\t\t{\n\t\t\tGarnish.cancelAnimationFrame(this.scrollFrame);\n\t\t\tthis.scrollFrame = null;\n\t\t}\n\n\t\tthis.scrollProperty = null;\n\t\tthis.scrollAxis = null;\n\t\tthis.scrollDist = null;\n\t},\n\n\t/**\n\t * Deinitialize an item.\n\t */\n\t_deinitItem: function(item)\n\t{\n\t\tthis.removeAllListeners(item);\n\t\t$.removeData(item, 'drag');\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tminMouseDist: 1,\n\twindowScrollTargetSize: 25,\n\n\tdefaults: {\n\t\thandle: null,\n\t\taxis: null,\n\t\tignoreHandleSelector: 'input, textarea, button, select, .btn',\n\n\t\tonDragStart: $.noop,\n\t\tonDrag:      $.noop,\n\t\tonDragStop:  $.noop\n\t}\n});\n\n\n/**\n * Checkbox select class\n */\nGarnish.CheckboxSelect = Garnish.Base.extend({\n\n\t$container: null,\n\t$all: null,\n\t$options: null,\n\n\tinit: function(container)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Is this already a checkbox select?\n\t\tif (this.$container.data('checkboxSelect'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a checkbox select on an element');\n\t\t\tthis.$container.data('checkbox-select').destroy();\n\t\t}\n\n\t\tthis.$container.data('checkboxSelect', this);\n\n\t\tvar $checkboxes = this.$container.find('input');\n\t\tthis.$all = $checkboxes.filter('.all:first');\n\t\tthis.$options = $checkboxes.not(this.$all);\n\n\t\tthis.addListener(this.$all, 'change', 'onAllChange');\n\t},\n\n\tonAllChange: function()\n\t{\n\t\tvar isAllChecked = this.$all.prop('checked');\n\n\t\tthis.$options.prop({\n\t\t\tchecked:  isAllChecked,\n\t\t\tdisabled: isAllChecked\n\t\t});\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$container.removeData('checkboxSelect');\n\t\tthis.base();\n\t}\n});\n\n/**\n * Context Menu\n */\nGarnish.ContextMenu = Garnish.Base.extend({\n\n\t$target: null,\n\toptions: null,\n\t$menu: null,\n\tshowingMenu: false,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(target, options, settings)\n\t{\n\t\tthis.$target = $(target);\n\n\t\t// Is this already a context menu target?\n\t\tif (this.$target.data('contextmenu'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a context menu on an element');\n\t\t\tthis.$target.data('contextmenu').destroy();\n\t\t}\n\n\t\tthis.$target.data('contextmenu', this);\n\n\t\tthis.options = options;\n\t\tthis.setSettings(settings, Garnish.ContextMenu.defaults);\n\n\t\tGarnish.ContextMenu.counter++;\n\n\t\tthis.enable();\n\t},\n\n\t/**\n\t * Build Menu\n\t */\n\tbuildMenu: function()\n\t{\n\t\tthis.$menu = $('<div class=\"'+this.settings.menuClass+'\" style=\"display: none\" />');\n\n\t\tvar $ul = $('<ul/>').appendTo(this.$menu);\n\n\t\tfor (var i in this.options)\n\t\t{\n\t\t\tvar option = this.options[i];\n\n\t\t\tif (option == '-')\n\t\t\t{\n\t\t\t\t// Create a new <ul>\n\t\t\t\t$('<hr/>').appendTo(this.$menu);\n\t\t\t\t$ul = $('<ul/>').appendTo(this.$menu);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar $li = $('<li></li>').appendTo($ul),\n\t\t\t\t\t$a = $('<a>'+option.label+'</a>').appendTo($li);\n\n\t\t\t\tif (typeof option.onClick == 'function')\n\t\t\t\t{\n\t\t\t\t\t// maintain the current $a and options.onClick variables\n\t\t\t\t\t(function($a, onClick)\n\t\t\t\t\t{\n\t\t\t\t\t\tsetTimeout($.proxy(function(){\n\t\t\t\t\t\t\t$a.mousedown($.proxy(function(ev)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t\t\t\t// call the onClick callback, with the scope set to the item,\n\t\t\t\t\t\t\t\t// and pass it the event with currentTarget set to the item as well\n\t\t\t\t\t\t\t\tonClick.call(this.currentTarget, $.extend(ev, { currentTarget: this.currentTarget }));\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t}, this), 1);\n\t\t\t\t\t}).call(this, $a, option.onClick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Show Menu\n\t */\n\tshowMenu: function(ev)\n\t{\n\t\t// Ignore left mouse clicks\n\t\tif (ev.type == 'mousedown' && ev.which != Garnish.SECONDARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (ev.type == 'contextmenu')\n\t\t{\n\t\t\t// Prevent the real context menu from showing\n\t\t\tev.preventDefault();\n\t\t}\n\n\t\t// Ignore if already showing\n\t\tif (this.showing && ev.currentTarget == this.currentTarget)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentTarget = ev.currentTarget;\n\n\t\tif (!this.$menu)\n\t\t{\n\t\t\tthis.buildMenu();\n\t\t}\n\n\t\tthis.$menu.appendTo(document.body);\n\t\tthis.$menu.show();\n\t\tthis.$menu.css({ left: ev.pageX+1, top: ev.pageY-4 });\n\n\t\tthis.showing = true;\n\n\t\tsetTimeout($.proxy(function()\n\t\t{\n\t\t\tthis.addListener(Garnish.$doc, 'mousedown', 'hideMenu');\n\t\t}, this), 0);\n\t},\n\n\t/**\n\t * Hide Menu\n\t */\n\thideMenu: function()\n\t{\n\t\tthis.removeListener(Garnish.$doc, 'mousedown');\n\t\tthis.$menu.hide();\n\t\tthis.showing = false;\n\t},\n\n\t/**\n\t * Enable\n\t */\n\tenable: function()\n\t{\n\t\tthis.addListener(this.$target, 'contextmenu,mousedown', 'showMenu');\n\t},\n\n\t/**\n\t * Disable\n\t */\n\tdisable: function()\n\t{\n\t\tthis.removeListener(this.$target, 'contextmenu,mousedown');\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$target.removeData('contextmenu');\n\t\tthis.base();\n\t}\n},\n{\n\tdefaults: {\n\t\tmenuClass: 'menu'\n\t},\n\tcounter: 0\n});\n\n/**\n * Drag class\n *\n * Builds on the BaseDrag class by \"picking up\" the selceted element(s),\n * without worrying about what to do when an element is being dragged.\n */\nGarnish.Drag = Garnish.BaseDrag.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\ttargetItemWidth: null,\n\ttargetItemHeight: null,\n\ttargetItemPositionInDraggee: null,\n\n\t$draggee: null,\n\n\totherItems: null,\n\ttotalOtherItems: null,\n\n\thelpers: null,\n\thelperTargets: null,\n\thelperPositions: null,\n\thelperLagIncrement: null,\n\tupdateHelperPosProxy: null,\n\tupdateHelperPosFrame: null,\n\n\tlastMouseX: null,\n\tlastMouseY: null,\n\n\t_returningHelpersToDraggees: false,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.Drag.defaults, settings);\n\t\tthis.base(items, settings);\n\t},\n\n\t/**\n\t * Returns whether dragging is allowed right now.\n\t */\n\tallowDragging: function()\n\t{\n\t\t// Don't allow dragging if we're in the middle of animating the helpers back to the draggees\n\t\treturn !this._returningHelpersToDraggees;\n\t},\n\n\t/**\n\t * Start Dragging\n\t */\n\tstartDragging: function()\n\t{\n\t\t// Reset some things\n\t\tthis.helpers = [];\n\t\tthis.helperTargets = [];\n\t\tthis.helperPositions = [];\n\t\tthis.lastMouseX = this.lastMouseY = null;\n\n\t\t// Capture the target item's width/height\n\t\tthis.targetItemWidth  = this.$targetItem.outerWidth();\n\t\tthis.targetItemHeight = this.$targetItem.outerHeight();\n\n\t\t// Save the draggee's display style (block/table-row) so we can re-apply it later\n\t\tthis.draggeeDisplay = this.$targetItem.css('display');\n\n\t\t// Set the $draggee\n\t\tthis.setDraggee(this.findDraggee());\n\n\t\t// Create an array of all the other items\n\t\tthis.otherItems = [];\n\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tvar item = this.$items[i];\n\n\t\t\tif ($.inArray(item, this.$draggee) == -1)\n\t\t\t{\n\t\t\t\tthis.otherItems.push(item);\n\t\t\t}\n\t\t};\n\n\t\tthis.totalOtherItems = this.otherItems.length;\n\n\t\t// Keep the helpers following the cursor, with a little lag to smooth it out\n\t\tif (!this.updateHelperPosProxy)\n\t\t{\n\t\t\tthis.updateHelperPosProxy = $.proxy(this, '_updateHelperPos');\n\t\t}\n\n\t\tthis.helperLagIncrement = this.helpers.length == 1 ? 0 : this.settings.helperLagIncrementDividend / (this.helpers.length-1);\n\t\tthis.updateHelperPosFrame = Garnish.requestAnimationFrame(this.updateHelperPosProxy);\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Sets the draggee.\n\t */\n\tsetDraggee: function($draggee)\n\t{\n\t\t// Record the target item's position in the draggee\n\t\tthis.targetItemPositionInDraggee = $.inArray(this.$targetItem[0], $draggee.add(this.$targetItem[0]));\n\n\t\t// Keep the target item at the front of the list\n\t\tthis.$draggee = $([ this.$targetItem[0] ].concat($draggee.not(this.$targetItem).toArray()));\n\n\t\t// Create the helper(s)\n\t\tif (this.settings.singleHelper)\n\t\t{\n\t\t\tthis._createHelper(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i = 0; i < this.$draggee.length; i++)\n\t\t\t{\n\t\t\t\tthis._createHelper(i);\n\t\t\t}\n\t\t}\n\n\t\tif (this.settings.removeDraggee)\n\t\t{\n\t\t\tthis.$draggee.hide();\n\t\t}\n\t\telse if (this.settings.collapseDraggees)\n\t\t{\n\t\t\tthis.$targetItem.css('visibility', 'hidden');\n\t\t\tthis.$draggee.not(this.$targetItem).hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$draggee.css('visibility', 'hidden');\n\t\t}\n\t},\n\n\t/**\n\t * Appends additional items to the draggee.\n\t */\n\tappendDraggee: function($newDraggee)\n\t{\n\t\tif (!$newDraggee.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.settings.collapseDraggees)\n\t\t{\n\t\t\tvar oldLength = this.$draggee.length;\n\t\t}\n\n\t\tthis.$draggee = $(this.$draggee.toArray().concat($newDraggee.toArray()));\n\n\t\t// Create new helpers?\n\t\tif (!this.settings.collapseDraggees)\n\t\t{\n\t\t\tvar newLength = this.$draggee.length;\n\n\t\t\tfor (var i = oldLength; i < newLength; i++)\n\t\t\t{\n\t\t\t\tthis._createHelper(i);\n\t\t\t}\n\t\t}\n\n\t\tif (this.settings.removeDraggee || this.settings.collapseDraggees)\n\t\t{\n\t\t\t$newDraggee.hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$newDraggee.css('visibility', 'hidden');\n\t\t}\n\t},\n\n\t/**\n\t * Drag\n\t */\n\tdrag: function(didMouseMove)\n\t{\n\t\t// Update the draggee's virtual midpoint\n\t\tthis.draggeeVirtualMidpointX = this.mouseX - this.mouseOffsetX + (this.targetItemWidth / 2);\n\t\tthis.draggeeVirtualMidpointY = this.mouseY - this.mouseOffsetY + (this.targetItemHeight / 2);\n\n\t\tthis.base(didMouseMove);\n\t},\n\n\t/**\n\t * Stop Dragging\n\t */\n\tstopDragging: function()\n\t{\n\t\t// Clear the helper animation\n\t\tGarnish.cancelAnimationFrame(this.updateHelperPosFrame);\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Identifies the item(s) that are being dragged.\n\t */\n\tfindDraggee: function()\n\t{\n\t\tswitch (typeof this.settings.filter)\n\t\t{\n\t\t\tcase 'function':\n\t\t\t{\n\t\t\t\treturn this.settings.filter();\n\t\t\t}\n\n\t\t\tcase 'string':\n\t\t\t{\n\t\t\t\treturn this.$items.filter(this.settings.filter);\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\treturn this.$targetItem;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target X position\n\t */\n\tgetHelperTargetX: function()\n\t{\n\t\treturn this.mouseX - this.mouseOffsetX;\n\t},\n\n\t/**\n\t * Returns the helper’s target Y position\n\t */\n\tgetHelperTargetY: function()\n\t{\n\t\treturn this.mouseY - this.mouseOffsetY;\n\t},\n\n\t/**\n\t * Return Helpers to Draggees\n\t */\n\treturnHelpersToDraggees: function()\n\t{\n\t\tthis._returningHelpersToDraggees = true;\n\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\tvar $draggee = this.$draggee.eq(i),\n\t\t\t\t$helper = this.helpers[i];\n\n\t\t\t$draggee.css({\n\t\t\t\tdisplay:    this.draggeeDisplay,\n\t\t\t\tvisibility: 'hidden'\n\t\t\t});\n\n\t\t\tvar draggeeOffset = $draggee.offset();\n\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tvar callback = $.proxy(this, '_showDraggee');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar callback = null;\n\t\t\t}\n\n\t\t\t$helper.velocity({left: draggeeOffset.left, top: draggeeOffset.top}, Garnish.FX_DURATION, callback);\n\t\t}\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\tonReturnHelpersToDraggees: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('returnHelpersToDraggees');\n\t\t\tthis.settings.onReturnHelpersToDraggees();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t/**\n\t * Creates a helper.\n\t */\n\t_createHelper: function(i)\n\t{\n\t\tvar $draggee = this.$draggee.eq(i),\n\t\t\t$draggeeHelper = $draggee.clone().addClass('draghelper');\n\n\t\tif (this.settings.copyDraggeeInputValuesToHelper)\n\t\t{\n\t\t\tGarnish.copyInputValues($draggee, $draggeeHelper);\n\t\t}\n\n\t\t// Remove any name= attributes so radio buttons don't lose their values\n\t\t$draggeeHelper.find('[name]').attr('name', '');\n\n\t\t$draggeeHelper.css({\n\t\t\twidth: $draggee.width() + 1, // Prevent the brower from wrapping text if the width was actually a fraction of a pixel larger\n\t\t\theight: $draggee.height(),\n\t\t\tmargin: 0\n\t\t});\n\n\t\tif (this.settings.helper)\n\t\t{\n\t\t\tif (typeof this.settings.helper == 'function')\n\t\t\t{\n\t\t\t\t$draggeeHelper = this.settings.helper($draggeeHelper);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$draggeeHelper = $(this.settings.helper).append($draggeeHelper);\n\t\t\t}\n\t\t}\n\n\t\t$draggeeHelper.appendTo(Garnish.$bod);\n\n\t\tvar helperPos = this._getHelperTarget(i);\n\n\t\t$draggeeHelper.css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: helperPos.top,\n\t\t\tleft: helperPos.left,\n\t\t\tzIndex: this.settings.helperBaseZindex + this.$draggee.length - i,\n\t\t\topacity: this.settings.helperOpacity\n\t\t});\n\n\t\tthis.helperPositions[i] = {\n\t\t\ttop:  helperPos.top,\n\t\t\tleft: helperPos.left\n\t\t};\n\n\t\tthis.helpers.push($draggeeHelper);\n\t},\n\n\t/**\n\t * Update Helper Position\n\t */\n\t_updateHelperPos: function()\n\t{\n\t\t// Has the mouse moved?\n\t\tif (this.mouseX !== this.lastMouseX || this.mouseY !== this.lastMouseY)\n\t\t{\n\t\t\t// Get the new target helper positions\n\t\t\tfor (this._updateHelperPos._i = 0; this._updateHelperPos._i < this.helpers.length; this._updateHelperPos._i++)\n\t\t\t{\n\t\t\t\tthis.helperTargets[this._updateHelperPos._i] = this._getHelperTarget(this._updateHelperPos._i);\n\t\t\t}\n\n\t\t\tthis.lastMouseX = this.mouseX;\n\t\t\tthis.lastMouseY = this.mouseY;\n\t\t}\n\n\t\t// Gravitate helpers toward their target positions\n\t\tfor (this._updateHelperPos._j = 0; this._updateHelperPos._j < this.helpers.length; this._updateHelperPos._j++)\n\t\t{\n\t\t\tthis._updateHelperPos._lag = this.settings.helperLagBase + (this.helperLagIncrement * this._updateHelperPos._j);\n\n\t\t\tthis.helperPositions[this._updateHelperPos._j] = {\n\t\t\t\tleft: this.helperPositions[this._updateHelperPos._j].left + ((this.helperTargets[this._updateHelperPos._j].left - this.helperPositions[this._updateHelperPos._j].left) / this._updateHelperPos._lag),\n\t\t\t\ttop:  this.helperPositions[this._updateHelperPos._j].top  + ((this.helperTargets[this._updateHelperPos._j].top  - this.helperPositions[this._updateHelperPos._j].top) / this._updateHelperPos._lag)\n\t\t\t};\n\n\t\t\tthis.helpers[this._updateHelperPos._j].css(this.helperPositions[this._updateHelperPos._j]);\n\t\t}\n\n\t\t// Let's do this again on the next frame!\n\t\tthis.updateHelperPosFrame = Garnish.requestAnimationFrame(this.updateHelperPosProxy);\n\t},\n\n\t/**\n\t * Get the helper position for a draggee helper\n\t */\n\t_getHelperTarget: function(i)\n\t{\n\t\treturn {\n\t\t\tleft: this.getHelperTargetX() + (this.settings.helperSpacingX * i),\n\t\t\ttop:  this.getHelperTargetY() + (this.settings.helperSpacingY * i)\n\t\t};\n\t},\n\n\t_showDraggee: function()\n\t{\n\t\t// Remove the helpers\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\tthis.helpers[i].remove();\n\t\t}\n\n\t\tthis.helpers = null;\n\n\t\tthis.$draggee.show().css('visibility', 'inherit');\n\n\t\tthis.onReturnHelpersToDraggees();\n\n\t\tthis._returningHelpersToDraggees = false;\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tfilter: null,\n\t\tsingleHelper: false,\n\t\tcollapseDraggees: false,\n\t\tremoveDraggee: false,\n\t\tcopyDraggeeInputValuesToHelper: false,\n\t\thelperOpacity: 1,\n\t\thelper: null,\n\t\thelperBaseZindex: 1000,\n\t\thelperLagBase: 1,\n\t\thelperLagIncrementDividend: 1.5,\n\t\thelperSpacingX: 5,\n\t\thelperSpacingY: 5,\n\t\tonReturnHelpersToDraggees: $.noop\n\t}\n});\n\n/**\n * Drag-and-drop class\n *\n * Builds on the Drag class by allowing you to set up \"drop targets\"\n * which the dragged elemements can be dropped onto.\n */\nGarnish.DragDrop = Garnish.Drag.extend({\n\n\t$dropTargets: null,\n\t$activeDropTarget: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(settings)\n\t{\n\t\tsettings = $.extend({}, Garnish.DragDrop.defaults, settings);\n\t\tthis.base(settings);\n\t},\n\n\tupdateDropTargets: function()\n\t{\n\t\tif (this.settings.dropTargets)\n\t\t{\n\t\t\tif (typeof this.settings.dropTargets == 'function')\n\t\t\t{\n\t\t\t\tthis.$dropTargets = $(this.settings.dropTargets());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.$dropTargets = $(this.settings.dropTargets);\n\t\t\t}\n\n\t\t\t// Discard if it's an empty array\n\t\t\tif (!this.$dropTargets.length)\n\t\t\t{\n\t\t\t\tthis.$dropTargets = null;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tthis.updateDropTargets();\n\t\tthis.$activeDropTarget = null;\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\tif (this.$dropTargets)\n\t\t{\n\t\t\tthis.onDrag._activeDropTarget = null;\n\n\t\t\t// is the cursor over any of the drop target?\n\t\t\tfor (this.onDrag._i = 0; this.onDrag._i < this.$dropTargets.length; this.onDrag._i++)\n\t\t\t{\n\t\t\t\tthis.onDrag._elem = this.$dropTargets[this.onDrag._i];\n\n\t\t\t\tif (Garnish.hitTest(this.mouseX, this.mouseY, this.onDrag._elem))\n\t\t\t\t{\n\t\t\t\t\tthis.onDrag._activeDropTarget = this.onDrag._elem;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// has the drop target changed?\n\t\t\tif (\n\t\t\t\t(this.$activeDropTarget && this.onDrag._activeDropTarget != this.$activeDropTarget[0]) ||\n\t\t\t\t(!this.$activeDropTarget && this.onDrag._activeDropTarget !== null)\n\t\t\t)\n\t\t\t{\n\t\t\t\t// was there a previous one?\n\t\t\t\tif (this.$activeDropTarget)\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget.removeClass(this.settings.activeDropTargetClass);\n\t\t\t\t}\n\n\t\t\t\t// remember the new one\n\t\t\t\tif (this.onDrag._activeDropTarget)\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget = $(this.onDrag._activeDropTarget).addClass(this.settings.activeDropTargetClass);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.$activeDropTarget = null;\n\t\t\t\t}\n\n\t\t\t\tthis.settings.onDropTargetChange(this.$activeDropTarget);\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tif (this.$dropTargets && this.$activeDropTarget)\n\t\t{\n\t\t\tthis.$activeDropTarget.removeClass(this.settings.activeDropTargetClass);\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * Fade Out Helpers\n\t */\n\tfadeOutHelpers: function()\n\t{\n\t\tfor (var i = 0; i < this.helpers.length; i++)\n\t\t{\n\t\t\t(function($draggeeHelper)\n\t\t\t{\n\t\t\t\t$draggeeHelper.velocity('fadeOut', {\n\t\t\t\t\tduration: Garnish.FX_DURATION,\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\t$draggeeHelper.remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})(this.helpers[i]);\n\t\t}\n\t}\n},\n{\n\tdefaults: {\n\t\tdropTargets: null,\n\t\tonDropTargetChange: $.noop,\n\t\tactiveDropTargetClass: 'active'\n\t}\n});\n\n/**\n * Drag-to-move clas\n *\n * Builds on the BaseDrag class by simply moving the dragged element(s) along with the mouse.\n */\nGarnish.DragMove = Garnish.BaseDrag.extend({\n\n\tonDrag: function(items, settings)\n\t{\n\t\tthis.$targetItem.css({\n\t\t\tleft: this.mouseX - this.mouseOffsetX,\n\t\t\ttop:  this.mouseY - this.mouseOffsetY\n\t\t});\n\t}\n\n});\n\n/**\n * Drag-to-sort class\n *\n * Builds on the Drag class by allowing you to sort the elements amongst themselves.\n */\nGarnish.DragSort = Garnish.Drag.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$heightedContainer: null,\n\t$insertion: null,\n\tinsertionVisible: false,\n\toldDraggeeIndexes: null,\n\tnewDraggeeIndexes: null,\n\tclosestItem: null,\n\n\t_midpointVersion: 0,\n\t_$prevItem: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed  items    Elements that should be draggable right away. (Can be skipped.)\n\t * @param object settings Any settings that should override the defaults.\n\t */\n\tinit: function(items, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.DragSort.defaults, settings);\n\t\tthis.base(items, settings);\n\t},\n\n\t/**\n\t * Creates the insertion element.\n\t */\n\tcreateInsertion: function()\n\t{\n\t\tif (this.settings.insertion)\n\t\t{\n\t\t\tif (typeof this.settings.insertion == 'function')\n\t\t\t{\n\t\t\t\treturn $(this.settings.insertion(this.$draggee));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn $(this.settings.insertion);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target X position\n\t */\n\tgetHelperTargetX: function()\n\t{\n\t\tif (this.settings.magnetStrength != 1)\n\t\t{\n\t\t\tthis.getHelperTargetX._draggeeOffsetX = this.$draggee.offset().left;\n\t\t\treturn this.getHelperTargetX._draggeeOffsetX + ((this.mouseX - this.mouseOffsetX - this.getHelperTargetX._draggeeOffsetX) / this.settings.magnetStrength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.base();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the helper’s target Y position\n\t */\n\tgetHelperTargetY: function()\n\t{\n\t\tif (this.settings.magnetStrength != 1)\n\t\t{\n\t\t\tthis.getHelperTargetY._draggeeOffsetY = this.$draggee.offset().top;\n\t\t\treturn this.getHelperTargetY._draggeeOffsetY + ((this.mouseY - this.mouseOffsetY - this.getHelperTargetY._draggeeOffsetY) / this.settings.magnetStrength);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.base();\n\t\t}\n\t},\n\n\t/**\n\t * Returns whether the draggee can be inserted before a given item.\n\t */\n\tcanInsertBefore: function($item)\n\t{\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns whether the draggee can be inserted after a given item.\n\t */\n\tcanInsertAfter: function($item)\n\t{\n\t\treturn true;\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Drag Start\n\t */\n\tonDragStart: function()\n\t{\n\t\tthis.oldDraggeeIndexes = this._getDraggeeIndexes();\n\n\t\t// Are we supposed to be moving the target item to the front, and is it not already there?\n\t\tif (\n\t\t\tthis.settings.moveTargetItemToFront &&\n\t\t\tthis.$draggee.length > 1 &&\n\t\t\tthis._getItemIndex(this.$draggee[0]) > this._getItemIndex(this.$draggee[1])\n\t\t)\n\t\t{\n\t\t\t// Reposition the target item before the other draggee items in the DOM\n\t\t\tthis.$draggee.first().insertBefore(this.$draggee[1]);\n\t\t}\n\n\t\t// Create the insertion\n\t\tthis.$insertion = this.createInsertion();\n\t\tthis._placeInsertionWithDraggee();\n\n\t\tthis.closestItem = null;\n\t\tthis._clearMidpoints();\n\n\t\t//  Get the closest container that has a height\n\t\tif (this.settings.container)\n\t\t{\n\t\t\tthis.$heightedContainer = $(this.settings.container);\n\n\t\t\twhile (!this.$heightedContainer.height())\n\t\t\t{\n\t\t\t\tthis.$heightedContainer = this.$heightedContainer.parent();\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag\n\t */\n\tonDrag: function()\n\t{\n\t\t// If there's a container set, make sure that we're hovering over it\n\t\tif (this.$heightedContainer && !Garnish.hitTest(this.mouseX, this.mouseY, this.$heightedContainer))\n\t\t{\n\t\t\tif (this.closestItem)\n\t\t\t{\n\t\t\t\tthis.closestItem = null;\n\t\t\t\tthis._removeInsertion();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Is there a new closest item?\n\t\t\tif (\n\t\t\t\tthis.closestItem !== (this.closestItem = this._getClosestItem()) &&\n\t\t\t\tthis.closestItem !== null\n\t\t\t)\n\t\t\t{\n\t\t\t\tthis._updateInsertion();\n\t\t\t}\n\t\t}\n\n\t\tthis.base();\n\t},\n\n\t/**\n\t * On Drag Stop\n\t */\n\tonDragStop: function()\n\t{\n\t\tthis._removeInsertion();\n\n\t\t// Should we keep the target item where it was?\n\t\tif (!this.settings.moveTargetItemToFront && this.targetItemPositionInDraggee != 0)\n\t\t{\n\t\t\tthis.$targetItem.insertAfter(this.$draggee.eq(this.targetItemPositionInDraggee));\n\t\t}\n\n\t\t// Return the helpers to the draggees\n\t\tthis.returnHelpersToDraggees();\n\n\t\tthis.base();\n\n\t\t// Has the item actually moved?\n\t\tthis.$items = $().add(this.$items);\n\t\tthis.newDraggeeIndexes = this._getDraggeeIndexes();\n\n\t\tif (this.newDraggeeIndexes.join(',') != this.oldDraggeeIndexes.join(','))\n\t\t{\n\t\t\tthis.onSortChange();\n\t\t}\n\t},\n\n\t/**\n\t * On Insertion Point Change event\n\t */\n\tonInsertionPointChange: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('insertionPointChange');\n\t\t\tthis.settings.onInsertionPointChange();\n\t\t}, this));\n\t},\n\n\t/**\n\t * On Sort Change event\n\t */\n\tonSortChange: function()\n\t{\n\t\tGarnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.trigger('sortChange');\n\t\t\tthis.settings.onSortChange();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t_getItemIndex: function(item)\n\t{\n\t\treturn $.inArray(item, this.$items);\n\t},\n\n\t_getDraggeeIndexes: function()\n\t{\n\t\tvar indexes = [];\n\n\t\tfor (var i = 0; i < this.$draggee.length; i++)\n\t\t{\n\t\t\tindexes.push(this._getItemIndex(this.$draggee[i]))\n\t\t}\n\n\t\treturn indexes;\n\t},\n\n\t/**\n\t * Returns the closest item to the cursor.\n\t */\n\t_getClosestItem: function()\n\t{\n\t\tthis._getClosestItem._closestItem = null;\n\n\t\t// Start by checking the draggee/insertion, if either are visible\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (!this.settings.removeDraggee)\n\t\t{\n\t\t\tthis._testForClosestItem(this.$draggee[0]);\n\t\t}\n\t\telse if (this.insertionVisible)\n\t\t{\n\t\t\tthis._testForClosestItem(this.$insertion[0]);\n\t\t}\n\n\t\t// Check items before the draggee\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this._getClosestItem._closestItem) this._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._closestItem)\n\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._startXDist = this._getClosestItem._lastXDist = this._getClosestItem._closestItem ? Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX) : null;\n\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._startYDist = this._getClosestItem._lastYDist = this._getClosestItem._closestItem ? Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY) : null;\n\n\t\tthis._getClosestItem._$otherItem = this.$draggee.first().prev();\n\n\t\twhile (this._getClosestItem._$otherItem.length)\n\t\t{\n\t\t\t// See if we're just getting further away\n\t\t\tthis._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._$otherItem[0]);\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._xDist = Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._yDist = Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t\tif (\n\t\t\t\t(this.settings.axis == Garnish.Y_AXIS || (this._getClosestItem._lastXDist !== null && this._getClosestItem._xDist > this._getClosestItem._lastXDist)) &&\n\t\t\t\t(this.settings.axis == Garnish.X_AXIS || (this._getClosestItem._lastYDist !== null && this._getClosestItem._yDist > this._getClosestItem._lastYDist))\n\t\t\t)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._xDist;\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._yDist;\n\n\t\t\t// Give the extending class a chance to allow/disallow this item\n\t\t\tif (this.canInsertBefore(this._getClosestItem._$otherItem))\n\t\t\t{\n\t\t\t\tthis._testForClosestItem(this._getClosestItem._$otherItem[0]);\n\t\t\t}\n\n\t\t\t// Prep the next item\n\t\t\tthis._getClosestItem._$otherItem = this._getClosestItem._$otherItem.prev();\n\t\t}\n\n\t\t// Check items after the draggee\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._startXDist;\n\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._startYDist;\n\n\t\tthis._getClosestItem._$otherItem = this.$draggee.last().next();\n\n\t\twhile (this._getClosestItem._$otherItem.length)\n\t\t{\n\t\t\t// See if we're just getting further away\n\t\t\tthis._getClosestItem._midpoint = this._getItemMidpoint(this._getClosestItem._$otherItem[0]);\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._xDist = Math.abs(this._getClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._yDist = Math.abs(this._getClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t\tif (\n\t\t\t\t(this.settings.axis == Garnish.Y_AXIS || (this._getClosestItem._lastXDist !== null && this._getClosestItem._xDist > this._getClosestItem._lastXDist)) &&\n\t\t\t\t(this.settings.axis == Garnish.X_AXIS || (this._getClosestItem._lastYDist !== null && this._getClosestItem._yDist > this._getClosestItem._lastYDist))\n\t\t\t)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (this.settings.axis != Garnish.Y_AXIS) this._getClosestItem._lastXDist = this._getClosestItem._xDist;\n\t\t\tif (this.settings.axis != Garnish.X_AXIS) this._getClosestItem._lastYDist = this._getClosestItem._yDist;\n\n\t\t\t// Give the extending class a chance to allow/disallow this item\n\t\t\tif (this.canInsertAfter(this._getClosestItem._$otherItem))\n\t\t\t{\n\t\t\t\tthis._testForClosestItem(this._getClosestItem._$otherItem[0]);\n\t\t\t}\n\n\t\t\t// Prep the next item\n\t\t\tthis._getClosestItem._$otherItem = this._getClosestItem._$otherItem.next();\n\t\t}\n\n\t\t// Return the result\n\t\t// ---------------------------------------------------------------------\n\n\t\t// Ignore if it's the draggee or insertion\n\t\tif (\n\t\t\tthis._getClosestItem._closestItem != this.$draggee[0] &&\n\t\t\t(!this.insertionVisible || this._getClosestItem._closestItem != this.$insertion[0])\n\t\t)\n\t\t{\n\t\t\treturn this._getClosestItem._closestItem;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t_clearMidpoints: function()\n\t{\n\t\tthis._midpointVersion++;\n\t\tthis._$prevItem = null;\n\t},\n\n\t_getItemMidpoint: function(item)\n\t{\n\t\tif ($.data(item, 'midpointVersion') != this._midpointVersion)\n\t\t{\n\t\t\t// If this isn't the draggee, temporarily move the draggee to this item\n\t\t\tthis._getItemMidpoint._repositionDraggee = (\n\t\t\t\t!this.settings.axis &&\n\t\t\t\t(!this.settings.removeDraggee || this.insertionVisible) &&\n\t\t\t\titem != this.$draggee[0] &&\n\t\t\t\t(!this.$insertion || item != this.$insertion.get(0))\n\t\t\t);\n\n\t\t\tif (this._getItemMidpoint._repositionDraggee)\n\t\t\t{\n\t\t\t\t// Is this the first time we've had to temporarily reposition the draggee since the last midpoint clearing?\n\t\t\t\tif (!this._$prevItem)\n\t\t\t\t{\n\t\t\t\t\tthis._$prevItem = (this.insertionVisible ? this.$insertion : this.$draggee).first().prev();\n\t\t\t\t}\n\n\t\t\t\tthis._moveDraggeeToItem(item);\n\n\t\t\t\t// Now figure out which element we're actually getting the midpoint of\n\t\t\t\tif (!this.settings.removeDraggee)\n\t\t\t\t{\n\t\t\t\t\tthis._getItemMidpoint._$item = this.$draggee;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis._getItemMidpoint._$item = this.$insertion;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We're actually getting the midpoint of this item\n\t\t\t\tthis._getItemMidpoint._$item = $(item);\n\t\t\t}\n\n\t\t\tthis._getItemMidpoint._offset = this._getItemMidpoint._$item.offset();\n\n\t\t\t$.data(item, 'midpoint', {\n\t\t\t\tx: this._getItemMidpoint._offset.left + this._getItemMidpoint._$item.outerWidth() / 2,\n\t\t\t\ty: this._getItemMidpoint._offset.top + this._getItemMidpoint._$item.outerHeight() / 2\n\t\t\t});\n\n\t\t\t$.data(item, 'midpointVersion', this._midpointVersion);\n\n\t\t\tdelete this._getItemMidpoint._$item;\n\t\t\tdelete this._getItemMidpoint._offset;\n\n\t\t\tif (this._getItemMidpoint._repositionDraggee)\n\t\t\t{\n\t\t\t\t// Move the draggee back\n\t\t\t\tif (this._$prevItem.length)\n\t\t\t\t{\n\t\t\t\t\tthis.$draggee.insertAfter(this._$prevItem);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.$draggee.prependTo(this.$draggee.parent());\n\t\t\t\t}\n\n\t\t\t\tthis._placeInsertionWithDraggee();\n\t\t\t}\n\t\t}\n\n\t\treturn $.data(item, 'midpoint');\n\t},\n\n\t_testForClosestItem: function(item)\n\t{\n\t\tthis._testForClosestItem._midpoint = this._getItemMidpoint(item);\n\t\tthis._testForClosestItem._mouseDistX = Math.abs(this._testForClosestItem._midpoint.x - this.draggeeVirtualMidpointX);\n\t\tthis._testForClosestItem._mouseDistY = Math.abs(this._testForClosestItem._midpoint.y - this.draggeeVirtualMidpointY);\n\n\t\t// Don't even consider items that are further away on the Y axis\n\t\tif (\n\t\t\tthis._getClosestItem._closestItem === null ||\n\t\t\tthis._testForClosestItem._mouseDistY < this._getClosestItem._closestItemMouseDistY ||\n\t\t\t(\n\t\t\t\tthis._testForClosestItem._mouseDistY == this._getClosestItem._closestItemMouseDistY &&\n\t\t\t\tthis._testForClosestItem._mouseDistX <= this._getClosestItem._closestItemMouseDistX\n\t\t\t)\n\t\t)\n\t\t{\n\t\t\tthis._getClosestItem._closestItem          = item;\n\t\t\tthis._getClosestItem._closestItemMouseDistX = this._testForClosestItem._mouseDistX;\n\t\t\tthis._getClosestItem._closestItemMouseDistY = this._testForClosestItem._mouseDistY;\n\t\t}\n\t},\n\n\t/**\n\t * Updates the position of the insertion point.\n\t */\n\t_updateInsertion: function()\n\t{\n\t\tif (this.closestItem)\n\t\t{\n\t\t\tthis._moveDraggeeToItem(this.closestItem);\n\t\t}\n\n\t\t// Now that things have shifted around, invalidate the midpoints\n\t\tthis._clearMidpoints();\n\n\t\tthis.onInsertionPointChange();\n\t},\n\n\t_moveDraggeeToItem: function(item)\n\t{\n\t\t// Going down?\n\t\tif (this.$draggee.index() < $(item).index())\n\t\t{\n\t\t\tthis.$draggee.insertAfter(item);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$draggee.insertBefore(item);\n\t\t}\n\n\t\tthis._placeInsertionWithDraggee();\n\t},\n\n\t_placeInsertionWithDraggee: function()\n\t{\n\t\tif (this.$insertion)\n\t\t{\n\t\t\tthis.$insertion.insertBefore(this.$draggee.first());\n\t\t\tthis.insertionVisible = true;\n\t\t}\n\t},\n\n\t/**\n\t * Removes the insertion, if it's visible.\n\t */\n\t_removeInsertion: function()\n\t{\n\t\tif (this.insertionVisible)\n\t\t{\n\t\t\tthis.$insertion.remove();\n\t\t\tthis.insertionVisible = false;\n\t\t}\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tcontainer: null,\n\t\tinsertion: null,\n\t\tmoveTargetItemToFront: false,\n\t\tmagnetStrength: 1,\n\t\tonInsertionPointChange: $.noop,\n\t\tonSortChange: $.noop\n\t}\n});\n\n/**\n * ESC key manager class\n */\nGarnish.EscManager = Garnish.Base.extend({\n\n\thandlers: null,\n\n\tinit: function()\n\t{\n\t\tthis.handlers = [];\n\n\t\tthis.addListener(Garnish.$bod, 'keyup', function(ev)\n\t\t{\n\t\t\tif (ev.keyCode == Garnish.ESC_KEY)\n\t\t\t{\n\t\t\t\tthis.escapeLatest(ev);\n\t\t\t}\n\t\t});\n\t},\n\n\tregister: function(obj, func)\n\t{\n\t\tthis.handlers.push({\n\t\t\tobj: obj,\n\t\t\tfunc: func\n\t\t});\n\t},\n\n\tunregister: function(obj)\n\t{\n\t\tfor (var i = this.handlers.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (this.handlers[i].obj == obj)\n\t\t\t{\n\t\t\t\tthis.handlers.splice(i, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\tescapeLatest: function(ev)\n\t{\n\t\tif (this.handlers.length)\n\t\t{\n\t\t\tvar handler = this.handlers.pop();\n\n\t\t\tif (typeof handler.func == 'function')\n\t\t\t{\n\t\t\t\tvar func = handler.func;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar func = handler.obj[handler.func];\n\t\t\t}\n\n\t\t\tfunc.call(handler.obj, ev);\n\n\t\t\tif (typeof handler.obj.trigger == 'function')\n\t\t\t{\n\t\t\t\thandler.obj.trigger('escape');\n\t\t\t}\n\t\t}\n\t}\n\n});\n\nGarnish.escManager = new Garnish.EscManager();\n\n/**\n * HUD\n */\nGarnish.HUD = Garnish.Base.extend({\n\n\t$trigger: null,\n\t$fixedTriggerParent: null,\n\t$hud: null,\n\t$tip: null,\n\t$body: null,\n\t$header: null,\n\t$footer: null,\n\t$mainContainer: null,\n\t$main: null,\n\t$shade: null,\n\n\tshowing: false,\n\torientation: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(trigger, bodyContents, settings) {\n\n\t\tthis.$trigger = $(trigger);\n\n\t\tthis.setSettings(settings, Garnish.HUD.defaults);\n\t\tthis.on('show', this.settings.onShow);\n\t\tthis.on('hide', this.settings.onHide);\n\t\tthis.on('submit', this.settings.onSubmit);\n\n\t\tif (typeof Garnish.HUD.activeHUDs == \"undefined\")\n\t\t{\n\t\t\tGarnish.HUD.activeHUDs = {};\n\t\t}\n\n\t\tthis.$shade = $('<div/>', {'class': this.settings.shadeClass});\n\t\tthis.$hud = $('<div/>', {'class': this.settings.hudClass});\n\t\tthis.$tip = $('<div/>', {'class': this.settings.tipClass}).appendTo(this.$hud);\n\t\tthis.$body = $('<form/>', {'class': this.settings.bodyClass}).appendTo(this.$hud);\n\t\tthis.$mainContainer = $('<div/>', {'class': this.settings.mainContainerClass}).appendTo(this.$body);\n\t\tthis.$main = $('<div/>', {'class': this.settings.mainClass}).appendTo(this.$mainContainer);\n\n\t\tthis.updateBody(bodyContents);\n\n\t\t// See if the trigger is fixed\n\t\tvar $parent = this.$trigger;\n\n\t\tdo {\n\t\t\tif ($parent.css('position') == 'fixed')\n\t\t\t{\n\t\t\t\tthis.$fixedTriggerParent = $parent;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$parent = $parent.offsetParent();\n\t\t}\n\t\twhile ($parent.length && $parent.prop('nodeName') != 'HTML');\n\n\t\tif (this.$fixedTriggerParent)\n\t\t{\n\t\t\tthis.$hud.css('position', 'fixed');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$hud.css('position', 'absolute');\n\t\t}\n\n\t\tthis.show();\n\n\t\tthis.addListener(this.$body, 'submit', '_handleSubmit');\n\t\tthis.addListener(this.$shade, 'click', 'hide');\n\n\t\tif (!this.$fixedTriggerParent && Garnish.$scrollContainer[0] != Garnish.$win[0])\n\t\t{\n\t\t\tthis.addListener(Garnish.$scrollContainer, 'scroll', 'updateSizeAndPosition');\n\t\t}\n\n\t\tif (this.settings.closeBtn)\n\t\t{\n\t\t\tthis.addListener(this.settings.closeBtn, 'activate', 'hide');\n\t\t}\n\t},\n\n\t/**\n\t * Update the body contents\n\t */\n\tupdateBody: function(bodyContents)\n\t{\n\t\tthis.removeListener(this.$main, 'resize');\n\n\t\t// Cleanup\n\t\tthis.$main.html('');\n\n\t\tif (this.$header)\n\t\t{\n\t\t\tthis.$hud.removeClass('has-header');\n\t\t\tthis.$header.remove();\n\t\t\tthis.$header = null;\n\t\t}\n\n\t\tif (this.$footer)\n\t\t{\n\t\t\tthis.$hud.removeClass('has-footer');\n\t\t\tthis.$footer.remove();\n\t\t\tthis.$footer = null;\n\t\t}\n\n\t\t// Append the new body contents\n\t\tthis.$main.append(bodyContents);\n\n\t\t// Look for a header and footer\n\t\tvar $header = this.$main.find('.'+this.settings.headerClass+':first'),\n\t\t\t$footer = this.$main.find('.'+this.settings.footerClass+':first');\n\n\t\tif ($header.length)\n\t\t{\n\t\t\tthis.$header = $header.insertBefore(this.$mainContainer);\n\t\t\tthis.$hud.addClass('has-header');\n\t\t}\n\n\t\tif ($footer.length)\n\t\t{\n\t\t\tthis.$footer = $footer.insertAfter(this.$mainContainer);\n\t\t\tthis.$hud.addClass('has-footer');\n\t\t}\n\t},\n\n\t/**\n\t * Show\n\t */\n\tshow: function(ev)\n\t{\n\t\tif (ev && ev.stopPropagation)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t}\n\n\t\tif (this.showing)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.settings.closeOtherHUDs)\n\t\t{\n\t\t\tfor (var hudID in Garnish.HUD.activeHUDs)\n\t\t\t{\n\t\t\t\tGarnish.HUD.activeHUDs[hudID].hide();\n\t\t\t}\n\t\t}\n\n\t\t// Prevent the browser from jumping\n\t\tthis.$hud.css('top', Garnish.$scrollContainer.scrollTop());\n\n\t\t// Move it to the end of <body> so it gets the highest sub-z-index\n\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\tthis.$hud.appendTo(Garnish.$bod);\n\n\t\tthis.$hud.show();\n\t\tthis.updateSizeAndPosition();\n\n\t\tthis.$shade.show();\n\n\t\tthis.showing = true;\n\t\tGarnish.HUD.activeHUDs[this._namespace] = this;\n\n\t\tGarnish.escManager.register(this, 'hide');\n\n\t\tthis.onShow();\n\n\t\t// Reposition one last time just in case\n\t\tGarnish.requestAnimationFrame($.proxy(this, 'updateSizeAndPosition'));\n\n\t\tthis.enable();\n\t},\n\n\tonShow: function()\n\t{\n\t\tthis.trigger('show');\n\t},\n\n\tupdateSizeAndPosition: function()\n\t{\n\t\tthis.removeListener(this.$main, 'resize');\n\n\t\tvar windowWidth,\n\t\t\twindowHeight,\n\t\t\ttriggerWidth,\n\t\t\ttriggerHeight,\n\t\t\ttriggerOffset,\n\t\t\twindowScrollLeft,\n\t\t\twindowScrollTop,\n\t\t\tscrollContainerTriggerOffset,\n\t\t\tscrollContainerScrollLeft,\n\t\t\tscrollContainerScrollTop,\n\t\t\thudBodyWidth,\n\t\t\thudBodyHeight;\n\n\t\t// Get the window sizes and trigger offset\n\t\t// ---------------------------------------------------------------------\n\n\t\twindowWidth = Garnish.$win.width();\n\t\twindowHeight = Garnish.$win.height();\n\t\twindowScrollLeft = Garnish.$win.scrollLeft();\n\t\twindowScrollTop = Garnish.$win.scrollTop();\n\n\t\t// Get the trigger's dimensions\n\t\ttriggerWidth = this.$trigger.outerWidth();\n\t\ttriggerHeight = this.$trigger.outerHeight();\n\n\t\t// Get the offsets for each side of the trigger element\n\t\ttriggerOffset = this.$trigger.offset();\n\n\t\tif (this.$fixedTriggerParent)\n\t\t{\n\t\t\ttriggerOffset.left -= windowScrollLeft;\n\t\t\ttriggerOffset.top -= windowScrollTop;\n\n\t\t\tscrollContainerTriggerOffset = triggerOffset;\n\n\t\t\twindowScrollLeft = 0;\n\t\t\twindowScrollTop = 0;\n\t\t\tscrollContainerScrollLeft = 0;\n\t\t\tscrollContainerScrollTop = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscrollContainerTriggerOffset = Garnish.getOffset(this.$trigger);\n\n\t\t\tscrollContainerScrollLeft = Garnish.$scrollContainer.scrollLeft();\n\t\t\tscrollContainerScrollTop = Garnish.$scrollContainer.scrollTop();\n\t\t}\n\n\t\ttriggerOffset.right = triggerOffset.left + triggerWidth;\n\t\ttriggerOffset.bottom = triggerOffset.top + triggerHeight;\n\n\t\tscrollContainerTriggerOffset.right = scrollContainerTriggerOffset.left + triggerWidth;\n\t\tscrollContainerTriggerOffset.bottom = scrollContainerTriggerOffset.top + triggerHeight;\n\n\t\t// Get the HUD dimensions\n\t\tthis.$hud.css({\n\t\t\twidth: ''\n\t\t});\n\n\t\tthis.$mainContainer.css({\n\t\t\theight: '',\n\t\t\t'overflow-x': '',\n\t\t\t'overflow-y': ''\n\t\t});\n\n\t\thudBodyWidth = this.$body.width();\n\t\thudBodyHeight = this.$body.height();\n\n\t\t// Determine the best orientation for the HUD\n\t\t// ---------------------------------------------------------------------\n\n\t\t// Find the actual available top/right/bottom/left clearances\n\t\tvar clearances = {\n\t\t\tbottom: windowHeight + scrollContainerScrollTop - scrollContainerTriggerOffset.bottom,\n\t\t\ttop:    scrollContainerTriggerOffset.top - scrollContainerScrollTop,\n\t\t\tright:  windowWidth + scrollContainerScrollLeft - scrollContainerTriggerOffset.right,\n\t\t\tleft:   scrollContainerTriggerOffset.left - scrollContainerScrollLeft\n\t\t};\n\n\t\t// Find the first position that has enough room\n\t\tthis.orientation = null;\n\n\t\tfor (var i = 0; i < this.settings.orientations.length; i++)\n\t\t{\n\t\t\tvar orientation = this.settings.orientations[i],\n\t\t\t\trelevantSize = (orientation == 'top' || orientation == 'bottom' ? hudBodyHeight : hudBodyWidth);\n\n\t\t\tif (clearances[orientation] - (this.settings.windowSpacing + this.settings.triggerSpacing) >= relevantSize)\n\t\t\t{\n\t\t\t\t// This is the first orientation that has enough room in order of preference, so we'll go with this\n\t\t\t\tthis.orientation = orientation;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!this.orientation || clearances[orientation] > clearances[this.orientation])\n\t\t\t{\n\t\t\t\t// Use this as a fallback as it's the orientation with the most clearance so far\n\t\t\t\tthis.orientation = orientation;\n\t\t\t}\n\t\t}\n\n\t\t// Just in case...\n\t\tif (!this.orientation || $.inArray(this.orientation, ['bottom', 'top', 'right', 'left']) == -1)\n\t\t{\n\t\t\tthis.orientation = 'bottom'\n\t\t}\n\n\t\t// Update the tip class\n\t\tif (this.tipClass)\n\t\t{\n\t\t\tthis.$tip.removeClass(this.tipClass);\n\t\t}\n\n\t\tthis.tipClass = this.settings.tipClass+'-'+Garnish.HUD.tipClasses[this.orientation];\n\t\tthis.$tip.addClass(this.tipClass);\n\n\t\t// Make sure the HUD body is within the allowed size\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar maxHudBodyWidth,\n\t\t\tmaxHudBodyHeight;\n\n\t\tif (this.orientation == 'top' || this.orientation == 'bottom')\n\t\t{\n\t\t\tmaxHudBodyWidth = windowWidth - this.settings.windowSpacing * 2;\n\t\t\tmaxHudBodyHeight = clearances[this.orientation];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxHudBodyWidth = clearances[this.orientation];\n\t\t\tmaxHudBodyHeight = windowHeight - this.settings.windowSpacing * 2;\n\t\t}\n\n\t\tif (maxHudBodyWidth < this.settings.minBodyWidth)\n\t\t{\n\t\t\tmaxHudBodyWidth = this.settings.minBodyWidth;\n\t\t}\n\n\t\tif (maxHudBodyHeight < this.settings.minBodyHeight)\n\t\t{\n\t\t\tmaxHudBodyHeight = this.settings.minBodyHeight;\n\t\t}\n\n\t\tif (hudBodyWidth > maxHudBodyWidth || hudBodyWidth < this.settings.minBodyWidth)\n\t\t{\n\t\t\tif (hudBodyWidth > maxHudBodyWidth)\n\t\t\t{\n\t\t\t\thudBodyWidth = maxHudBodyWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thudBodyWidth = this.settings.minBodyWidth;\n\t\t\t}\n\n\t\t\tthis.$hud.width(hudBodyWidth);\n\n\t\t\t// Is there any overflow now?\n\t\t\tif (this.$main.outerWidth() > maxHudBodyWidth)\n\t\t\t{\n\t\t\t\tthis.$mainContainer.css('overflow-x', 'scroll');\n\t\t\t}\n\n\t\t\t// The height may have just changed\n\t\t\thudBodyHeight = this.$body.height();\n\t\t}\n\n\t\tif (hudBodyHeight > maxHudBodyHeight || hudBodyHeight < this.settings.minBodyHeight)\n\t\t{\n\t\t\tif (hudBodyHeight > maxHudBodyHeight)\n\t\t\t{\n\t\t\t\thudBodyHeight = maxHudBodyHeight;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thudBodyHeight = this.settings.minBodyHeight;\n\t\t\t}\n\n\t\t\tvar mainHeight = hudBodyHeight;\n\n\t\t\tif (this.$header)\n\t\t\t{\n\t\t\t\tmainHeight -= this.$header.outerHeight();\n\t\t\t}\n\n\t\t\tif (this.$footer)\n\t\t\t{\n\t\t\t\tmainHeight -= this.$footer.outerHeight();\n\t\t\t}\n\n\t\t\tthis.$mainContainer.height(mainHeight);\n\n\t\t\t// Is there any overflow now?\n\t\t\tif (this.$main.outerHeight() > mainHeight)\n\t\t\t{\n\t\t\t\tthis.$mainContainer.css('overflow-y', 'scroll');\n\t\t\t}\n\t\t}\n\n\t\t// Set the HUD/tip positions\n\t\t// ---------------------------------------------------------------------\n\n\t\tif (this.orientation == 'top' || this.orientation == 'bottom')\n\t\t{\n\t\t\t// Center the HUD horizontally\n\t\t\tvar maxLeft = (windowWidth + windowScrollLeft) - (hudBodyWidth + this.settings.windowSpacing),\n\t\t\t\tminLeft = (windowScrollLeft + this.settings.windowSpacing),\n\t\t\t\ttriggerCenter = triggerOffset.left + Math.round(triggerWidth / 2),\n\t\t\t\tleft = triggerCenter - Math.round(hudBodyWidth / 2);\n\n\t\t\tif (left > maxLeft) left = maxLeft;\n\t\t\tif (left < minLeft) left = minLeft;\n\n\t\t\tthis.$hud.css('left', left);\n\n\t\t\tvar tipLeft = (triggerCenter - left) - (this.settings.tipWidth / 2);\n\t\t\tthis.$tip.css({ left: tipLeft, top: '' });\n\n\t\t\tif (this.orientation == 'top')\n\t\t\t{\n\t\t\t\tvar top = triggerOffset.top - (hudBodyHeight + this.settings.triggerSpacing);\n\t\t\t\tthis.$hud.css('top', top);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar top = triggerOffset.bottom + this.settings.triggerSpacing;\n\t\t\t\tthis.$hud.css('top', top);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Center the HUD vertically\n\t\t\tvar maxTop = (windowHeight + windowScrollTop) - (hudBodyHeight + this.settings.windowSpacing),\n\t\t\t\tminTop = (windowScrollTop + this.settings.windowSpacing),\n\t\t\t\ttriggerCenter = triggerOffset.top + Math.round(triggerHeight / 2),\n\t\t\t\ttop = triggerCenter - Math.round(hudBodyHeight / 2);\n\n\t\t\tif (top > maxTop) top = maxTop;\n\t\t\tif (top < minTop) top = minTop;\n\n\t\t\tthis.$hud.css('top', top);\n\n\t\t\tvar tipTop = (triggerCenter - top) - (this.settings.tipWidth / 2);\n\t\t\tthis.$tip.css({ top: tipTop, left: '' });\n\n\n\t\t\tif (this.orientation == 'left')\n\t\t\t{\n\t\t\t\tvar left = triggerOffset.left - (hudBodyWidth + this.settings.triggerSpacing);\n\t\t\t\tthis.$hud.css('left', left);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = triggerOffset.right + this.settings.triggerSpacing;\n\t\t\t\tthis.$hud.css('left', left);\n\t\t\t}\n\t\t}\n\n\t\tGarnish.requestAnimationFrame($.proxy(function() {\n\t\t\tthis.addListener(this.$main, 'resize', 'updateSizeAndPosition');\n\t\t}, this));\n\t},\n\n\t/**\n\t * Hide\n\t */\n\thide: function()\n\t{\n\t\tthis.disable();\n\n\t\tthis.$hud.hide();\n\t\tthis.$shade.hide();\n\t\tthis.showing = false;\n\n\t\tdelete Garnish.HUD.activeHUDs[this._namespace];\n\n\t\tGarnish.escManager.unregister(this);\n\n\t\tthis.onHide();\n\t},\n\n\tonHide: function()\n\t{\n\t\tthis.trigger('hide');\n\t},\n\n\ttoggle: function()\n\t{\n\t\tif (this.showing)\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t},\n\n\tsubmit: function()\n\t{\n\t\tthis.onSubmit();\n\t},\n\n\tonSubmit: function()\n\t{\n\t\tthis.trigger('submit');\n\t},\n\n\t_handleSubmit: function(ev)\n\t{\n\t\tev.preventDefault();\n\t\tthis.submit();\n\t}\n},\n{\n\ttipClasses: { bottom: 'top', top: 'bottom', right: 'left', left: 'right'},\n\n\tdefaults: {\n\t\tshadeClass: 'hud-shade',\n\t\thudClass: 'hud',\n\t\ttipClass: 'tip',\n\t\tbodyClass: 'body',\n\t\theaderClass: 'hud-header',\n\t\tfooterClass: 'hud-footer',\n\t\tmainContainerClass: 'main-container',\n\t\tmainClass: 'main',\n\t\torientations: ['bottom', 'top', 'right', 'left'],\n\t\ttriggerSpacing: 10,\n\t\twindowSpacing: 10,\n\t\ttipWidth: 30,\n\t\tminBodyWidth: 200,\n\t\tminBodyHeight: 0,\n\t\tonShow: $.noop,\n\t\tonHide: $.noop,\n\t\tonSubmit: $.noop,\n\t\tcloseBtn: null,\n\t\tcloseOtherHUDs: true\n\t}\n});\n\n/**\n * Light Switch\n */\nGarnish.LightSwitch = Garnish.Base.extend({\n\n\tsettings: null,\n\t$outerContainer: null,\n\t$innerContainer: null,\n\t$input: null,\n\t$toggleTarget: null,\n\ton: null,\n\tdragger: null,\n\n\tdragStartMargin: null,\n\n\tinit: function(outerContainer, settings)\n\t{\n\t\tthis.$outerContainer = $(outerContainer);\n\n\t\t// Is this already a switch?\n\t\tif (this.$outerContainer.data('lightswitch'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a switch on an element');\n\t\t\tthis.$outerContainer.data('lightswitch').destroy();\n\t\t}\n\n\t\tthis.$outerContainer.data('lightswitch', this);\n\n\t\tthis.setSettings(settings, Garnish.LightSwitch.defaults);\n\n\t\tthis.$innerContainer = this.$outerContainer.find('.container:first');\n\t\tthis.$input = this.$outerContainer.find('input:first');\n\t\tthis.$toggleTarget = $(this.$outerContainer.attr('data-toggle'));\n\n\t\tthis.on = this.$outerContainer.hasClass('on');\n\n\t\tthis.addListener(this.$outerContainer, 'mousedown', '_handleMouseDown');\n\t\tthis.addListener(this.$outerContainer, 'keydown', '_handleKeyDown');\n\n\t\tthis.dragger = new Garnish.BaseDrag(this.$outerContainer, {\n\t\t\taxis:                 Garnish.X_AXIS,\n\t\t\tignoreHandleSelector: null,\n\t\t\tonDragStart:          $.proxy(this, '_handleDragStart'),\n\t\t\tonDrag:               $.proxy(this, '_handleDrag'),\n\t\t\tonDragStop:           $.proxy(this, '_handleDragStop')\n\t\t});\n\t},\n\n\tturnOn: function()\n\t{\n\t\tthis.$innerContainer.velocity('stop').velocity({marginLeft: 0}, Garnish.FX_DURATION);\n\t\tthis.$input.val(Garnish.Y_AXIS);\n\t\tthis.on = true;\n\t\tthis.onChange();\n\n\t\tthis.$toggleTarget.show();\n\t\tthis.$toggleTarget.height('auto');\n\t\tvar height = this.$toggleTarget.height();\n\t\tthis.$toggleTarget.height(0);\n\t\tthis.$toggleTarget.velocity('stop').velocity({height: height}, Garnish.FX_DURATION, $.proxy(function() {\n\t\t\tthis.$toggleTarget.height('auto');\n\t\t}, this));\n\t},\n\n\tturnOff: function()\n\t{\n\t\tthis.$innerContainer.velocity('stop').velocity({marginLeft: Garnish.LightSwitch.offMargin}, Garnish.FX_DURATION);\n\t\tthis.$input.val('');\n\t\tthis.on = false;\n\t\tthis.onChange();\n\n\t\tthis.$toggleTarget.velocity('stop').velocity({height: 0}, Garnish.FX_DURATION);\n\t},\n\n\ttoggle: function(ev)\n\t{\n\t\tif (!this.on)\n\t\t{\n\t\t\tthis.turnOn();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.turnOff();\n\t\t}\n\t},\n\n\tonChange: function()\n\t{\n\t\tthis.trigger('change');\n\t\tthis.settings.onChange();\n\t\tthis.$outerContainer.trigger('change');\n\t},\n\n\t_handleMouseDown: function()\n\t{\n\t\tthis.addListener(Garnish.$doc, 'mouseup', '_handleMouseUp')\n\t},\n\n\t_handleMouseUp: function()\n\t{\n\t\tthis.removeListener(Garnish.$doc, 'mouseup');\n\n\t\t// Was this a click?\n\t\tif (!this.dragger.dragging)\n\t\t\tthis.toggle();\n\t},\n\n\t_handleKeyDown: function(ev)\n\t{\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.SPACE_KEY:\n\t\t\t{\n\t\t\t\tthis.toggle();\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t_getMargin: function()\n\t{\n\t\treturn parseInt(this.$innerContainer.css('marginLeft'))\n\t},\n\n\t_handleDragStart: function()\n\t{\n\t\tthis.dragStartMargin = this._getMargin();\n\t},\n\n\t_handleDrag: function()\n\t{\n\t\tvar margin = this.dragStartMargin + this.dragger.mouseDistX;\n\n\t\tif (margin < Garnish.LightSwitch.offMargin)\n\t\t{\n\t\t\tmargin = Garnish.LightSwitch.offMargin;\n\t\t}\n\t\telse if (margin > 0)\n\t\t{\n\t\t\tmargin = 0;\n\t\t}\n\n\t\tthis.$innerContainer.css('marginLeft', margin);\n\t},\n\n\t_handleDragStop: function()\n\t{\n\t\tvar margin = this._getMargin();\n\n\t\tif (margin > -16)\n\t\t{\n\t\t\tthis.turnOn();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.turnOff();\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$outerContainer.removeData('lightswitch');\n\t\tthis.dragger.destroy();\n\t\tthis.base();\n\t}\n},\n{\n\toffMargin: -50,\n\tdefaults: {\n\t\tonChange: $.noop\n\t}\n});\n\n/**\n * Menu\n */\nGarnish.Menu = Garnish.Base.extend({\n\n\tsettings: null,\n\n\t$container: null,\n\t$options: null,\n\t$anchor: null,\n\n\t_windowWidth: null,\n\t_windowHeight: null,\n\t_windowScrollLeft: null,\n\t_windowScrollTop: null,\n\n\t_anchorOffset: null,\n\t_anchorWidth: null,\n\t_anchorHeight: null,\n\t_anchorOffsetRight: null,\n\t_anchorOffsetBottom: null,\n\n\t_menuWidth: null,\n\t_menuHeight: null,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(container, settings)\n\t{\n\t\tthis.setSettings(settings, Garnish.Menu.defaults);\n\n\t\tthis.$container = $(container);\n\t\tthis.$options = $();\n\t\tthis.addOptions(this.$container.find('a'));\n\n\t\t// Deprecated\n\t\tif (this.settings.attachToElement)\n\t\t{\n\t\t\tthis.settings.anchor = this.settings.attachToElement;\n\t\t\tGarnish.log('The \\'attachToElement\\' setting is deprecated. Use \\'anchor\\' instead.');\n\t\t}\n\n\t\tif (this.settings.anchor)\n\t\t{\n\t\t\tthis.$anchor = $(this.settings.anchor);\n\t\t}\n\n\t\t// Prevent clicking on the container from hiding the menu\n\t\tthis.addListener(this.$container, 'mousedown', function(ev)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t});\n\t},\n\n\taddOptions: function($options)\n\t{\n\t\tthis.$options = this.$options.add($options);\n\t\t$options.data('menu', this);\n\t\tthis.addListener($options, 'click', 'selectOption');\n\t},\n\n\tsetPositionRelativeToAnchor: function()\n\t{\n\t\tthis._windowWidth = Garnish.$win.width();\n\t\tthis._windowHeight = Garnish.$win.height();\n\t\tthis._windowScrollLeft = Garnish.$win.scrollLeft();\n\t\tthis._windowScrollTop = Garnish.$win.scrollTop();\n\n\t\tthis._anchorOffset = this.$anchor.offset();\n\t\tthis._anchorWidth = this.$anchor.outerWidth();\n\t\tthis._anchorHeight = this.$anchor.outerHeight();\n\t\tthis._anchorOffsetRight = this._anchorOffset.left + this._anchorHeight;\n\t\tthis._anchorOffsetBottom = this._anchorOffset.top + this._anchorHeight;\n\n\t\tthis.$container.css('minWidth', 0);\n\t\tthis.$container.css('minWidth', this._anchorWidth - (this.$container.outerWidth() - this.$container.width()));\n\n\t\tthis._menuWidth = this.$container.outerWidth();\n\t\tthis._menuHeight = this.$container.outerHeight();\n\n\t\t// Is there room for the menu below the anchor?\n\t\tvar topClearance = this._anchorOffset.top - this._windowScrollTop,\n\t\t\tbottomClearance = this._windowHeight + this._windowScrollTop - this._anchorOffsetBottom;\n\n\t\tif (bottomClearance >= this._menuHeight || bottomClearance >= topClearance || topClearance < this._menuHeight)\n\t\t{\n\t\t\tthis.$container.css('top', this._anchorOffsetBottom);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$container.css('top', this._anchorOffset.top - this._menuHeight);\n\t\t}\n\n\t\t// Figure out how we're aliging it\n\t\tvar align = this.$container.data('align');\n\n\t\tif (align != 'left' && align != 'center' && align != 'right')\n\t\t{\n\t\t\talign = 'left';\n\t\t}\n\n\t\tif (align == 'center')\n\t\t{\n\t\t\tthis._alignCenter();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Figure out which options are actually possible\n\t\t\tvar rightClearance = this._windowWidth + this._windowScrollLeft - (this._anchorOffset.left + this._menuWidth),\n\t\t\t\tleftClearance = this._anchorOffsetRight - this._menuWidth;\n\n\t\t\tif (align == 'right' && leftClearance >= 0 || rightClearance < 0)\n\t\t\t{\n\t\t\t\tthis._alignRight();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._alignLeft();\n\t\t\t}\n\t\t}\n\n\t\tdelete this._windowWidth;\n\t\tdelete this._windowHeight;\n\t\tdelete this._windowScrollLeft;\n\t\tdelete this._windowScrollTop;\n\t\tdelete this._anchorOffset;\n\t\tdelete this._anchorWidth;\n\t\tdelete this._anchorHeight;\n\t\tdelete this._anchorOffsetRight;\n\t\tdelete this._anchorOffsetBottom;\n\t\tdelete this._menuWidth;\n\t\tdelete this._menuHeight;\n\t},\n\n\tshow: function()\n\t{\n\t\t// Move the menu to the end of the DOM\n\t\tthis.$container.appendTo(Garnish.$bod)\n\n\t\tif (this.$anchor)\n\t\t{\n\t\t\tthis.setPositionRelativeToAnchor();\n\t\t}\n\n\t\tthis.$container.velocity('stop');\n\t\tthis.$container.css({\n\t\t\topacity: 1,\n\t\t\tdisplay: 'block'\n\t\t});\n\n\t\tGarnish.escManager.register(this, 'hide');\n\t},\n\n\thide: function()\n\t{\n\t\tthis.$container.velocity('fadeOut', { duration: Garnish.FX_DURATION }, $.proxy(function()\n\t\t{\n\t\t\tthis.$container.detach();\n\t\t}, this));\n\n\t\tGarnish.escManager.unregister(this);\n\n\t\tthis.trigger('hide');\n\t},\n\n\tselectOption: function(ev)\n\t{\n\t\tthis.settings.onOptionSelect(ev.currentTarget);\n\t\tthis.trigger('optionselect', { selectedOption: ev.currentTarget });\n\t\tthis.hide();\n\t},\n\n\t_alignLeft: function()\n\t{\n\t\tthis.$container.css({\n\t\t\tleft: this._anchorOffset.left,\n\t\t\tright: 'auto'\n\t\t});\n\t},\n\n\t_alignRight: function()\n\t{\n\t\tthis.$container.css({\n\t\t\tright: this._windowWidth - (this._anchorOffset.left + this._anchorWidth),\n\t\t\tleft: 'auto'\n\t\t});\n\t},\n\n\t_alignCenter: function()\n\t{\n\t\tvar left = Math.round((this._anchorOffset.left + this._anchorWidth / 2) - (this._menuWidth / 2));\n\n\t\tif (left < 0)\n\t\t{\n\t\t\tleft = 0;\n\t\t}\n\n\t\tthis.$container.css('left', left);\n\t}\n\n},\n{\n\tdefaults: {\n\t\tanchor: null,\n\t\tonOptionSelect: $.noop\n\t}\n});\n\n/**\n * Menu Button\n */\nGarnish.MenuBtn = Garnish.Base.extend({\n\n\t$btn: null,\n\tmenu: null,\n\tshowingMenu: false,\n\tdisabled: true,\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(btn, settings)\n\t{\n\t\tthis.$btn = $(btn);\n\n\t\t// Is this already a menu button?\n\t\tif (this.$btn.data('menubtn'))\n\t\t{\n\t\t\t// Grab the old MenuBtn's menu container\n\t\t\tvar $menu = this.$btn.data('menubtn').menu.$container;\n\n\t\t\tGarnish.log('Double-instantiating a menu button on an element');\n\t\t\tthis.$btn.data('menubtn').destroy();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar $menu = this.$btn.next('.menu').detach();\n\t\t}\n\n\t\tthis.$btn.data('menubtn', this);\n\n\t\tthis.setSettings(settings, Garnish.MenuBtn.defaults);\n\n\t\tthis.menu = new Garnish.Menu($menu, {\n\t\t\tanchor: (this.settings.menuAnchor || this.$btn),\n\t\t\tonOptionSelect: $.proxy(this, 'onOptionSelect')\n\t\t});\n\n\t\tthis.menu.on('hide', $.proxy(this, 'onMenuHide'));\n\n\t\tthis.addListener(this.$btn, 'mousedown', 'onMouseDown');\n\t\tthis.enable();\n\t},\n\n\tonMouseDown: function(ev)\n\t{\n\t\tif (ev.which != Garnish.PRIMARY_CLICK || Garnish.isCtrlKeyPressed(ev))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tev.preventDefault();\n\n\t\tif (this.showingMenu)\n\t\t{\n\t\t\tthis.hideMenu();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.showMenu();\n\t\t}\n\t},\n\n\tshowMenu: function()\n\t{\n\t\tif (this.disabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.menu.show();\n\t\tthis.$btn.addClass('active');\n\t\tthis.showingMenu = true;\n\n\t\tsetTimeout($.proxy(function() {\n\t\t\tthis.addListener(Garnish.$doc, 'mousedown', 'onMouseDown');\n\t\t}, this), 1);\n\t},\n\n\thideMenu: function()\n\t{\n\t\tthis.menu.hide();\n\t},\n\n\tonMenuHide: function()\n\t{\n\t\tthis.$btn.removeClass('active');\n\t\tthis.showingMenu = false;\n\n\t\tthis.removeListener(Garnish.$doc, 'mousedown');\n\t},\n\n\tonOptionSelect: function(option)\n\t{\n\t\tthis.settings.onOptionSelect(option);\n\t\tthis.trigger('optionSelect', { option: option });\n\t},\n\n\tenable: function ()\n\t{\n\t\tthis.disabled = false;\n\t},\n\n\tdisable: function ()\n\t{\n\t\tthis.disabled = true;\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$btn.removeData('menubtn');\n\t\tthis.base();\n\t}\n},\n{\n\tdefaults: {\n\t\tmenuAnchor: null,\n\t\tonOptionSelect: $.noop\n\t}\n});\n\n/**\n * Mixed input\n *\n * @todo RTL support, in the event that the input doesn't have dir=\"ltr\".\n */\nGarnish.MixedInput = Garnish.Base.extend({\n\n\t$container: null,\n\telements: null,\n\tfocussedElement: null,\n\tblurTimeout: null,\n\n\tinit: function(container, settings)\n\t{\n\t\tthis.$container = $(container);\n\t\tthis.setSettings(settings, Garnish.MixedInput.defaults);\n\n\t\tthis.elements = [];\n\n\t\t// Allow the container to receive focus\n\t\tthis.$container.attr('tabindex', 0);\n\t\tthis.addListener(this.$container, 'focus', 'onFocus');\n\t},\n\n\tgetElementIndex: function($elem)\n\t{\n\t\treturn $.inArray($elem, this.elements);\n\t},\n\n\tisText: function($elem)\n\t{\n\t\treturn ($elem.prop('nodeName') == 'INPUT');\n\t},\n\n\tonFocus: function(ev)\n\t{\n\t\t// Set focus to the first element\n\t\tif (this.elements.length)\n\t\t{\n\t\t\tvar $elem = this.elements[0];\n\t\t\tthis.setFocus($elem);\n\t\t\tthis.setCarotPos($elem, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addTextElement();\n\t\t}\n\t},\n\n\taddTextElement: function(index)\n\t{\n\t\tvar text = new TextElement(this);\n\t\tthis.addElement(text.$input, index);\n\t\treturn text;\n\t},\n\n\taddElement: function($elem, index)\n\t{\n\t\t// Was a target index passed, and is it valid?\n\t\tif (typeof index == 'undefined')\n\t\t{\n\t\t\tif (this.focussedElement)\n\t\t\t{\n\t\t\t\tvar focussedElement = this.focussedElement,\n\t\t\t\t\tfocussedElementIndex = this.getElementIndex(focussedElement);\n\n\t\t\t\t// Is the focus on a text element?\n\t\t\t\tif (this.isText(focussedElement))\n\t\t\t\t{\n\t\t\t\t\tvar selectionStart = focussedElement.prop('selectionStart'),\n\t\t\t\t\t\tselectionEnd = focussedElement.prop('selectionEnd'),\n\t\t\t\t\t\tval = focussedElement.val(),\n\t\t\t\t\t\tpreVal = val.substring(0, selectionStart),\n\t\t\t\t\t\tpostVal = val.substr(selectionEnd);\n\n\t\t\t\t\tif (preVal && postVal)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Split the input into two\n\t\t\t\t\t\tfocussedElement.val(preVal).trigger('change');\n\t\t\t\t\t\tvar newText = new TextElement(this);\n\t\t\t\t\t\tnewText.$input.val(postVal).trigger('change');\n\t\t\t\t\t\tthis.addElement(newText.$input, focussedElementIndex+1);\n\n\t\t\t\t\t\t// Insert the new element in between them\n\t\t\t\t\t\tindex = focussedElementIndex+1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!preVal)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert the new element before this one\n\t\t\t\t\t\tindex = focussedElementIndex;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Insert it after this one\n\t\t\t\t\t\tindex = focussedElementIndex + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Just insert the new one after this one\n\t\t\t\t\tindex = focussedElementIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Insert the new element at the end\n\t\t\t\tindex = this.elements.length;\n\t\t\t}\n\t\t}\n\n\t\t// Add the element\n\t\tif (typeof this.elements[index] != 'undefined')\n\t\t{\n\t\t\t$elem.insertBefore(this.elements[index]);\n\t\t\tthis.elements.splice(index, 0, $elem);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Just for safe measure, set the index to what it really will be\n\t\t\tindex = this.elements.length;\n\n\t\t\tthis.$container.append($elem);\n\t\t\tthis.elements.push($elem);\n\t\t}\n\n\t\t// Make sure that there are text elements surrounding all non-text elements\n\t\tif (!this.isText($elem))\n\t\t{\n\t\t\t// Add a text element before?\n\t\t\tif (index == 0 || !this.isText(this.elements[index-1]))\n\t\t\t{\n\t\t\t\tthis.addTextElement(index);\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\t// Add a text element after?\n\t\t\tif (index == this.elements.length-1 || !this.isText(this.elements[index+1]))\n\t\t\t{\n\t\t\t\tthis.addTextElement(index+1);\n\t\t\t}\n\t\t}\n\n\t\t// Add event listeners\n\t\tthis.addListener($elem, 'click', function() {\n\t\t\tthis.setFocus($elem);\n\t\t});\n\n\t\t// Set focus to the new element\n\t\tsetTimeout($.proxy(function() {\n\t\t\tthis.setFocus($elem);\n\t\t}, this), 1);\n\t},\n\n\tremoveElement: function($elem)\n\t{\n\t\tvar index = this.getElementIndex($elem);\n\t\tif (index != -1)\n\t\t{\n\t\t\tthis.elements.splice(index, 1);\n\n\t\t\tif (!this.isText($elem))\n\t\t\t{\n\t\t\t\t// Combine the two now-adjacent text elements\n\t\t\t\tvar $prevElem = this.elements[index-1],\n\t\t\t\t\t$nextElem = this.elements[index];\n\n\t\t\t\tif (this.isText($prevElem) && this.isText($nextElem))\n\t\t\t\t{\n\t\t\t\t\tvar prevElemVal = $prevElem.val(),\n\t\t\t\t\t\tnewVal = prevElemVal + $nextElem.val();\n\t\t\t\t\t$prevElem.val(newVal).trigger('change');\n\t\t\t\t\tthis.removeElement($nextElem);\n\t\t\t\t\tthis.setFocus($prevElem);\n\t\t\t\t\tthis.setCarotPos($prevElem, prevElemVal.length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$elem.remove();\n\t\t}\n\t},\n\n\tsetFocus: function($elem)\n\t{\n\t\tthis.$container.addClass('focus');\n\n\t\tif (!this.focussedElement)\n\t\t{\n\t\t\t// Prevent the container from receiving focus\n\t\t\t// as long as one of its elements has focus\n\t\t\tthis.$container.attr('tabindex', '-1');\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Blur the previously-focussed element\n\t\t\tthis.blurFocussedElement();\n\t\t}\n\n\t\t$elem.attr('tabindex', '0');\n\t\t$elem.focus();\n\t\tthis.focussedElement = $elem;\n\n\t\tthis.addListener($elem, 'blur', function() {\n\t\t\tthis.blurTimeout = setTimeout($.proxy(function() {\n\t\t\t\tif (this.focussedElement == $elem)\n\t\t\t\t{\n\t\t\t\t\tthis.blurFocussedElement();\n\t\t\t\t\tthis.focussedElement = null;\n\t\t\t\t\tthis.$container.removeClass('focus');\n\n\t\t\t\t\t// Get ready for future focus\n\t\t\t\t\tthis.$container.attr('tabindex', '0');\n\t\t\t\t}\n\t\t\t}, this), 1);\n\t\t});\n\t},\n\n\tblurFocussedElement: function()\n\t{\n\t\tthis.removeListener(this.focussedElement, 'blur');\n\t\tthis.focussedElement.attr('tabindex', '-1');\n\t},\n\n\tfocusPreviousElement: function($from)\n\t{\n\t\tvar index = this.getElementIndex($from);\n\n\t\tif (index > 0)\n\t\t{\n\t\t\tvar $elem = this.elements[index-1];\n\t\t\tthis.setFocus($elem);\n\n\t\t\t// If it's a text element, put the carot at the end\n\t\t\tif (this.isText($elem))\n\t\t\t{\n\t\t\t\tvar length = $elem.val().length;\n\t\t\t\tthis.setCarotPos($elem, length);\n\t\t\t}\n\t\t}\n\t},\n\n\tfocusNextElement: function($from)\n\t{\n\t\tvar index = this.getElementIndex($from);\n\n\t\tif (index < this.elements.length-1)\n\t\t{\n\t\t\tvar $elem = this.elements[index+1];\n\t\t\tthis.setFocus($elem);\n\n\t\t\t// If it's a text element, put the carot at the beginning\n\t\t\tif (this.isText($elem))\n\t\t\t{\n\t\t\t\tthis.setCarotPos($elem, 0)\n\t\t\t}\n\t\t}\n\t},\n\n\tsetCarotPos: function($elem, pos)\n\t{\n\t\t$elem.prop('selectionStart', pos);\n\t\t$elem.prop('selectionEnd', pos);\n\t}\n\n});\n\n\n\nvar TextElement = Garnish.Base.extend({\n\n\tparentInput: null,\n\t$input: null,\n\t$stage: null,\n\tval: null,\n\tfocussed: false,\n\tinterval: null,\n\n\tinit: function(parentInput)\n\t{\n\t\tthis.parentInput = parentInput;\n\n\t\tthis.$input = $('<input type=\"text\"/>').appendTo(this.parentInput.$container);\n\t\tthis.$input.css('margin-right', (2-TextElement.padding)+'px');\n\n\t\tthis.setWidth();\n\n\t\tthis.addListener(this.$input, 'focus', 'onFocus');\n\t\tthis.addListener(this.$input, 'blur', 'onBlur');\n\t\tthis.addListener(this.$input, 'keydown', 'onKeyDown');\n\t\tthis.addListener(this.$input, 'change', 'checkInput');\n\t},\n\n\tgetIndex: function()\n\t{\n\t\treturn this.parentInput.getElementIndex(this.$input);\n\t},\n\n\tbuildStage: function()\n\t{\n\t\tthis.$stage = $('<stage/>').appendTo(Garnish.$bod);\n\n\t\t// replicate the textarea's text styles\n\t\tthis.$stage.css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -9999,\n\t\t\tleft: -9999,\n\t\t\twordWrap: 'nowrap'\n\t\t});\n\n\t\tGarnish.copyTextStyles(this.$input, this.$stage);\n\t},\n\n\tgetTextWidth: function(val)\n\t{\n\t\tif (!this.$stage)\n\t\t{\n\t\t\tthis.buildStage();\n\t\t}\n\n\t\tif (val)\n\t\t{\n\t\t\t// Ampersand entities\n\t\t\tval = val.replace(/&/g, '&amp;');\n\n\t\t\t// < and >\n\t\t\tval = val.replace(/</g, '&lt;');\n\t\t\tval = val.replace(/>/g, '&gt;');\n\n\t\t\t// Spaces\n\t\t\tval = val.replace(/ /g, '&nbsp;');\n\t\t}\n\n\t\tthis.$stage.html(val);\n\t\tthis.stageWidth = this.$stage.width();\n\t\treturn this.stageWidth;\n\t},\n\n\tonFocus: function()\n\t{\n\t\tthis.focussed = true;\n\t\tthis.interval = setInterval($.proxy(this, 'checkInput'), Garnish.NiceText.interval);\n\t\tthis.checkInput();\n\t},\n\n\tonBlur: function()\n\t{\n\t\tthis.focussed = false;\n\t\tclearInterval(this.interval);\n\t\tthis.checkInput();\n\t},\n\n\tonKeyDown: function(ev)\n\t{\n\t\tsetTimeout($.proxy(this, 'checkInput'), 1);\n\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == 0 && this.$input.prop('selectionEnd') == 0)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the previous element\n\t\t\t\t\tthis.parentInput.focusPreviousElement(this.$input);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == this.val.length && this.$input.prop('selectionEnd') == this.val.length)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the next element\n\t\t\t\t\tthis.parentInput.focusNextElement(this.$input);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.DELETE_KEY:\n\t\t\t{\n\t\t\t\tif (this.$input.prop('selectionStart') == 0 && this.$input.prop('selectionEnd') == 0)\n\t\t\t\t{\n\t\t\t\t\t// Set focus to the previous element\n\t\t\t\t\tthis.parentInput.focusPreviousElement(this.$input);\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tgetVal: function()\n\t{\n\t\tthis.val = this.$input.val();\n\t\treturn this.val;\n\t},\n\n\tsetVal: function(val)\n\t{\n\t\tthis.$input.val(val);\n\t\tthis.checkInput();\n\t},\n\n\tcheckInput: function()\n\t{\n\t\t// Has the value changed?\n\t\tvar changed = (this.val !== this.getVal());\n\t\tif (changed)\n\t\t{\n\t\t\tthis.setWidth();\n\t\t\tthis.onChange();\n\t\t}\n\n\t\treturn changed;\n\t},\n\n\tsetWidth: function()\n\t{\n\t\t// has the width changed?\n\t\tif (this.stageWidth !== this.getTextWidth(this.val))\n\t\t{\n\t\t\t// update the textarea width\n\t\t\tvar width = this.stageWidth + TextElement.padding;\n\t\t\tthis.$input.width(width);\n\t\t}\n\t},\n\n\tonChange: $.noop\n},\n{\n\tpadding: 20\n});\n\n/**\n * Modal\n */\nGarnish.Modal = Garnish.Base.extend({\n\n\t$container: null,\n\t$shade: null,\n\n\tvisible: false,\n\n\tdragger: null,\n\n\tdesiredWidth: null,\n\tdesiredHeight: null,\n\tresizeDragger: null,\n\tresizeStartWidth: null,\n\tresizeStartHeight: null,\n\n\tinit: function(container, settings)\n\t{\n\t\t// Param mapping\n\t\tif (typeof settings == typeof undefined && $.isPlainObject(container))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = container;\n\t\t\tcontainer = null;\n\t\t}\n\n\t\tthis.setSettings(settings, Garnish.Modal.defaults);\n\n\t\t// Create the shade\n\t\tthis.$shade = $('<div class=\"'+this.settings.shadeClass+'\"/>');\n\n\t\t// If the container is already set, drop the shade below it.\n\t\tif (container)\n\t\t{\n\t\t\tthis.$shade.insertBefore(container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\t}\n\n\t\tif (container)\n\t\t{\n\t\t\tthis.setContainer(container);\n\n\t\t\tif (this.settings.autoShow)\n\t\t\t{\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}\n\n\t\tGarnish.Modal.instances.push(this);\n\t},\n\n\tsetContainer: function(container)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Is this already a modal?\n\t\tif (this.$container.data('modal'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a modal on an element');\n\t\t\tthis.$container.data('modal').destroy();\n\t\t}\n\n\t\tthis.$container.data('modal', this);\n\n\t\tif (this.settings.draggable)\n\t\t{\n\t\t\tthis.dragger = new Garnish.DragMove(this.$container, {\n\t\t\t\thandle: (this.settings.dragHandleSelector ? this.$container.find(this.settings.dragHandleSelector) : this.$container)\n\t\t\t});\n\t\t}\n\n\t\tif (this.settings.resizable)\n\t\t{\n\t\t\tvar $resizeDragHandle = $('<div class=\"resizehandle\"/>').appendTo(this.$container);\n\n\t\t\tthis.resizeDragger = new Garnish.BaseDrag($resizeDragHandle, {\n\t\t\t\tonDragStart:   $.proxy(this, '_handleResizeStart'),\n\t\t\t\tonDrag:        $.proxy(this, '_handleResize')\n\t\t\t});\n\t\t}\n\n\t\tthis.addListener(this.$container, 'click', function(ev) {\n\t\t\tev.stopPropagation();\n\t\t});\n\n\t\t// Show it if we're late to the party\n\t\tif (this.visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t},\n\n\tshow: function()\n\t{\n\t\t// Close other modals as needed\n\t\tif (this.settings.closeOtherModals && Garnish.Modal.visibleModal && Garnish.Modal.visibleModal != this)\n\t\t{\n\t\t\tGarnish.Modal.visibleModal.hide();\n\t\t}\n\n\t\tif (this.$container)\n\t\t{\n\t\t\t// Move it to the end of <body> so it gets the highest sub-z-index\n\t\t\tthis.$shade.appendTo(Garnish.$bod);\n\t\t\tthis.$container.appendTo(Garnish.$bod);\n\n\t\t\tthis.$container.show();\n\t\t\tthis.updateSizeAndPosition();\n\n\t\t\tthis.$shade.velocity('fadeIn', { duration: 50 });\n\t\t\tthis.$container.delay(50).velocity('fadeIn', {\n\t\t\t\tcomplete: $.proxy(this, 'onFadeIn')\n\t\t\t});\n\n\t\t\tif (this.settings.hideOnShadeClick)\n\t\t\t{\n\t\t\t\tthis.addListener(this.$shade, 'click', 'hide');\n\t\t\t}\n\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'updateSizeAndPosition');\n\t\t}\n\n\t\tthis.enable();\n\n\t\tif (this.settings.hideOnEsc)\n\t\t{\n\t\t\tGarnish.escManager.register(this, 'hide');\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.visible = true;\n\t\t\tGarnish.Modal.visibleModal = this;\n\n\t\t\tthis.trigger('show');\n\t\t\tthis.settings.onShow();\n\t\t}\n\t},\n\n\tquickShow: function()\n\t{\n\t\tthis.show();\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('stop');\n\t\t\tthis.$container.show().css('opacity', 1);\n\n\t\t\tthis.$shade.velocity('stop');\n\t\t\tthis.$shade.show().css('opacity', 1);\n\t\t}\n\t},\n\n\thide: function(ev)\n\t{\n\t\tthis.disable();\n\n\t\tif (ev)\n\t\t{\n\t\t\tev.stopPropagation();\n\t\t}\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('fadeOut', { duration: Garnish.FX_DURATION });\n\t\t\tthis.$shade.velocity('fadeOut', {\n\t\t\t\tduration: Garnish.FX_DURATION,\n\t\t\t\tcomplete: $.proxy(this, 'onFadeOut')\n\t\t\t});\n\n\t\t\tif (this.settings.hideOnShadeClick)\n\t\t\t{\n\t\t\t\tthis.removeListener(this.$shade, 'click');\n\t\t\t}\n\n\t\t\tthis.removeListener(Garnish.$win, 'resize');\n\t\t}\n\n\t\tthis.visible = false;\n\t\tGarnish.Modal.visibleModal = null;\n\n\t\tif (this.settings.hideOnEsc)\n\t\t{\n\t\t\tGarnish.escManager.unregister(this);\n\t\t}\n\n\t\tthis.trigger('hide');\n\t\tthis.settings.onHide();\n\t},\n\n\tquickHide: function()\n\t{\n\t\tthis.hide();\n\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.velocity('stop');\n\t\t\tthis.$container.css('opacity', 0).hide();\n\n\t\t\tthis.$shade.velocity('stop');\n\t\t\tthis.$shade.css('opacity', 0).hide();\n\t\t}\n\t},\n\n\tupdateSizeAndPosition: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$container.css({\n\t\t\t'width':      (this.desiredWidth ? Math.max(this.desiredWidth, 200) : ''),\n\t\t\t'height':     (this.desiredHeight ? Math.max(this.desiredHeight, 200) : ''),\n\t\t\t'min-width':  '',\n\t\t\t'min-height': ''\n\t\t});\n\n\t\t// Set the width first so that the height can adjust for the width\n\t\tthis.updateSizeAndPosition._windowWidth = Garnish.$win.width();\n\t\tthis.updateSizeAndPosition._width = Math.min(this.getWidth(), this.updateSizeAndPosition._windowWidth - this.settings.minGutter*2);\n\n\t\tthis.$container.css({\n\t\t\t'width':      this.updateSizeAndPosition._width,\n\t\t\t'min-width':  this.updateSizeAndPosition._width,\n\t\t\t'left':       Math.round((this.updateSizeAndPosition._windowWidth - this.updateSizeAndPosition._width) / 2)\n\t\t});\n\n\t\t// Now set the height\n\t\tthis.updateSizeAndPosition._windowHeight = Garnish.$win.height();\n\t\tthis.updateSizeAndPosition._height = Math.min(this.getHeight(), this.updateSizeAndPosition._windowHeight - this.settings.minGutter*2);\n\n\t\tthis.$container.css({\n\t\t\t'height':     this.updateSizeAndPosition._height,\n\t\t\t'min-height': this.updateSizeAndPosition._height,\n\t\t\t'top':        Math.round((this.updateSizeAndPosition._windowHeight - this.updateSizeAndPosition._height) / 2)\n\t\t});\n\t},\n\n\tonFadeIn: function()\n\t{\n\t\tthis.trigger('fadeIn');\n\t\tthis.settings.onFadeIn();\n\t},\n\n\tonFadeOut: function()\n\t{\n\t\tthis.trigger('fadeOut');\n\t\tthis.settings.onFadeOut();\n\t},\n\n\tgetHeight: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\tthrow 'Attempted to get the height of a modal whose container has not been set.';\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.show();\n\t\t}\n\n\t\tthis.getHeight._height = this.$container.outerHeight();\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.hide();\n\t\t}\n\n\t\treturn this.getHeight._height;\n\t},\n\n\tgetWidth: function()\n\t{\n\t\tif (!this.$container)\n\t\t{\n\t\t\tthrow 'Attempted to get the width of a modal whose container has not been set.';\n\t\t}\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.show();\n\t\t}\n\n\t\t// Chrome might be 1px shy here for some reason\n\t\tthis.getWidth._width = this.$container.outerWidth() + 1;\n\n\t\tif (!this.visible)\n\t\t{\n\t\t\tthis.$container.hide();\n\t\t}\n\n\t\treturn this.getWidth._width;\n\t},\n\n\t_handleResizeStart: function()\n\t{\n\t\tthis.resizeStartWidth = this.getWidth();\n\t\tthis.resizeStartHeight = this.getHeight();\n\t},\n\n\t_handleResize: function()\n\t{\n\t\tif (Garnish.ltr)\n\t\t{\n\t\t\tthis.desiredWidth = this.resizeStartWidth + (this.resizeDragger.mouseDistX * 2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.desiredWidth = this.resizeStartWidth - (this.resizeDragger.mouseDistX * 2);\n\t\t}\n\n\t\tthis.desiredHeight = this.resizeStartHeight + (this.resizeDragger.mouseDistY * 2);\n\n\t\tthis.updateSizeAndPosition();\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tif (this.$container)\n\t\t{\n\t\t\tthis.$container.removeData('modal').remove();\n\t\t}\n\n\t\tif (this.dragger)\n\t\t{\n\t\t\tthis.dragger.destroy();\n\t\t}\n\n\t\tif (this.resizeDragger)\n\t\t{\n\t\t\tthis.resizeDragger.destroy();\n\t\t}\n\n\t\tthis.base();\n\t}\n},\n{\n\trelativeElemPadding: 8,\n\tdefaults: {\n\t\tautoShow: true,\n\t\tdraggable: false,\n\t\tdragHandleSelector: null,\n\t\tresizable: false,\n\t\tminGutter: 10,\n\t\tonShow: $.noop,\n\t\tonHide: $.noop,\n\t\tonFadeIn: $.noop,\n\t\tonFadeOut: $.noop,\n\t\tcloseOtherModals: false,\n\t\thideOnEsc: true,\n\t\thideOnShadeClick: true,\n\t\tshadeClass: 'modal-shade'\n\t},\n\tinstances: [],\n\tvisibleModal: null\n});\n\n/**\n * Nice Text\n */\nGarnish.NiceText = Garnish.Base.extend({\n\n\t$input: null,\n\t$hint: null,\n\t$stage: null,\n\t$charsLeft: null,\n\tautoHeight: null,\n\tmaxLength: null,\n\tshowCharsLeft: false,\n\tshowingHint: false,\n\tval: null,\n\tinputBoxSizing: 'content-box',\n\twidth: null,\n\theight: null,\n\tminHeight: null,\n\tinitialized: false,\n\n\tinit: function(input, settings)\n\t{\n\t\tthis.$input = $(input);\n\t\tthis.settings = $.extend({}, Garnish.NiceText.defaults, settings);\n\n\t\tif (this.isVisible())\n\t\t{\n\t\t\tthis.initialize();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'initializeIfVisible');\n\t\t}\n\t},\n\n\tisVisible: function()\n\t{\n\t\treturn (this.$input.height() > 0);\n\t},\n\n\tinitialize: function()\n\t{\n\t\tif (this.initialized)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initialized = true;\n\t\tthis.removeListener(Garnish.$win, 'resize');\n\n\t\tthis.maxLength = this.$input.attr('maxlength');\n\n\t\tif (this.maxLength)\n\t\t{\n\t\t\tthis.maxLength = parseInt(this.maxLength);\n\t\t}\n\n\t\tif (this.maxLength && (this.settings.showCharsLeft || Garnish.hasAttr(this.$input, 'data-show-chars-left')))\n\t\t{\n\t\t\tthis.showCharsLeft = true;\n\n\t\t\t// Remove the maxlength attribute\n\t\t\tthis.$input.removeAttr('maxlength');\n\t\t}\n\n\t\t// Is this already a transparent text input?\n\t\tif (this.$input.data('nicetext'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a transparent text input on an element');\n\t\t\tthis.$input.data('nicetext').destroy();\n\t\t}\n\n\t\tthis.$input.data('nicetext', this);\n\n\t\tthis.getVal();\n\n\t\tthis.autoHeight = (this.settings.autoHeight && this.$input.prop('nodeName') == 'TEXTAREA');\n\n\t\tif (this.autoHeight)\n\t\t{\n\t\t\tthis.minHeight = this.getHeightForValue('');\n\t\t\tthis.updateHeight();\n\n\t\t\t// Update height when the window resizes\n\t\t\tthis.width = this.$input.width();\n\t\t\tthis.addListener(Garnish.$win, 'resize', 'updateHeightIfWidthChanged');\n\t\t}\n\n\t\tif (this.settings.hint)\n\t\t{\n\t\t\tthis.$hintContainer = $('<div class=\"texthint-container\"/>').insertBefore(this.$input);\n\t\t\tthis.$hint = $('<div class=\"texthint\">'+this.settings.hint+'</div>').appendTo(this.$hintContainer);\n\t\t\tthis.$hint.css({\n\t\t\t\ttop:  (parseInt(this.$input.css('borderTopWidth'))  + parseInt(this.$input.css('paddingTop'))),\n\t\t\t\tleft: (parseInt(this.$input.css('borderLeftWidth')) + parseInt(this.$input.css('paddingLeft')) + 1)\n\t\t\t});\n\t\t\tGarnish.copyTextStyles(this.$input, this.$hint);\n\n\t\t\tif (this.val)\n\t\t\t{\n\t\t\t\tthis.$hint.hide();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.showingHint = true;\n\t\t\t}\n\n\t\t\t// Focus the input when clicking on the hint\n\t\t\tthis.addListener(this.$hint, 'mousedown', function(ev) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tthis.$input.focus();\n\t\t\t});\n\t\t}\n\n\t\tif (this.showCharsLeft)\n\t\t{\n\t\t\tthis.$charsLeft = $('<div class=\"'+this.settings.charsLeftClass+'\"/>').insertAfter(this.$input);\n\t\t\tthis.updateCharsLeft();\n\t\t}\n\n\t\tthis.addListener(this.$input, 'textchange', 'onTextChange');\n\t},\n\n\tinitializeIfVisible: function()\n\t{\n\t\tif (this.isVisible())\n\t\t{\n\t\t\tthis.initialize();\n\t\t}\n\t},\n\n\tgetVal: function()\n\t{\n\t\tthis.val = this.$input.val();\n\t\treturn this.val;\n\t},\n\n\tshowHint: function()\n\t{\n\t\tthis.$hint.velocity('fadeIn', {\n\t\t\tcomplete: Garnish.NiceText.hintFadeDuration\n\t\t});\n\n\t\tthis.showingHint = true;\n\t},\n\n\thideHint: function()\n\t{\n\t\tthis.$hint.velocity('fadeOut', {\n\t\t\tcomplete: Garnish.NiceText.hintFadeDuration\n\t\t});\n\n\t\tthis.showingHint = false;\n\t},\n\n\tonTextChange: function()\n\t{\n\t\tthis.getVal();\n\n\t\tif (this.$hint)\n\t\t{\n\t\t\tif (this.showingHint && this.val)\n\t\t\t{\n\t\t\t\tthis.hideHint();\n\t\t\t}\n\t\t\telse if (!this.showingHint && !this.val)\n\t\t\t{\n\t\t\t\tthis.showHint();\n\t\t\t}\n\t\t}\n\n\t\tif (this.autoHeight)\n\t\t{\n\t\t\tthis.updateHeight();\n\t\t}\n\n\t\tif (this.showCharsLeft)\n\t\t{\n\t\t\tthis.updateCharsLeft();\n\t\t}\n\t},\n\n\tbuildStage: function()\n\t{\n\t\tthis.$stage = $('<stage/>').appendTo(Garnish.$bod);\n\n\t\t// replicate the textarea's text styles\n\t\tthis.$stage.css({\n\t\t\tdisplay: 'block',\n\t\t\tposition: 'absolute',\n\t\t\ttop: -9999,\n\t\t\tleft: -9999\n\t\t});\n\n\t\tthis.inputBoxSizing = this.$input.css('box-sizing');\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.$stage.css({\n\t\t\t\t'border-top':          this.$input.css('border-top'),\n\t\t\t\t'border-right':        this.$input.css('border-right'),\n\t\t\t\t'border-bottom':       this.$input.css('border-bottom'),\n\t\t\t\t'border-left':         this.$input.css('border-left'),\n\t\t\t\t'padding-top':         this.$input.css('padding-top'),\n\t\t\t\t'padding-right':       this.$input.css('padding-right'),\n\t\t\t\t'padding-bottom':      this.$input.css('padding-bottom'),\n\t\t\t\t'padding-left':        this.$input.css('padding-left'),\n\t\t\t\t'-webkit-box-sizing':  this.inputBoxSizing,\n\t\t\t\t'-moz-box-sizing':     this.inputBoxSizing,\n\t\t\t\t'box-sizing':          this.inputBoxSizing\n\t\t\t});\n\t\t}\n\n\t\tGarnish.copyTextStyles(this.$input, this.$stage);\n\t},\n\n\tgetHeightForValue: function(val)\n\t{\n\t\tif (!this.$stage)\n\t\t{\n\t\t\tthis.buildStage();\n\t\t}\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.$stage.css('width', this.$input.outerWidth());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$stage.css('width', this.$input.width());\n\t\t}\n\n\t\tif (!val)\n\t\t{\n\t\t\tval = '&nbsp;';\n\t\t\tfor (var i = 1; i < this.$input.prop('rows'); i++)\n\t\t\t{\n\t\t\t\tval += '<br/>&nbsp;';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Ampersand entities\n\t\t\tval = val.replace(/&/g, '&amp;');\n\n\t\t\t// < and >\n\t\t\tval = val.replace(/</g, '&lt;');\n\t\t\tval = val.replace(/>/g, '&gt;');\n\n\t\t\t// Spaces\n\t\t\tval = val.replace(/ /g, '&nbsp;');\n\n\t\t\t// Line breaks\n\t\t\tval = val.replace(/[\\n\\r]$/g, '');\n\t\t\tval = val.replace(/[\\n\\r]/g, '<br/>');\n\t\t\tval += '<br/>&nbsp;';\n\t\t}\n\n\t\tthis.$stage.html(val);\n\n\t\tif (this.inputBoxSizing == 'border-box')\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.$stage.outerHeight();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.$stage.height();\n\t\t}\n\n\t\tif (this.minHeight && this.getHeightForValue._height < this.minHeight)\n\t\t{\n\t\t\tthis.getHeightForValue._height = this.minHeight;\n\t\t}\n\n\t\treturn this.getHeightForValue._height;\n\t},\n\n\tupdateHeight: function()\n\t{\n\t\t// has the height changed?\n\t\tif (this.height !== (this.height = this.getHeightForValue(this.val)))\n\t\t{\n\t\t\tthis.$input.css('min-height', this.height);\n\n\t\t\tif (this.initialized)\n\t\t\t{\n\t\t\t\tthis.onHeightChange();\n\t\t\t}\n\t\t}\n\t},\n\n\tupdateHeightIfWidthChanged: function()\n\t{\n\t\tif (this.width !== (this.width = this.$input.width()) && this.width)\n\t\t{\n\t\t\tthis.updateHeight();\n\t\t}\n\t},\n\n\tonHeightChange: function()\n\t{\n\t\tthis.settings.onHeightChange();\n\t},\n\n\tupdateCharsLeft: function()\n\t{\n\t\tthis.updateCharsLeft._charsLeft = this.maxLength - this.val.length;\n\t\tthis.$charsLeft.text(this.updateCharsLeft._charsLeft);\n\n\t\tif (this.updateCharsLeft._charsLeft >= 0)\n\t\t{\n\t\t\tthis.$charsLeft.removeClass(this.settings.negativeCharsLeftClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.$charsLeft.addClass(this.settings.negativeCharsLeftClass);\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$input.removeData('nicetext');\n\n\t\tif (this.$hint)\n\t\t{\n\t\t\tthis.$hint.remove();\n\t\t}\n\n\t\tif (this.$stage)\n\t\t{\n\t\t\tthis.$stage.remove();\n\t\t}\n\n\t\tthis.base();\n\t}\n},\n{\n\tinterval: 100,\n\thintFadeDuration: 50,\n\tdefaults: {\n\t\tautoHeight:             true,\n\t\tshowCharsLeft:          false,\n\t\tcharsLeftClass:         'chars-left',\n\t\tnegativeCharsLeftClass: 'negative-chars-left',\n\t\tonHeightChange:         $.noop\n\t}\n});\n\n/**\n * Pill\n */\nGarnish.Pill = Garnish.Base.extend({\n\n\t$outerContainer: null,\n\t$innerContainer: null,\n\t$btns: null,\n\t$selectedBtn: null,\n\t$input: null,\n\n\tinit: function(outerContainer)\n\t{\n\t\tthis.$outerContainer = $(outerContainer);\n\n\t\t// Is this already a pill?\n\t\tif (this.$outerContainer.data('pill'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a pill on an element');\n\t\t\tthis.$outerContainer.data('pill').destroy();\n\t\t}\n\n\t\tthis.$outerContainer.data('pill', this);\n\n\t\tthis.$innerContainer = this.$outerContainer.find('.btngroup:first');\n\t\tthis.$btns = this.$innerContainer.find('.btn');\n\t\tthis.$selectedBtn = this.$btns.filter('.active:first');\n\t\tthis.$input = this.$outerContainer.find('input:first');\n\n\t\tGarnish.preventOutlineOnMouseFocus(this.$innerContainer);\n\t\tthis.addListener(this.$btns, 'mousedown', 'onMouseDown');\n\t\tthis.addListener(this.$innerContainer, 'keydown', 'onKeyDown');\n\t},\n\n\tselect: function(btn)\n\t{\n\t\tthis.$selectedBtn.removeClass('active');\n\t\tvar $btn = $(btn);\n\t\t$btn.addClass('active');\n\t\tthis.$input.val($btn.attr('data-value'));\n\t\tthis.$selectedBtn = $btn;\n\t},\n\n\tselectNext: function()\n\t{\n\t\tif (!this.$selectedBtn.length)\n\t\t{\n\t\t\tthis.select(this.$btns[this.$btns.length-1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar nextIndex = this._getSelectedBtnIndex() + 1;\n\n\t\t\tif (typeof this.$btns[nextIndex] != 'undefined')\n\t\t\t{\n\t\t\t\tthis.select(this.$btns[nextIndex]);\n\t\t\t}\n\t\t}\n\t},\n\n\tselectPrev: function()\n\t{\n\t\tif (!this.$selectedBtn.length)\n\t\t{\n\t\t\tthis.select(this.$btns[0]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar prevIndex = this._getSelectedBtnIndex() - 1;\n\n\t\t\tif (typeof this.$btns[prevIndex] != 'undefined')\n\t\t\t{\n\t\t\t\tthis.select(this.$btns[prevIndex]);\n\t\t\t}\n\t\t}\n\t},\n\n\tonMouseDown: function(ev)\n\t{\n\t\tthis.select(ev.currentTarget);\n\t},\n\n\t_getSelectedBtnIndex: function()\n\t{\n\t\tif (typeof this.$selectedBtn[0] != 'undefined')\n\t\t{\n\t\t\treturn $.inArray(this.$selectedBtn[0], this.$btns);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\tonKeyDown: function(ev)\n\t{\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.selectNext();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.selectPrev();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tif (Garnish.ltr)\n\t\t\t\t{\n\t\t\t\t\tthis.selectPrev();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.selectNext();\n\t\t\t\t}\n\n\t\t\t\tev.preventDefault();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$outerContainer.removeData('pill');\n\t\tthis.base();\n\t}\n});\n\n/**\n * Select\n */\nGarnish.Select = Garnish.Base.extend({\n\n\t// Properties\n\t// =========================================================================\n\n\t$container: null,\n\t$items: null,\n\t$selectedItems: null,\n\n\tmousedownTarget: null,\n\tmouseUpTimeout: null,\n\tcallbackFrame: null,\n\n\t$focusable: null,\n\t$first: null,\n\tfirst: null,\n\t$last: null,\n\tlast: null,\n\n\t// Public methods\n\t// =========================================================================\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(container, items, settings)\n\t{\n\t\tthis.$container = $(container);\n\n\t\t// Param mapping\n\t\tif (typeof items == typeof undefined && $.isPlainObject(container))\n\t\t{\n\t\t\t// (settings)\n\t\t\tsettings = container;\n\t\t\tcontainer = null;\n\t\t\titems = null;\n\t\t}\n\t\telse if (typeof settings == typeof undefined && $.isPlainObject(items))\n\t\t{\n\t\t\t// (container, settings)\n\t\t\tsettings = items;\n\t\t\titems = null;\n\t\t}\n\n\t\t// Is this already a select?\n\t\tif (this.$container.data('select'))\n\t\t{\n\t\t\tGarnish.log('Double-instantiating a select on an element');\n\t\t\tthis.$container.data('select').destroy();\n\t\t}\n\n\t\tthis.$container.data('select', this);\n\n\t\tthis.setSettings(settings, Garnish.Select.defaults);\n\n\t\tthis.$items = $();\n\t\tthis.$selectedItems = $();\n\n\t\tthis.addItems(items);\n\n\t\t// --------------------------------------------------------------------\n\n\t\tif (this.settings.allowEmpty && !this.settings.checkboxMode)\n\t\t{\n\t\t\tthis.addListener(this.$container, 'click', function(ev)\n\t\t\t{\n\t\t\t\tif (this.ignoreClick)\n\t\t\t\t{\n\t\t\t\t\tthis.ignoreClick = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Deselect all items on container click\n\t\t\t\t\tthis.deselectAll(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * Get Item Index\n\t */\n\tgetItemIndex: function($item)\n\t{\n\t\treturn this.$items.index($item[0]);\n\t},\n\n\t/**\n\t * Is Selected?\n\t */\n\tisSelected: function(item)\n\t{\n\t\tif (Garnish.isJquery(item))\n\t\t{\n\t\t\tif (!item[0])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\titem = item[0];\n\t\t}\n\n\t\treturn ($.inArray(item, this.$selectedItems) != -1);\n\t},\n\n\t/**\n\t * Select Item\n\t */\n\tselectItem: function($item, focus, preventScroll)\n\t{\n\t\tif (!this.settings.multi)\n\t\t{\n\t\t\tthis.deselectAll();\n\t\t}\n\n\t\tthis.$first = this.$last = $item;\n\t\tthis.first = this.last = this.getItemIndex($item);\n\n\t\tif (focus)\n\t\t{\n\t\t\tthis.setFocusableItem($item);\n\t\t\tthis.focusItem($item, preventScroll);\n\t\t}\n\n\t\tthis._selectItems($item);\n\t},\n\n\tselectAll: function()\n\t{\n\t\tif (!this.settings.multi || !this.$items.length)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.first = 0;\n\t\tthis.last = this.$items.length-1;\n\t\tthis.$first = this.$items.eq(this.first);\n\t\tthis.$last = this.$items.eq(this.last);\n\n\t\tthis._selectItems(this.$items);\n\t},\n\n\t/**\n\t * Select Range\n\t */\n\tselectRange: function($item, preventScroll)\n\t{\n\t\tif (!this.settings.multi)\n\t\t{\n\t\t\treturn this.selectItem($item, true);\n\t\t}\n\n\t\tthis.deselectAll();\n\n\t\tthis.$last = $item;\n\t\tthis.last = this.getItemIndex($item);\n\n\t\tthis.setFocusableItem($item);\n\t\tthis.focusItem($item, preventScroll);\n\n\t\t// prepare params for $.slice()\n\t\tif (this.first < this.last)\n\t\t{\n\t\t\tvar sliceFrom = this.first,\n\t\t\t\tsliceTo = this.last + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar sliceFrom = this.last,\n\t\t\t\tsliceTo = this.first + 1;\n\t\t}\n\n\t\tthis._selectItems(this.$items.slice(sliceFrom, sliceTo));\n\t},\n\n\t/**\n\t * Deselect Item\n\t */\n\tdeselectItem: function($item)\n\t{\n\t\tvar index = this.getItemIndex($item);\n\t\tif (this.first === index) this.$first = this.first = null;\n\t\tif (this.last === index) this.$last = this.last = null;\n\n\t\tthis._deselectItems($item);\n\t},\n\n\t/**\n\t * Deselect All\n\t */\n\tdeselectAll: function(clearFirst)\n\t{\n\t\tif (clearFirst)\n\t\t{\n\t\t\tthis.$first = this.first = this.$last = this.last = null;\n\t\t}\n\n\t\tthis._deselectItems(this.$items);\n\t},\n\n\t/**\n\t * Deselect Others\n\t */\n\tdeselectOthers: function($item)\n\t{\n\t\tthis.deselectAll();\n\t\tthis.selectItem($item, true);\n\t},\n\n\t/**\n\t * Toggle Item\n\t */\n\ttoggleItem: function($item, preventScroll)\n\t{\n\t\tif (!this.isSelected($item))\n\t\t{\n\t\t\tthis.selectItem($item, true, preventScroll);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this._canDeselect($item))\n\t\t\t{\n\t\t\t\tthis.deselectItem($item, true);\n\t\t\t}\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\tclearMouseUpTimeout: function()\n\t{\n\t\tclearTimeout(this.mouseUpTimeout);\n\t},\n\n\tgetFirstItem: function()\n\t{\n\t\tif (this.$items.length)\n\t\t{\n\t\t\treturn this.$items.first();\n\t\t}\n\t},\n\n\tgetLastItem: function()\n\t{\n\t\tif (this.$items.length)\n\t\t{\n\t\t\treturn this.$items.last();\n\t\t}\n\t},\n\n\tisPreviousItem: function(index)\n\t{\n\t\treturn (index > 0);\n\t},\n\n\tisNextItem: function(index)\n\t{\n\t\treturn (index < this.$items.length-1);\n\t},\n\n\tgetPreviousItem: function(index)\n\t{\n\t\tif (this.isPreviousItem(index))\n\t\t{\n\t\t\treturn this.$items.eq(index-1);\n\t\t}\n\t},\n\n\tgetNextItem: function(index)\n\t{\n\t\tif (this.isNextItem(index))\n\t\t{\n\t\t\treturn this.$items.eq(index+1);\n\t\t}\n\t},\n\n\tgetItemToTheLeft: function(index)\n\t{\n\t\tvar func = (Garnish.ltr ? 'Previous' : 'Next');\n\n\t\tif (this['is'+func+'Item'](index))\n\t\t{\n\t\t\tif (this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this['get'+func+'Item'](index);\n\t\t\t}\n\t\t\tif (!this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.X_AXIS, '<');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemToTheRight: function(index)\n\t{\n\t\tvar func = (Garnish.ltr ? 'Next' : 'Previous');\n\n\t\tif (this['is'+func+'Item'](index))\n\t\t{\n\t\t\tif (this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this['get'+func+'Item'](index);\n\t\t\t}\n\t\t\telse if (!this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.X_AXIS, '>');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemAbove: function(index)\n\t{\n\t\tif (this.isPreviousItem(index))\n\t\t{\n\t\t\tif (this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getPreviousItem(index);\n\t\t\t}\n\t\t\telse if (!this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.Y_AXIS, '<');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetItemBelow: function(index)\n\t{\n\t\tif (this.isNextItem(index))\n\t\t{\n\t\t\tif (this.settings.vertical)\n\t\t\t{\n\t\t\t\treturn this.getNextItem(index);\n\t\t\t}\n\t\t\telse if (!this.settings.horizontal)\n\t\t\t{\n\t\t\t\treturn this.getClosestItem(index, Garnish.Y_AXIS, '>');\n\t\t\t}\n\t\t}\n\t},\n\n\tgetClosestItem: function(index, axis, dir)\n\t{\n\t\tvar axisProps = Garnish.Select.closestItemAxisProps[axis],\n\t\t\tdirProps = Garnish.Select.closestItemDirectionProps[dir];\n\n\t\tvar $thisItem = this.$items.eq(index),\n\t\t\tthisOffset = $thisItem.offset(),\n\t\t\tthisMidpoint = thisOffset[axisProps.midpointOffset] + Math.round($thisItem[axisProps.midpointSizeFunc]()/2),\n\t\t\totherRowPos = null,\n\t\t\tsmallestMidpointDiff = null,\n\t\t\t$closestItem = null;\n\n\t\t// Go the other way if this is the X axis and a RTL page\n\t\tif (Garnish.rtl && axis == Garnish.X_AXIS)\n\t\t{\n\t\t\tvar step = dirProps.step * -1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar step = dirProps.step;\n\t\t}\n\n\t\tfor (var i = index + step; (typeof this.$items[i] != 'undefined'); i += step)\n\t\t{\n\t\t\tvar $otherItem = this.$items.eq(i),\n\t\t\t\totherOffset = $otherItem.offset();\n\n\t\t\t// Are we on the next row yet?\n\t\t\tif (dirProps.isNextRow(otherOffset[axisProps.rowOffset], thisOffset[axisProps.rowOffset]))\n\t\t\t{\n\t\t\t\t// Is this the first time we've seen this row?\n\t\t\t\tif (otherRowPos === null)\n\t\t\t\t{\n\t\t\t\t\totherRowPos = otherOffset[axisProps.rowOffset];\n\t\t\t\t}\n\t\t\t\t// Have we gone too far?\n\t\t\t\telse if (otherOffset[axisProps.rowOffset] != otherRowPos)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar otherMidpoint = otherOffset[axisProps.midpointOffset] + Math.round($otherItem[axisProps.midpointSizeFunc]()/2),\n\t\t\t\t\tmidpointDiff = Math.abs(thisMidpoint - otherMidpoint);\n\n\t\t\t\t// Are we getting warmer?\n\t\t\t\tif (smallestMidpointDiff === null || midpointDiff < smallestMidpointDiff)\n\t\t\t\t{\n\t\t\t\t\tsmallestMidpointDiff = midpointDiff;\n\t\t\t\t\t$closestItem = $otherItem;\n\t\t\t\t}\n\t\t\t\t// Getting colder?\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Getting colder?\n\t\t\telse if (dirProps.isWrongDirection(otherOffset[axisProps.rowOffset], thisOffset[axisProps.rowOffset]))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $closestItem;\n\t},\n\n\tgetFurthestItemToTheLeft: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'ToTheLeft');\n\t},\n\n\tgetFurthestItemToTheRight: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'ToTheRight');\n\t},\n\n\tgetFurthestItemAbove: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'Above');\n\t},\n\n\tgetFurthestItemBelow: function(index)\n\t{\n\t\treturn this.getFurthestItem(index, 'Below');\n\t},\n\n\tgetFurthestItem: function(index, dir)\n\t{\n\t\tvar $item, $testItem;\n\n\t\twhile ($testItem = this['getItem'+dir](index))\n\t\t{\n\t\t\t$item = $testItem;\n\t\t\tindex = this.getItemIndex($item);\n\t\t}\n\n\t\treturn $item;\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * totalSelected getter\n\t */\n\tget totalSelected()\n\t{\n\t\treturn this.getTotalSelected();\n\t},\n\n\t/**\n\t * Get Total Selected\n\t */\n\tgetTotalSelected: function()\n\t{\n\t\treturn this.$selectedItems.length;\n\t},\n\n\t/**\n\t * Add Items\n\t */\n\taddItems: function(items)\n\t{\n\t\tvar $items = $(items);\n\n\t\tfor (var i = 0; i < $items.length; i++)\n\t\t{\n\t\t\tvar item = $items[i];\n\n\t\t\t// Make sure this element doesn't belong to another selector\n\t\t\tif ($.data(item, 'select'))\n\t\t\t{\n\t\t\t\tGarnish.log('Element was added to more than one selector');\n\t\t\t\t$.data(item, 'select').removeItems(item);\n\t\t\t}\n\n\t\t\t// Add the item\n\t\t\t$.data(item, 'select', this);\n\n\t\t\t// Get the handle\n\t\t\tif (this.settings.handle)\n\t\t\t{\n\t\t\t\tif (typeof this.settings.handle == 'object')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(this.settings.handle);\n\t\t\t\t}\n\t\t\t\telse if (typeof this.settings.handle == 'string')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(item).find(this.settings.handle);\n\t\t\t\t}\n\t\t\t\telse if (typeof this.settings.handle == 'function')\n\t\t\t\t{\n\t\t\t\t\tvar $handle = $(this.settings.handle(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar $handle = $(item);\n\t\t\t}\n\n\t\t\t$.data(item, 'select-handle', $handle);\n\t\t\t$handle.data('select-item', item);\n\n\t\t\tthis.addListener($handle, 'mousedown', 'onMouseDown');\n\t\t\tthis.addListener($handle, 'mouseup', 'onMouseUp');\n\t\t\tthis.addListener($handle, 'click', function(ev)\n\t\t\t{\n\t\t\t\tthis.ignoreClick = true;\n\t\t\t});\n\n\t\t\tthis.addListener(item, 'keydown', 'onKeyDown');\n\t\t}\n\n\t\tthis.$items = this.$items.add($items);\n\t\tthis.updateIndexes();\n\t},\n\n\t/**\n\t * Remove Items\n\t */\n\tremoveItems: function(items)\n\t{\n\t\titems = $.makeArray(items);\n\n\t\tvar itemsChanged = false,\n\t\t\tselectionChanged = false;\n\n\t\tfor (var i = 0; i < items.length; i++)\n\t\t{\n\t\t\tvar item = items[i];\n\n\t\t\t// Make sure we actually know about this item\n\t\t\tvar index = $.inArray(item, this.$items);\n\t\t\tif (index != -1)\n\t\t\t{\n\t\t\t\tthis._deinitItem(item);\n\t\t\t\tthis.$items.splice(index, 1);\n\t\t\t\titemsChanged = true;\n\n\t\t\t\tvar selectedIndex = $.inArray(item, this.$selectedItems);\n\t\t\t\tif (selectedIndex != -1)\n\t\t\t\t{\n\t\t\t\t\tthis.$selectedItems.splice(selectedIndex, 1);\n\t\t\t\t\tselectionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (itemsChanged)\n\t\t{\n\t\t\tthis.updateIndexes();\n\n\t\t\tif (selectionChanged)\n\t\t\t{\n\t\t\t\t$(items).removeClass(this.settings.selectedClass);\n\t\t\t\tthis.onSelectionChange();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Remove All Items\n\t */\n\tremoveAllItems: function()\n\t{\n\t\tfor (var i = 0; i < this.$items.length; i++)\n\t\t{\n\t\t\tthis._deinitItem(this.$items[i]);\n\t\t}\n\n\t\tthis.$items = $();\n\t\tthis.$selectedItems = $();\n\t\tthis.updateIndexes();\n\t},\n\n\t/**\n\t * Update First/Last indexes\n\t */\n\tupdateIndexes: function()\n\t{\n\t\tif (this.first !== null)\n\t\t{\n\t\t\tthis.first = this.getItemIndex(this.$first);\n\t\t\tthis.setFocusableItem(this.$first);\n\t\t}\n\t\telse if (this.$items.length)\n\t\t{\n\t\t\tthis.setFocusableItem($(this.$items[0]));\n\t\t}\n\n\t\tif (this.last !== null)\n\t\t{\n\t\t\tthis.last = this.getItemIndex(this.$last);\n\t\t}\n\t},\n\n\t/**\n\t * Reset Item Order\n\t */\n\t resetItemOrder: function()\n\t {\n\t \tthis.$items = $().add(this.$items);\n\t \tthis.$selectedItems = $().add(this.$selectedItems);\n\t \tthis.updateIndexes();\n\t },\n\n\t/**\n\t * Sets the focusable item.\n\t *\n\t * We only want to have one focusable item per selection list, so that the user\n\t * doesn't have to tab through a million items.\n\t *\n\t * @param object $item\n\t */\n\tsetFocusableItem: function($item)\n\t{\n\t\tif (this.$focusable)\n\t\t{\n\t\t\tthis.$focusable.removeAttr('tabindex');\n\t\t}\n\n\t\tthis.$focusable = $item.attr('tabindex', '0');\n\t},\n\n\t/**\n\t * Sets the focus on an item.\n\t */\n\tfocusItem: function($item, preventScroll)\n\t{\n\t\tif (preventScroll)\n\t\t{\n\t\t\tvar scrollLeft = Garnish.$doc.scrollLeft(),\n\t\t\t\tscrollTop = Garnish.$doc.scrollTop();\n\t\t\t$item.focus();\n\t\t\twindow.scrollTo(scrollLeft, scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$item.focus();\n\t\t}\n\t},\n\n\t// --------------------------------------------------------------------\n\n\t/**\n\t * Get Selected Items\n\t */\n\tgetSelectedItems: function()\n\t{\n\t\treturn this.$selectedItems;\n\t},\n\n\t/**\n\t * Destroy\n\t */\n\tdestroy: function()\n\t{\n\t\tthis.$container.removeData('select');\n\t\tthis.removeAllItems();\n\t\tthis.base();\n\t},\n\n\t// Events\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * On Mouse Down\n\t */\n\tonMouseDown: function(ev)\n\t{\n\t\t// ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Enforce the filter\n\t\tif (this.settings.filter && !$(ev.target).is(this.settings.filter))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mousedownTarget = ev.currentTarget;\n\n\t\tvar $item = $($.data(ev.currentTarget, 'select-item'));\n\n\t\tif (this.first !== null && ev.shiftKey)\n\t\t{\n\t\t\t// Shift key is consistent for both selection modes\n\t\t\tthis.selectRange($item, true);\n\t\t}\n\t\telse if (this._actAsCheckbox(ev))\n\t\t{\n\t\t\tthis.toggleItem($item, true);\n\t\t}\n\t},\n\n\t/**\n\t * On Mouse Up\n\t */\n\tonMouseUp: function(ev)\n\t{\n\t\t// ignore right clicks\n\t\tif (ev.which != Garnish.PRIMARY_CLICK)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Enfore the filter\n\t\tif (this.settings.filter && !$(ev.target).is(this.settings.filter))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar $item = $($.data(ev.currentTarget, 'select-item'));\n\n\t\t// was this a click?\n\t\tif (\n\t\t\t!this._actAsCheckbox(ev) &&\n\t\t\t!ev.shiftKey &&\n\t\t\tev.currentTarget == this.mousedownTarget\n\t\t)\n\t\t{\n\t\t\t// If this is already selected, wait a moment to see if this is a double click before making any rash decisions\n\t\t\tif (this.isSelected($item))\n\t\t\t{\n\t\t\t\tthis.clearMouseUpTimeout();\n\n\t\t\t\tthis.mouseUpTimeout = setTimeout($.proxy(function() {\n\t\t\t\t\tthis.deselectOthers($item);\n\t\t\t\t}, this), 300);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.deselectAll();\n\t\t\t\tthis.selectItem($item, true, true);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * On Key Down\n\t */\n\tonKeyDown: function(ev)\n\t{\n\t\t// Ignore if the focus isn't on one of our items\n\t\tif (ev.target != ev.currentTarget)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctrlKey = Garnish.isCtrlKeyPressed(ev);\n\n\t\tif (!this.settings.checkboxMode || !this.$focusable.length)\n\t\t{\n\t\t\tvar anchor = ev.shiftKey ? this.last : this.first;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar anchor = $.inArray(this.$focusable[0], this.$items);\n\n\t\t\tif (anchor == -1)\n\t\t\t{\n\t\t\t\tanchor = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Ok, what are we doing here?\n\t\tswitch (ev.keyCode)\n\t\t{\n\t\t\tcase Garnish.LEFT_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the last item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (Garnish.ltr)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemToTheLeft(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemToTheLeft(anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.RIGHT_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the first item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (Garnish.ltr)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemToTheRight(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemToTheRight(anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.UP_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the last item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (this.$focusable)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.$focusable.prev();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.$focusable || !$item.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemAbove(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemAbove(anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$item)\n\t\t\t\t\t{\n\t\t\t\t\t\t$item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.DOWN_KEY:\n\t\t\t{\n\t\t\t\tev.preventDefault();\n\n\t\t\t\t// Select the first item if none are selected\n\t\t\t\tif (this.first === null)\n\t\t\t\t{\n\t\t\t\t\tif (this.$focusable)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.$focusable.next();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.$focusable || !$item.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFirstItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (ctrlKey)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getFurthestItemBelow(anchor);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar $item = this.getItemBelow(anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$item)\n\t\t\t\t\t{\n\t\t\t\t\t\t$item = this.getLastItem();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.SPACE_KEY:\n\t\t\t{\n\t\t\t\tif (!ctrlKey)\n\t\t\t\t{\n\t\t\t\t\tev.preventDefault();\n\n\t\t\t\t\tif (this.isSelected(this.$focusable))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this._canDeselect(this.$focusable))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.deselectItem(this.$focusable);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.selectItem(this.$focusable, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase Garnish.A_KEY:\n\t\t\t{\n\t\t\t\tif (ctrlKey)\n\t\t\t\t{\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tthis.selectAll();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Is there an item queued up for focus/selection?\n\t\tif ($item && $item.length)\n\t\t{\n\t\t\tif (!this.settings.checkboxMode)\n\t\t\t{\n\t\t\t\t// select it\n\t\t\t\tif (this.first !== null && ev.shiftKey)\n\t\t\t\t{\n\t\t\t\t\tthis.selectRange($item);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.deselectAll();\n\t\t\t\t\tthis.selectItem($item, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// just set the new item to be focussable\n\t\t\t\tthis.setFocusableItem($item);\n\t\t\t\t$item.focus();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Set Callback Timeout\n\t */\n\tonSelectionChange: function()\n\t{\n\t\tif (this.callbackFrame)\n\t\t{\n\t\t\tGarnish.cancelAnimationFrame(this.callbackFrame);\n\t\t\tthis.callbackFrame = null;\n\t\t}\n\n\t\tthis.callbackFrame = Garnish.requestAnimationFrame($.proxy(function()\n\t\t{\n\t\t\tthis.callbackFrame = null;\n\t\t\tthis.trigger('selectionChange');\n\t\t\tthis.settings.onSelectionChange();\n\t\t}, this));\n\t},\n\n\t// Private methods\n\t// =========================================================================\n\n\t_actAsCheckbox: function(ev)\n\t{\n\t\tif (Garnish.isCtrlKeyPressed(ev))\n\t\t{\n\t\t\treturn !this.settings.checkboxMode;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.settings.checkboxMode;\n\t\t}\n\t},\n\n\t_canDeselect: function($items)\n\t{\n\t\treturn (this.settings.allowEmpty || this.totalSelected > $items.length);\n\t},\n\n\t_selectItems: function($items)\n\t{\n\t\t$items.addClass(this.settings.selectedClass);\n\t\tthis.$selectedItems = this.$selectedItems.add($items);\n\t\tthis.onSelectionChange();\n\t},\n\n\t_deselectItems: function($items)\n\t{\n\t\t$items.removeClass(this.settings.selectedClass);\n\t\tthis.$selectedItems = this.$selectedItems.not($items);\n\t\tthis.onSelectionChange();\n\t},\n\n\t/**\n\t * Deinitialize an item.\n\t */\n\t_deinitItem: function(item)\n\t{\n\t\tvar $handle = $.data(item, 'select-handle');\n\n\t\tif ($handle)\n\t\t{\n\t\t\t$handle.removeData('select-item');\n\t\t\tthis.removeAllListeners($handle);\n\t\t}\n\n\t\t$.removeData(item, 'select');\n\t\t$.removeData(item, 'select-handle');\n\t}\n},\n\n// Static Properties\n// =============================================================================\n\n{\n\tdefaults: {\n\t\tselectedClass: 'sel',\n\t\tmulti: false,\n\t\tallowEmpty: true,\n\t\tvertical: false,\n\t\thorizontal: false,\n\t\thandle: null,\n\t\tfilter: null,\n\t\tcheckboxMode: false,\n\t\tonSelectionChange: $.noop\n\t},\n\n\tclosestItemAxisProps: {\n\t\tx: {\n\t\t\tmidpointOffset:   'top',\n\t\t\tmidpointSizeFunc: 'outerHeight',\n\t\t\trowOffset:        'left'\n\t\t},\n\t\ty: {\n\t\t\tmidpointOffset:   'left',\n\t\t\tmidpointSizeFunc: 'outerWidth',\n\t\t\trowOffset:        'top'\n\t\t}\n\t},\n\n\tclosestItemDirectionProps: {\n\t\t'<': {\n\t\t\tstep: -1,\n\t\t\tisNextRow: function(a, b) { return (a < b); },\n\t\t\tisWrongDirection: function(a, b) { return (a > b); }\n\t\t},\n\t\t'>': {\n\t\t\tstep: 1,\n\t\t\tisNextRow: function(a, b) { return (a > b); },\n\t\t\tisWrongDirection: function(a, b) { return (a < b); }\n\t\t}\n\t}\n});\n\n/**\n * Select Menu\n */\nGarnish.SelectMenu = Garnish.Menu.extend({\n\n\t/**\n\t * Constructor\n\t */\n\tinit: function(btn, options, settings, callback)\n\t{\n\t\t// argument mapping\n\t\tif (typeof settings == 'function')\n\t\t{\n\t\t\t// (btn, options, callback)\n\t\t\tcallback = settings;\n\t\t\tsettings = {};\n\t\t}\n\n\t\tsettings = $.extend({}, Garnish.SelectMenu.defaults, settings);\n\n\t\tthis.base(btn, options, settings, callback);\n\n\t\tthis.selected = -1;\n\t},\n\n\t/**\n\t * Build\n\t */\n\tbuild: function()\n\t{\n\t\tthis.base();\n\n\t\tif (this.selected != -1)\n\t\t{\n\t\t\tthis._addSelectedOptionClass(this.selected);\n\t\t}\n\t},\n\n\t/**\n\t * Select\n\t */\n\tselect: function(option)\n\t{\n\t\t// ignore if it's already selected\n\t\tif (option == this.selected) return;\n\n\t\tif (this.dom.ul)\n\t\t{\n\t\t\tif (this.selected != -1)\n\t\t\t{\n\t\t\t\tthis.dom.options[this.selected].className = '';\n\t\t\t}\n\n\t\t\tthis._addSelectedOptionClass(option);\n\t\t}\n\n\t\tthis.selected = option;\n\n\t\t// set the button text to the selected option\n\t\tthis.setBtnText($(this.options[option].label).text());\n\n\t\tthis.base(option);\n\t},\n\n\t/**\n\t * Add Selected Option Class\n\t */\n\t_addSelectedOptionClass: function(option)\n\t{\n\t\tthis.dom.options[option].className = 'sel';\n\t},\n\n\t/**\n\t * Set Button Text\n\t */\n\tsetBtnText: function(text)\n\t{\n\t\tthis.dom.$btnLabel.text(text);\n\t}\n\n},\n{\n\tdefaults: {\n\t\tulClass: 'menu select'\n\t}\n});\n\n})(jQuery);\n"]}