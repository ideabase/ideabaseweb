{"version":3,"sources":["CraftEntryLinks.js"],"names":["plugin","$","extend","Craft","Redactor","PluginBase","start","showModal","arguments","this","app","selection","save","modalProperty","refHandle","createElementSelectorModal","elementType","storageKey","sources","criteria","siteId","elementSiteId","onSelect","proxy","elements","length","restore","element","getText","data","url","id","text","label","api","closeOtherModals","show","setLinkOptions","linkOptions","button","toolbar","getButton","items","getDropdown","newList","counter","option","title","optionTitle","args","setDropdown","add"],"mappings":"AAAA,IAAIA,OAASC,EAAEC,UAAWC,MAAMC,SAASC,YAGrCC,MAAO,aAGPC,UAAW,SAAUC,WACjBC,KAAKC,IAAIC,UAAUC,OAEnB,IAAIC,EAAgB,kBAAkBL,UAAUM,UAChD,QAAmC,IAAxBL,KAAKI,GAAgC,CAC5C,IAAIC,EAAYN,UAAUM,UAC1BL,KAAKI,GAAiBV,MAAMY,2BAA2BP,UAAUQ,aAC7DC,WAAY,wBAA0BT,UAAUQ,YAChDE,QAASV,UAAUU,QACnBC,SAAUlB,EAAEC,QAAQkB,OAAQX,KAAKY,eAAgBb,UAAUW,UAC3DG,SAAUrB,EAAEsB,MAAM,SAASC,GACvB,GAAIA,EAASC,OAAQ,CACjBhB,KAAKC,IAAIC,UAAUe,UACnB,IAAIC,EAAUH,EAAS,GACnBb,EAAYF,KAAKC,IAAIC,UAAUiB,UAC/BC,GACIC,IAAKH,EAAQG,IAAM,IAAMhB,EAAY,IAAMa,EAAQI,GACnDC,KAAyB,EAAnBrB,EAAUc,OAAad,EAAYgB,EAAQM,OAEzDxB,KAAKC,IAAIwB,IAAI,qBAAsBL,KAExCpB,MACH0B,kBAAkB,SAItB1B,KAAKI,GAAeuB,QAI5BC,eAAgB,SAAUC,GACtB,IAAIC,EAAS9B,KAAKC,IAAI8B,QAAQC,UAAU,QAEpCC,EADWH,EAAOI,cACDD,MACjBE,KACAC,EAAU,EAEd,IAAK,IAAIC,KAAUR,EACfQ,EAASR,EAAYQ,GACrBF,EAAQ,YAAYC,IAChBE,MAAOD,EAAOE,YACdd,IAAK,mCACLe,MACIjC,YAAa8B,EAAO9B,YACpBF,UAAWgC,EAAOhC,UAClBI,QAAS4B,EAAO5B,QAChBC,SAAU2B,EAAO3B,WAK7BoB,EAAOW,YAAYjD,EAAEC,OAAO0C,EAASF,OAM1CtC,SADI+C,IAAI,SAAU,kBAAmBnD","file":"CraftEntryLinks.min.js","sourcesContent":["var plugin = $.extend({}, Craft.Redactor.PluginBase, {\n\n    // Do nothing on start.\n    start: function () {\n\n    },\n    showModal: function (arguments) {\n        this.app.selection.save();\n\n        var modalProperty = 'selectionModal_'+arguments.refHandle;\n        if (typeof this[modalProperty] === 'undefined') {\n            var refHandle = arguments.refHandle;\n            this[modalProperty] = Craft.createElementSelectorModal(arguments.elementType, {\n                storageKey: 'RedactorInput.LinkTo.' + arguments.elementType,\n                sources: arguments.sources,\n                criteria: $.extend({siteId: this.elementSiteId}, arguments.criteria),\n                onSelect: $.proxy(function(elements) {\n                    if (elements.length) {\n                        this.app.selection.restore();\n                        var element = elements[0],\n                            selection = this.app.selection.getText(),\n                            data = {\n                                url: element.url + '#' + refHandle + ':' + element.id,\n                                text: selection.length > 0 ? selection : element.label\n                            };\n                        this.app.api('module.link.insert', data);\n                    }\n                }, this),\n                closeOtherModals: false,\n            });\n        }\n        else {\n            this[modalProperty].show();\n        }\n    },\n\n    setLinkOptions: function (linkOptions) {\n        var button = this.app.toolbar.getButton('link'),\n            dropdown = button.getDropdown(),\n            items = dropdown.items,\n            newList = {},\n            counter = 0;\n\n        for (var option in linkOptions) {\n            option = linkOptions[option];\n            newList['custom'+(++counter)] = {\n                title: option.optionTitle,\n                api: 'plugin.craftEntryLinks.showModal',\n                args: {\n                    elementType: option.elementType,\n                    refHandle: option.refHandle,\n                    sources: option.sources,\n                    criteria: option.criteria\n                }\n            };\n        }\n\n        button.setDropdown($.extend(newList, items));\n    }\n});\n\n(function($R) {\n    $R.add('plugin', 'craftEntryLinks', plugin);\n})(Redactor);"]}