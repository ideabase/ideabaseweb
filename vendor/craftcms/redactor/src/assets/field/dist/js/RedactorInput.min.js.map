{"version":3,"sources":["RedactorInput.js"],"names":["window","livePreviewHideFullscreen","$","Craft","RedactorInput","Garnish","Base","extend","id","linkOptions","volumes","elementSiteId","redactorConfig","$textarea","redactor","linkOptionModals","init","settings","this","transforms","lang","redactorLang","direction","orientation","imageUpload","fileUpload","plugins","push","buttons","index","inArray","splice","lowestListButtonIndex","oldListButtons","i","length","callbacks","started","handleRedactorInit","focus","onEditorFocus","bind","blur","onEditorBlur","contextbar","showContextBar","initRedactor","selector","toolbarFixed","target","closest","toolbarFixedTarget","currentInstance","$R","toolbarButtons","toolbar","getButtonsKeys","indexOf","plugin","craftAssetImages","overrideButton","addButton","setTransforms","setVolumes","setElementSiteId","craftAssetFiles","craftEntryLinks","setLinkOptions","livePreview","on","ev","addClass","removeClass","onInitRedactor","container","getElement","leaveFullscreetOnSaveShortcut","opts","scrollPageOnReady","$doc","ready","trigger","fullscreen","close","cp","proxy","isOpen","replaceRedactorButton","key","title","allButtons","previousButton","getButtonByIndex","icon","$icon","get","placeholderKey","placeholder","addButtonAfter","remove","button","setIcon","e","justResized","current","selection","getCurrent","data","inspector","parse","repositionContextBar","top","clientY","$contextbar","height","position","left","clientX","width","css","isFigcaption","isComponentType","node","getComponent","$img","find","matches","attr","match","assetId","postActionRequest","success","image-editor","api","args","edit","set","jQuery"],"mappings":"AAAAA,OAAOC,2BAA4B,EAEnC,SAAUC,GAMNC,MAAMC,cAAgBC,QAAQC,KAAKC,QAE3BC,GAAI,KACJC,YAAa,KACbC,QAAS,KACTC,cAAe,KACfC,eAAgB,KAEhBC,UAAW,KACXC,SAAU,KACVC,iBAAkB,KAElBC,KAAM,SAASC,GAgCX,GA/BAC,KAAKV,GAAKS,EAAST,GACnBU,KAAKT,YAAcQ,EAASR,YAC5BS,KAAKR,QAAUO,EAASP,QACxBQ,KAAKC,WAAaF,EAASE,WAC3BD,KAAKP,cAAgBM,EAASN,cAC9BO,KAAKN,eAAiBK,EAASL,eAE/BM,KAAKH,oBAEAG,KAAKN,eAAeQ,OACrBF,KAAKN,eAAeQ,KAAOH,EAASI,cAGnCH,KAAKN,eAAeU,YACrBJ,KAAKN,eAAeU,UAAaL,EAASK,WAAanB,MAAMoB,aAGjEL,KAAKN,eAAeY,aAAc,EAClCN,KAAKN,eAAea,YAAa,SAGtBP,KAAKN,eAAec,oBAC3BR,KAAKN,eAAec,YAGxBR,KAAKN,eAAec,QAAQC,KAAK,oBACjCT,KAAKN,eAAec,QAAQC,KAAK,mBACjCT,KAAKN,eAAec,QAAQC,KAAK,mBACjCT,KAAKN,eAAec,QAAQC,KAAK,yBAG7BT,KAAKN,eAAegB,QAAS,CAC7B,IAAIC,GAGoE,KAAnEA,EAAQ3B,EAAE4B,QAAQ,aAAcZ,KAAKN,eAAegB,WACrDV,KAAKN,eAAegB,QAAQG,OAAOF,EAAO,EAAG,UAOjD,IAHA,IACIG,EADAC,GAAkB,gBAAiB,cAAe,SAAU,UAGvDC,EAAI,EAAGA,EAAID,EAAeE,OAAQD,KACsC,KAAxEL,EAAQ3B,EAAE4B,QAAQG,EAAeC,GAAIhB,KAAKN,eAAegB,YAC1DV,KAAKN,eAAegB,QAAQG,OAAOF,EAAO,SAEL,IAA1BG,GAAyCH,EAAQG,KACxDA,EAAwBH,SAKC,IAA1BG,GACPd,KAAKN,eAAegB,QAAQG,OAAOC,EAAuB,EAAG,SAKrEd,KAAKN,eAAewB,WAChBC,QAASlC,MAAMC,cAAckC,mBAC7BC,MAAOrB,KAAKsB,cAAcC,KAAKvB,MAC/BwB,KAAMxB,KAAKyB,aAAaF,KAAKvB,MAC7B0B,WAAY1B,KAAK2B,eAAeJ,KAAKvB,OAIzCA,KAAK4B,gBAGTA,aAAc,WACV,IAAIC,EAAW,IAAM7B,KAAKV,GAG1B,GAFAU,KAAKL,UAAYX,EAAE6C,QAE6B,IAArC7B,KAAKN,eAAeoC,cAAgC9B,KAAKN,eAAeoC,aAAc,CAE7F,IAAIC,EAAS/B,KAAKL,UAAUqC,QAAQ,wBAChCD,EAAOd,SACPjB,KAAKN,eAAeuC,mBAAqBF,IAIjD9C,MAAMC,cAAcgD,gBAAkBlC,MACjCL,UAAUC,SAASI,KAAKN,gBAE7BM,KAAKJ,SAAWuC,GAAGN,QAEwB,IAAhC7B,KAAKN,eAAegB,UAC3BV,KAAKN,eAAegB,YAGxB,IAAI0B,EAAiBpC,KAAKJ,SAASyC,QAAQC,kBAEW,IAAlDtC,KAAKN,eAAegB,QAAQ6B,QAAQ,YACK,IAArCH,EAAeG,QAAQ,SACvBvC,KAAKJ,SAAS4C,OAAOC,iBAAiBC,eAAe,SAErD1C,KAAKJ,SAAS4C,OAAOC,iBAAiBE,UAAU,QAAS3C,KAAKN,eAAegB,QAAQ6B,QAAQ,UAEjGvC,KAAKJ,SAAS4C,OAAOC,iBAAiBG,cAAc5C,KAAKC,YACzDD,KAAKJ,SAAS4C,OAAOC,iBAAiBI,WAAW7C,KAAKR,SACtDQ,KAAKJ,SAAS4C,OAAOC,iBAAiBK,iBAAiB9C,KAAKP,iBAGX,IAAjDO,KAAKN,eAAegB,QAAQ6B,QAAQ,WACI,IAApCH,EAAeG,QAAQ,QACvBvC,KAAKJ,SAAS4C,OAAOO,gBAAgBL,eAAe,QAEpD1C,KAAKJ,SAAS4C,OAAOO,gBAAgBJ,UAAU,OAAQ3C,KAAKN,eAAegB,QAAQ6B,QAAQ,SAE/FvC,KAAKJ,SAAS4C,OAAOO,gBAAgBF,WAAW7C,KAAKR,SACrDQ,KAAKJ,SAAS4C,OAAOO,gBAAgBD,iBAAiB9C,KAAKP,iBAGvB,IAApC2C,EAAeG,QAAQ,UACvBvC,KAAKJ,SAAS4C,OAAOQ,gBAAgBF,iBAAiB9C,KAAKP,eAEvDO,KAAKT,YAAY0B,QACjBjB,KAAKJ,SAAS4C,OAAOQ,gBAAgBC,eAAejD,KAAKT,eAIN,IAAvDS,KAAKN,eAAec,QAAQ+B,QAAQ,oBAAoD,IAArBtD,MAAMiE,cAAmE,IAArCpE,OAAOC,4BAC9GD,OAAOC,2BAA4B,EACnCE,MAAMiE,YAAYC,GAAG,cAAe,SAAUC,GAC3CpE,EAAE,6BAA6BqE,SAAS,YAE3CpE,MAAMiE,YAAYC,GAAG,aAAc,SAAUC,GACzCpE,EAAE,6BAA6BsE,YAAY,oBAI5CrE,MAAMC,cAAcgD,iBAG/BqB,eAAgB,SAAS3D,GAErBI,KAAKJ,SAAWA,EAGhBI,KAAKJ,SAAS4D,UAAUC,aAAaJ,SAAS,mBAE9CrD,KAAK0D,gCAED1D,KAAKJ,SAAS+D,KAAK7B,eAAiB7C,MAAMC,cAAc0E,oBACxDzE,QAAQ0E,KAAKC,MAAM,WACf3E,QAAQ0E,KAAKE,QAAQ,YAGzB9E,MAAMC,cAAc0E,mBAAoB,IAIhDtC,cAAe,WACXtB,KAAKJ,SAAS4D,UAAUC,aAAaJ,SAAS,SAC9CrD,KAAKJ,SAAS4D,UAAUC,aAAaM,QAAQ,UAGjDtC,aAAc,WACVzB,KAAKJ,SAAS4D,UAAUC,aAAaH,YAAY,SACjDtD,KAAKJ,SAAS4D,UAAUC,aAAaM,QAAQ,SAGjDL,8BAA+B,gBACoB,IAApC1D,KAAKJ,SAAS4C,OAAOwB,YAA+E,mBAA1ChE,KAAKJ,SAAS4C,OAAOwB,WAAWC,OACjGhF,MAAMiF,GAAGf,GAAG,qBAAsBnE,EAAEmF,MAAM,WAClCnE,KAAKJ,SAAS4C,OAAOwB,WAAWI,QAChCpE,KAAKJ,SAAS4C,OAAOwB,WAAWC,SAErCjE,QAIXqE,sBAAuB,SAASC,EAAKC,GAEjC,IAAIC,EAAaxE,KAAKJ,SAASyC,QAAQC,iBAGvC,IAA2B,GAFFkC,EAAWjC,QAAQ+B,GAE5C,CAIA,IAAIG,EAAiBzE,KAAKJ,SAASyC,QAAQqC,iBAAiBF,EAAWjC,QAAQ+B,IAC3EK,EAAOF,EAAeG,MAAMC,IAAI,GAEhCC,EAAiBR,EAAI,eACrBS,EAAc/E,KAAKJ,SAASyC,QAAQ2C,eAAeV,EAAKQ,GAAiBP,MAAOA,IACpFE,EAAeQ,SAGf,IAAIC,EAASlF,KAAKJ,SAASyC,QAAQ2C,eAAeF,EAAgBR,GAAMC,MAAOA,IAK/E,OAJAQ,EAAYE,SAEZC,EAAOC,QAAQR,GAERO,IAGXvD,eAAgB,SAASyD,EAAG1D,GACxB,GAAI1B,KAAKqF,YAELrF,KAAKqF,aAAc,MAFvB,CAMA,IAAIC,EAAUtF,KAAKJ,SAAS2F,UAAUC,aAClCC,EAAOzF,KAAKJ,SAAS8F,UAAUC,MAAML,GAErCM,EAAuB,SAAUR,EAAG1D,GACpC,IAAImE,EAAMT,EAAEU,QAAUpE,EAAWqE,YAAYC,SAAW,GAGpDC,GACAC,KAHOd,EAAEe,QAAUzE,EAAWqE,YAAYK,QAAU,EAGvC,KACbP,IAAKA,EAAM,MAGfnE,EAAWqE,YAAYM,IAAIJ,IAG/B,IAAKR,EAAKa,gBAAkBb,EAAKc,gBAAgB,SACjD,CACI,IAAIC,EAAOf,EAAKgB,eACZC,EAAQ1H,EAAEwH,GAAMG,KAAK,OACzB,GAAoB,IAAhBD,EAAKzF,OAAc,CACnB,IAAI2F,EAAUA,EAAUF,EAAKG,KAAK,OAAOC,MAAM,iBAC/C,GAAIF,EAAS,CACT,IAAIG,EAAUH,EAAQ,GACtB3H,MAAM+H,kBAAkB,YAAaD,QAASA,GAAU,SAAUtB,GAC9D,GAAIA,EAAKwB,QAAS,CACd,IAAIvG,GACAwG,gBACI3C,MAAOvE,KAAKJ,SAASM,KAAK2E,IAAI,gBAC9BsC,IAAK,oCACLC,KAAML,GAEVM,MACI9C,MAAOvE,KAAKJ,SAASM,KAAK2E,IAAI,QAC9BsC,IAAK,qBAETlC,QACIV,MAAOvE,KAAKJ,SAASM,KAAK2E,IAAI,UAC9BsC,IAAK,sBACLC,KAAMZ,IAId9E,EAAW4F,IAAIlC,EAAGoB,EAAM9F,GAG5BkF,EAAqBR,EAAG1D,IAC1BH,KAAKvB,SAMnB4F,EAAqBR,EAAG1D,OAI5BN,mBAAoB,WAGhBnC,MAAMC,cAAcgD,gBAAgBqB,eAAevD,SA3RnE,CA8RGuH","file":"RedactorInput.min.js","sourcesContent":["window.livePreviewHideFullscreen = false;\n\n(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    /**\n     * Redactor input class\n     */\n    Craft.RedactorInput = Garnish.Base.extend(\n        {\n            id: null,\n            linkOptions: null,\n            volumes: null,\n            elementSiteId: null,\n            redactorConfig: null,\n\n            $textarea: null,\n            redactor: null,\n            linkOptionModals: null,\n\n            init: function(settings) {\n                this.id = settings.id;\n                this.linkOptions = settings.linkOptions;\n                this.volumes = settings.volumes;\n                this.transforms = settings.transforms;\n                this.elementSiteId = settings.elementSiteId;\n                this.redactorConfig = settings.redactorConfig;\n\n                this.linkOptionModals = [];\n\n                if (!this.redactorConfig.lang) {\n                    this.redactorConfig.lang = settings.redactorLang;\n                }\n\n                if (!this.redactorConfig.direction) {\n                    this.redactorConfig.direction = (settings.direction || Craft.orientation);\n                }\n\n                this.redactorConfig.imageUpload = false;\n                this.redactorConfig.fileUpload = false;\n\n                // Prevent a JS error when calling core.destroy() when opts.plugins == false\n                if (typeof this.redactorConfig.plugins !== typeof []) {\n                    this.redactorConfig.plugins = [];\n                }\n\n                this.redactorConfig.plugins.push('craftAssetImages');\n                this.redactorConfig.plugins.push('craftAssetFiles');\n                this.redactorConfig.plugins.push('craftEntryLinks');\n                this.redactorConfig.plugins.push('craftAssetImageEditor');\n\n                // Redactor I/II config setting normalization\n                if (this.redactorConfig.buttons) {\n                    var index;\n\n                    // buttons.formatting => buttons.format\n                    if ((index = $.inArray('formatting', this.redactorConfig.buttons)) !== -1) {\n                        this.redactorConfig.buttons.splice(index, 1, 'format');\n                    }\n\n                    // buttons.unorderedlist/orderedlist/undent/indent => buttons.lists\n                    var oldListButtons = ['unorderedlist', 'orderedlist', 'undent', 'indent'],\n                        lowestListButtonIndex;\n\n                    for (var i = 0; i < oldListButtons.length; i++) {\n                        if ((index = $.inArray(oldListButtons[i], this.redactorConfig.buttons)) !== -1) {\n                            this.redactorConfig.buttons.splice(index, 1);\n\n                            if (typeof lowestListButtonIndex === 'undefined' || index < lowestListButtonIndex) {\n                                lowestListButtonIndex = index;\n                            }\n                        }\n                    }\n\n                    if (typeof lowestListButtonIndex !== 'undefined') {\n                        this.redactorConfig.buttons.splice(lowestListButtonIndex, 0, 'lists');\n                    }\n                }\n\n                // Define our callbacks\n                this.redactorConfig.callbacks = {\n                    started: Craft.RedactorInput.handleRedactorInit,\n                    focus: this.onEditorFocus.bind(this),\n                    blur: this.onEditorBlur.bind(this),\n                    contextbar: this.showContextBar.bind(this)\n                };\n\n                // Initialize Redactor\n                this.initRedactor();\n            },\n\n            initRedactor: function() {\n                var selector = '#' + this.id;\n                this.$textarea = $(selector);\n\n                if (typeof this.redactorConfig.toolbarFixed === 'undefined' || this.redactorConfig.toolbarFixed) {\n                    // Set the toolbarFixedTarget depending on the context\n                    var target = this.$textarea.closest('#content, .lp-editor');\n                    if (target.length) {\n                        this.redactorConfig.toolbarFixedTarget = target;\n                    }\n                }\n\n                Craft.RedactorInput.currentInstance = this;\n                this.$textarea.redactor(this.redactorConfig);\n\n                this.redactor = $R(selector);\n\n                if (typeof this.redactorConfig.buttons === 'undefined') {\n                    this.redactorConfig.buttons = [];\n                }\n\n                var toolbarButtons = this.redactor.toolbar.getButtonsKeys();\n\n                if (this.redactorConfig.buttons.indexOf('image') !== -1) {\n                    if (toolbarButtons.indexOf('image') !== -1) {\n                        this.redactor.plugin.craftAssetImages.overrideButton('image');\n                    } else {\n                        this.redactor.plugin.craftAssetImages.addButton('image', this.redactorConfig.buttons.indexOf('image'));\n                    }\n                    this.redactor.plugin.craftAssetImages.setTransforms(this.transforms);\n                    this.redactor.plugin.craftAssetImages.setVolumes(this.volumes);\n                    this.redactor.plugin.craftAssetImages.setElementSiteId(this.elementSiteId);\n                }\n\n                if (this.redactorConfig.buttons.indexOf('file') !== -1) {\n                    if (toolbarButtons.indexOf('file') !== -1) {\n                        this.redactor.plugin.craftAssetFiles.overrideButton('file');\n                    } else {\n                        this.redactor.plugin.craftAssetFiles.addButton('file', this.redactorConfig.buttons.indexOf('file'));\n                    }\n                    this.redactor.plugin.craftAssetFiles.setVolumes(this.volumes);\n                    this.redactor.plugin.craftAssetFiles.setElementSiteId(this.elementSiteId);\n                }\n\n                if (toolbarButtons.indexOf('link') !== -1) {\n                    this.redactor.plugin.craftEntryLinks.setElementSiteId(this.elementSiteId);\n                    \n                    if (this.linkOptions.length) {\n                        this.redactor.plugin.craftEntryLinks.setLinkOptions(this.linkOptions);\n                    }\n                }\n\n                if (this.redactorConfig.plugins.indexOf('fullscreen') !== -1 && typeof Craft.livePreview != \"undefined\" && window.livePreviewHideFullscreen === false) {\n                    window.livePreviewHideFullscreen = true;\n                    Craft.livePreview.on('beforeEnter', function (ev) {\n                       $('a.re-button.re-fullscreen').addClass('hidden');\n                    });\n                    Craft.livePreview.on('beforeExit', function (ev) {\n                        $('a.re-button.re-fullscreen').removeClass('hidden');\n                    });\n                }\n\n                delete Craft.RedactorInput.currentInstance;\n            },\n\n            onInitRedactor: function(redactor) {\n\n                this.redactor = redactor;\n\n                // Add the .focusable-input class for Craft.CP\n                this.redactor.container.getElement().addClass('focusable-input');\n\n                this.leaveFullscreetOnSaveShortcut();\n\n                if (this.redactor.opts.toolbarFixed && !Craft.RedactorInput.scrollPageOnReady) {\n                    Garnish.$doc.ready(function() {\n                        Garnish.$doc.trigger('scroll');\n                    });\n\n                    Craft.RedactorInput.scrollPageOnReady = true;\n                }\n            },\n\n            onEditorFocus: function() {\n                this.redactor.container.getElement().addClass('focus');\n                this.redactor.container.getElement().trigger('focus');\n            },\n\n            onEditorBlur: function() {\n                this.redactor.container.getElement().removeClass('focus');\n                this.redactor.container.getElement().trigger('blur');\n            },\n\n            leaveFullscreetOnSaveShortcut: function() {\n                if (typeof this.redactor.plugin.fullscreen !== 'undefined' && typeof this.redactor.plugin.fullscreen.close === 'function') {\n                    Craft.cp.on('beforeSaveShortcut', $.proxy(function() {\n                        if (this.redactor.plugin.fullscreen.isOpen) {\n                            this.redactor.plugin.fullscreen.close();\n                        }\n                    }, this));\n                }\n            },\n\n            replaceRedactorButton: function(key, title) {\n                // Ignore if the button isn't in use\n                var allButtons = this.redactor.toolbar.getButtonsKeys();\n                var currentButtonIndex = allButtons.indexOf(key);\n\n                if (currentButtonIndex == -1) {\n                    return;\n                }\n\n                var previousButton = this.redactor.toolbar.getButtonByIndex(allButtons.indexOf(key));\n                var icon = previousButton.$icon.get(0);\n\n                var placeholderKey = key+'_placeholder';\n                var placeholder = this.redactor.toolbar.addButtonAfter(key, placeholderKey, {title: title});\n                previousButton.remove();\n\n                // Create the new button\n                var button = this.redactor.toolbar.addButtonAfter(placeholderKey, key, {title: title});\n                placeholder.remove();\n\n                button.setIcon(icon);\n\n                return button;\n            },\n\n            showContextBar: function(e, contextbar) {\n                if (this.justResized)\n                {\n                    this.justResized = false;\n                    return;\n                }\n\n                var current = this.redactor.selection.getCurrent();\n                var data = this.redactor.inspector.parse(current);\n\n                var repositionContextBar = function (e, contextbar) {\n                    var top = e.clientY - contextbar.$contextbar.height() - 10;\n                    var left = e.clientX - contextbar.$contextbar.width() / 2;\n\n                    var position = {\n                        left: left + 'px',\n                        top: top + 'px'\n                    };\n\n                    contextbar.$contextbar.css(position);\n                };\n\n                if (!data.isFigcaption() && data.isComponentType('image'))\n                {\n                    var node = data.getComponent();\n                    var $img  = $(node).find('img');\n                    if ($img.length === 1) {\n                        var matches = matches = $img.attr('src').match(/#asset:(\\d+)/i);\n                        if (matches) {\n                            var assetId = matches[1];\n                            Craft.postActionRequest('redactor', {assetId: assetId}, function (data) {\n                                if (data.success) {\n                                    var buttons = {\n                                        \"image-editor\": {\n                                            title: this.redactor.lang.get('image-editor'),\n                                            api: 'plugin.craftAssetImageEditor.open',\n                                            args: assetId\n                                        },\n                                        \"edit\": {\n                                            title: this.redactor.lang.get('edit'),\n                                            api: 'module.image.open'\n                                        },\n                                        \"remove\": {\n                                            title: this.redactor.lang.get('delete'),\n                                            api: 'module.image.remove',\n                                            args: node\n                                        }\n                                    };\n\n                                    contextbar.set(e, node, buttons);\n                                }\n\n                                repositionContextBar(e, contextbar);\n                            }.bind(this));\n                        }\n                    }\n\n                }\n\n                repositionContextBar(e, contextbar);\n            }\n        },\n        {\n            handleRedactorInit: function() {\n                // `this` is the current Redactor instance.\n                // `Craft.RedactorInput.currentInstance` is the current RedactorInput instance\n                Craft.RedactorInput.currentInstance.onInitRedactor(this);\n            }\n        });\n})(jQuery);\n"]}