{"version":3,"sources":["CraftAssetImageEditor.js"],"names":["plugin","$","extend","Craft","Redactor","PluginBase","assetId","start","open","this","settings","allowSavingAsNew","onSave","reloadImage","bind","allowDegreeFractions","isImagick","AssetImageEditor","$images","app","editor","getElement","find","refreshNodeSource","node","matches","src","match","params","handle","postActionRequest","data","url","Date","getTime","nodes","storage","observeImages","add"],"mappings":"AAAA,IAAIA,OAASC,EAAEC,OAAO,GAAIC,MAAMC,SAASC,WAAY,CAEjDC,QAAS,KAETC,MAAO,aAGPC,KAAM,SAASF,GACXG,KAAKH,QAAUA,EAEf,IAAII,EAAW,CACXC,kBAAkB,EAClBC,OAAQH,KAAKI,YAAYC,KAAKL,MAC9BM,qBAAsBZ,MAAMa,WAGhC,IAAIb,MAAMc,iBAAiBX,EAASI,IAGxCG,YAAa,WACT,IACIK,EADUT,KAAKU,IAAIC,OAAOC,aACRC,KAAK,gBAEvBC,EAAoB,SAASC,GAC7B,IAAIC,EAAUD,EAAKE,IAAIC,MAAM,uCAG7B,GAAIF,GAAWA,EAAQ,IAAMhB,KAAKH,QAE9B,GAAKmB,EAAQ,GAEN,CACH,IAAIG,EAAS,CACTtB,QAASmB,EAAQ,GACjBI,OAAQJ,EAAQ,IAEpBtB,MAAM2B,kBAAkB,4BAA6BF,EAAQ,SAASG,GAClEP,EAAKE,IAAMK,EAAKC,IAAM,KAAO,IAAIC,MAAOC,UAAa,UAAYT,EAAQ,GAAK,cAAgBA,EAAQ,UAP1GD,EAAKE,IAAMD,EAAQ,GAAK,KAAO,IAAIQ,MAAOC,UAAa,UAAYT,EAAQ,IAWrFX,KAAKL,MAEP,IAAK,IAAIe,KAAQN,EAAQiB,MAErBZ,EADAC,EAAON,EAAQiB,MAAMX,IAIzBf,KAAKU,IAAIiB,QAAQC,mBAOtBjC,SADIkC,IAAI,SAAU,wBAAyBtC","file":"CraftAssetImageEditor.min.js","sourcesContent":["var plugin = $.extend({}, Craft.Redactor.PluginBase, {\r\n\r\n    assetId: null,\r\n\r\n    start: function() {\r\n    },\r\n\r\n    open: function(assetId) {\r\n        this.assetId = assetId;\r\n\r\n        var settings = {\r\n            allowSavingAsNew: false,\r\n            onSave: this.reloadImage.bind(this),\r\n            allowDegreeFractions: Craft.isImagick\r\n        };\r\n\r\n        new Craft.AssetImageEditor(assetId, settings);\r\n    },\r\n\r\n    reloadImage: function() {\r\n        var $editor = this.app.editor.getElement();\r\n        var $images = $editor.find('[data-image]');\r\n\r\n        var refreshNodeSource = function(node) {\r\n            var matches = node.src.match(/(.*)#asset:(\\d+)(:transform:(.*))?/i);\r\n\r\n            // Find all instances of THIS asset.\r\n            if (matches && matches[2] == this.assetId) {\r\n                // Not a transform\r\n                if (!matches[4]) {\r\n                    node.src = matches[1] + '?' + (new Date().getTime()) + '#asset:' + matches[2];\r\n                } else {\r\n                    var params = {\r\n                        assetId: matches[2],\r\n                        handle: matches[4]\r\n                    };\r\n                    Craft.postActionRequest('assets/generate-transform', params, function(data) {\r\n                        node.src = data.url + '?' + (new Date().getTime()) + '#asset:' + matches[2] + ':transform:' + matches[4];\r\n                    });\r\n                }\r\n            }\r\n        }.bind(this);\r\n\r\n        for (var node in $images.nodes) {\r\n            node = $images.nodes[node];\r\n            refreshNodeSource(node);\r\n        }\r\n\r\n        this.app.storage.observeImages();\r\n\r\n    }\r\n});\r\n\r\n(function($R) {\r\n    $R.add('plugin', 'craftAssetImageEditor', plugin);\r\n})(Redactor);"]}